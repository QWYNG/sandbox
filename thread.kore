[topCellInitializer{}(LblinitGeneratedTopCell{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

module BASIC-K
    sort SortK{} []
    sort SortKItem{} []
endmodule
[]
module KSEQ
    import BASIC-K []
    symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol dotk{}() : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol append{}(SortK{}, SortK{}) : SortK{} [function{}(), functional{}()]
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, dotk{}()),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                TAIL:SortK{},
                \top{SortK{}}()
            )
        )
    ) []
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, kseq{}(K:SortKItem{}, KS:SortK{})),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                kseq{}(K:SortKItem{}, append{}(KS:SortK{}, TAIL:SortK{})),
                \top{SortK{}}()
            )
        )
    ) []
endmodule
[]
module INJ
    symbol inj{From, To}(From) : To [sortInjection{}()]
    axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) [simplification{}()]
endmodule
[]
module K
    import KSEQ []
    import INJ []
    alias weakExistsFinally{A}(A) : A where weakExistsFinally{A}(@X:A) := @X:A []
    alias weakAlwaysFinally{A}(A) : A where weakAlwaysFinally{A}(@X:A) := @X:A []
    alias allPathGlobally{A}(A) : A where allPathGlobally{A}(@X:A) := @X:A []
endmodule
[]

module THREAD

// imports
  import K []

// sorts
  hooked-sort SortFloat{} [hasDomainValues{}(), hook{}("FLOAT.Float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1483,3,1483,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-sort SortSet{} [concat{}(Lbl'Unds'Set'Unds'{}()), element{}(LblSetItem{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(700,3,700,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'Set{}())]
  sort SortHoldsCellOpt{} []
  sort SortNextLocCell{} []
  sort SortThreadCellFragment{} []
  sort SortIds{} []
  sort SortTCellFragment{} []
  sort SortIdCell{} []
  sort SortStoreCellOpt{} []
  hooked-sort SortThreadCellSet{} [concat{}(Lbl'Unds'ThreadCellSet'Unds'{}()), element{}(LblThreadCellSetItem{}()), hook{}("SET.Set"), unit{}(Lbl'Stop'ThreadCellSet{}())]
  sort SortCrntObjCellFragment{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(99,3,99,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  sort SortStoreCell{} []
  sort SortKCellOpt{} []
  sort SortEnvCell{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,3,96,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  sort SortThreadsCell{} []
  sort SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,3,50,13)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  sort SortThreadCell{} []
  sort SortIOInt{} []
  sort SortVals{} []
  sort SortThreadsCellOpt{} []
  sort SortGeneratedTopCellFragment{} []
  sort SortIOFile{} []
  hooked-sort SortList{} [concat{}(Lbl'Unds'List'Unds'{}()), element{}(LblListItem{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(913,3,913,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'List{}())]
  sort SortNextLocCellOpt{} []
  sort SortEnvStackCell{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,3,98,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  sort SortKCell{} []
  sort SortEnvCellOpt{} []
  sort SortGeneratedTopCell{} []
  sort SortGeneratedCounterCell{} []
  sort SortBusyCell{} []
  sort SortTCellOpt{} []
  hooked-sort SortMap{} [concat{}(Lbl'Unds'Map'Unds'{}()), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,3,218,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'Map{}())]
  hooked-sort SortString{} [hasDomainValues{}(), hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1696,3,1696,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  sort SortIOString{} []
  sort SortId{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2255,3,2255,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), token{}()]
  sort SortBlock{} []
  sort SortGeneratedCounterCellOpt{} []
  sort SortThreadsCellFragment{} []
  sort SortIdCellOpt{} []
  sort SortKConfigVar{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,3,40,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/kast.md)"), token{}()]
  sort SortExp{} []
  sort SortTerminatedCellOpt{} []
  hooked-sort SortInt{} [hasDomainValues{}(), hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1198,3,1198,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  sort SortBusyCellOpt{} []
  sort SortIOError{} []
  sort SortExps{} []
  sort SortTerminatedCell{} []
  sort SortKResult{} []
  sort SortControlCell{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,3,97,21)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  sort SortHoldsCell{} []
  sort SortStream{} []
  sort SortTCell{} []
  sort SortStmt{} []
  hooked-sort SortBool{} [hasDomainValues{}(), hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1077,3,1077,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// symbols
  symbol Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'Hash'E2BIG{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2400,22,2400,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#E2BIG")]
  symbol Lbl'Hash'EACCES{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2401,22,2401,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EACCES")]
  symbol Lbl'Hash'EADDRINUSE{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2450,22,2450,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EADDRINUSE")]
  symbol Lbl'Hash'EADDRNOTAVAIL{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2451,22,2451,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EADDRNOTAVAIL")]
  symbol Lbl'Hash'EAFNOSUPPORT{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2449,22,2449,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EAFNOSUPPORT")]
  symbol Lbl'Hash'EAGAIN{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2402,22,2402,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EAGAIN")]
  symbol Lbl'Hash'EALREADY{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2439,22,2439,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EALREADY")]
  symbol Lbl'Hash'EBADF{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2403,22,2403,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EBADF")]
  symbol Lbl'Hash'EBUSY{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2404,22,2404,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EBUSY")]
  symbol Lbl'Hash'ECHILD{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2405,22,2405,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ECHILD")]
  symbol Lbl'Hash'ECONNABORTED{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2455,22,2455,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ECONNABORTED")]
  symbol Lbl'Hash'ECONNREFUSED{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2463,22,2463,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ECONNREFUSED")]
  symbol Lbl'Hash'ECONNRESET{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2456,22,2456,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ECONNRESET")]
  symbol Lbl'Hash'EDEADLK{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2406,22,2406,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EDEADLK")]
  symbol Lbl'Hash'EDESTADDRREQ{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2441,22,2441,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EDESTADDRREQ")]
  symbol Lbl'Hash'EDOM{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2407,22,2407,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EDOM")]
  symbol Lbl'Hash'EEXIST{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2408,22,2408,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EEXIST")]
  symbol Lbl'Hash'EFAULT{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2409,22,2409,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EFAULT")]
  symbol Lbl'Hash'EFBIG{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2410,22,2410,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EFBIG")]
  symbol Lbl'Hash'EHOSTDOWN{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2464,22,2464,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EHOSTDOWN")]
  symbol Lbl'Hash'EHOSTUNREACH{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2465,22,2465,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EHOSTUNREACH")]
  symbol Lbl'Hash'EINPROGRESS{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2438,22,2438,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EINPROGRESS")]
  symbol Lbl'Hash'EINTR{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2411,22,2411,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EINTR")]
  symbol Lbl'Hash'EINVAL{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2412,22,2412,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EINVAL")]
  symbol Lbl'Hash'EIO{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2413,22,2413,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EIO")]
  symbol Lbl'Hash'EISCONN{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2458,22,2458,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EISCONN")]
  symbol Lbl'Hash'EISDIR{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2414,22,2414,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EISDIR")]
  symbol Lbl'Hash'ELOOP{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2466,22,2466,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ELOOP")]
  symbol Lbl'Hash'EMFILE{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2415,22,2415,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EMFILE")]
  symbol Lbl'Hash'EMLINK{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2416,22,2416,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EMLINK")]
  symbol Lbl'Hash'EMSGSIZE{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2442,22,2442,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EMSGSIZE")]
  symbol Lbl'Hash'ENAMETOOLONG{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2417,22,2417,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENAMETOOLONG")]
  symbol Lbl'Hash'ENETDOWN{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2452,22,2452,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENETDOWN")]
  symbol Lbl'Hash'ENETRESET{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2454,22,2454,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENETRESET")]
  symbol Lbl'Hash'ENETUNREACH{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2453,22,2453,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENETUNREACH")]
  symbol Lbl'Hash'ENFILE{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2418,22,2418,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENFILE")]
  symbol Lbl'Hash'ENOBUFS{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2457,22,2457,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOBUFS")]
  symbol Lbl'Hash'ENODEV{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2419,22,2419,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENODEV")]
  symbol Lbl'Hash'ENOENT{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2420,22,2420,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOENT")]
  symbol Lbl'Hash'ENOEXEC{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2421,22,2421,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOEXEC")]
  symbol Lbl'Hash'ENOLCK{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2422,22,2422,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOLCK")]
  symbol Lbl'Hash'ENOMEM{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2423,22,2423,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOMEM")]
  symbol Lbl'Hash'ENOPROTOOPT{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2444,22,2444,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOPROTOOPT")]
  symbol Lbl'Hash'ENOSPC{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2424,22,2424,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOSPC")]
  symbol Lbl'Hash'ENOSYS{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2425,22,2425,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOSYS")]
  symbol Lbl'Hash'ENOTCONN{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2459,22,2459,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOTCONN")]
  symbol Lbl'Hash'ENOTDIR{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2426,22,2426,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOTDIR")]
  symbol Lbl'Hash'ENOTEMPTY{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2427,22,2427,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOTEMPTY")]
  symbol Lbl'Hash'ENOTSOCK{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2440,22,2440,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOTSOCK")]
  symbol Lbl'Hash'ENOTTY{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2428,22,2428,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENOTTY")]
  symbol Lbl'Hash'ENXIO{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2429,22,2429,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ENXIO")]
  symbol Lbl'Hash'EOF{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2398,22,2398,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EOF")]
  symbol Lbl'Hash'EOPNOTSUPP{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2447,22,2447,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EOPNOTSUPP")]
  symbol Lbl'Hash'EOVERFLOW{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2467,22,2467,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EOVERFLOW")]
  symbol Lbl'Hash'EPERM{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2430,22,2430,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EPERM")]
  symbol Lbl'Hash'EPFNOSUPPORT{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2448,22,2448,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EPFNOSUPPORT")]
  symbol Lbl'Hash'EPIPE{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2431,22,2431,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EPIPE")]
  symbol Lbl'Hash'EPROTONOSUPPORT{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2445,22,2445,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EPROTONOSUPPORT")]
  symbol Lbl'Hash'EPROTOTYPE{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2443,22,2443,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EPROTOTYPE")]
  symbol Lbl'Hash'ERANGE{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2432,22,2432,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ERANGE")]
  symbol Lbl'Hash'EROFS{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2433,22,2433,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EROFS")]
  symbol Lbl'Hash'ESHUTDOWN{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2460,22,2460,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ESHUTDOWN")]
  symbol Lbl'Hash'ESOCKTNOSUPPORT{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2446,22,2446,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ESOCKTNOSUPPORT")]
  symbol Lbl'Hash'ESPIPE{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2434,22,2434,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ESPIPE")]
  symbol Lbl'Hash'ESRCH{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2435,22,2435,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ESRCH")]
  symbol Lbl'Hash'ETIMEDOUT{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2462,22,2462,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ETIMEDOUT")]
  symbol Lbl'Hash'ETOOMANYREFS{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2461,22,2461,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#ETOOMANYREFS")]
  symbol Lbl'Hash'EWOULDBLOCK{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2437,22,2437,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EWOULDBLOCK")]
  symbol Lbl'Hash'EXDEV{}() : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2436,22,2436,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#EXDEV")]
  hooked-symbol Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [function{}(), hook{}("IO.accept"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2565,20,2565,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(SortK{}) : SortStream{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2669,21,2669,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [function{}(), hook{}("IO.close"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2539,16,2539,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(SortK{}, SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  hooked-symbol Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [function{}(), hook{}("IO.getc"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2520,20,2520,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2670,21,2670,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [function{}(), hook{}("IO.lock"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2551,16,2551,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'log{}(SortString{}) : SortK{} [function{}(), functional{}(), hook{}("IO.logString"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2645,16,2645,108)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#log"), total{}()]
  hooked-symbol Lbl'Hash'logToFile{}(SortString{}, SortString{}) : SortK{} [function{}(), functional{}(), hook{}("IO.log"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2636,16,2636,128)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#logToFile"), total{}()]
  hooked-symbol Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String{}(SortString{}) : SortIOFile{} [function{}(), hook{}("IO.mkstemp"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2613,21,2613,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(SortString{}) : SortIOInt{} [function{}(), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2490,20,2490,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortIOInt{} [function{}(), hook{}("IO.open"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2491,18,2491,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2672,21,2672,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortStream{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2671,21,2671,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [function{}(), hook{}("IO.putc"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2530,16,2530,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortIOString{} [function{}(), hook{}("IO.read"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2521,23,2521,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(SortString{}) : SortK{} [function{}(), functional{}(), hook{}("IO.remove"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2624,16,2624,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [function{}(), hook{}("IO.seek"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2506,16,2506,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [function{}(), hook{}("IO.seekEnd"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2507,16,2507,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [function{}(), hook{}("IO.shutdownWrite"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2566,16,2566,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}() : SortInt{} [function{}(), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2586,19,2586,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}() : SortInt{} [function{}(), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2584,18,2584,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}() : SortInt{} [function{}(), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2585,19,2585,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [function{}(), hook{}("IO.system"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2602,20,2602,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbl'Hash'systemResult{}(SortInt{}, SortString{}, SortString{}) : SortKItem{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2603,20,2603,135)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#systemResult")]
  hooked-symbol Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [function{}(), hook{}("IO.tell"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2505,20,2505,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbl'Hash'tempFile{}(SortString{}, SortInt{}) : SortIOFile{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2615,21,2615,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#tempFile")]
  hooked-symbol Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int{}() : SortInt{} [function{}(), hook{}("IO.time"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2575,18,2575,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'trace{}(SortKItem{}) : SortK{} [function{}(), functional{}(), hook{}("IO.traceTerm"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2656,16,2656,111)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#trace"), total{}()]
  hooked-symbol Lbl'Hash'traceK{}(SortK{}) : SortK{} [function{}(), functional{}(), hook{}("IO.traceTerm"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2657,16,2657,112)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#traceK"), total{}()]
  symbol Lbl'Hash'unknownIOError{}(SortInt{}) : SortIOError{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2399,22,2399,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("#unknownIOError")]
  hooked-symbol Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [function{}(), hook{}("IO.unlock"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2552,16,2552,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(SortInt{}, SortString{}) : SortK{} [function{}(), hook{}("IO.write"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2531,16,2531,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(SortId{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,18,16,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,18,23,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [function{}(), functional{}(), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(937,19,937,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smtlib{}("smt_seq_nil"), symbol'Kywd'{}(".List"), total{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}() : SortExps{} [anywhere{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)"), symbol'Kywd'{}(".List{\"_,__THREAD-SYNTAX\"}")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids{}() : SortIds{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(47,19,47,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)"), symbol'Kywd'{}(".List{\"_,__THREAD-SYNTAX\"}")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}() : SortVals{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,19,51,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)"), symbol'Kywd'{}(".List{\"_,__THREAD-SYNTAX\"}")]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [function{}(), functional{}(), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,18,248,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(".Map"), total{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [function{}(), functional{}(), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(729,18,729,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(".Set"), total{}()]
  hooked-symbol Lbl'Stop'ThreadCellSet{}() : SortThreadCellSet{} [function{}(), hook{}("SET.unit")]
  symbol Lbl'-LT-'T'-GT-'{}(SortThreadsCell{}, SortStoreCell{}, SortBusyCell{}, SortTerminatedCell{}, SortNextLocCell{}) : SortTCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(104,15,118,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'T'-GT-'-fragment{}(SortThreadsCellOpt{}, SortStoreCellOpt{}, SortBusyCellOpt{}, SortTerminatedCellOpt{}, SortNextLocCellOpt{}) : SortTCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'busy'-GT-'{}(SortSet{}) : SortBusyCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(115,17,115,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'env'-GT-'{}(SortMap{}) : SortEnvCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(108,21,108,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [cell{}(), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortTCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [cell{}(), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortTCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'holds'-GT-'{}(SortMap{}) : SortHoldsCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(109,21,109,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'id'-GT-'{}(SortInt{}) : SortIdCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(110,21,110,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(107,21,107,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'nextLoc'-GT-'{}(SortInt{}) : SortNextLocCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,17,117,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'store'-GT-'{}(SortMap{}) : SortStoreCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,17,114,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'terminated'-GT-'{}(SortSet{}) : SortTerminatedCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,17,116,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'thread'-GT-'{}(SortKCell{}, SortEnvCell{}, SortHoldsCell{}, SortIdCell{}) : SortThreadCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,19,111,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'thread'-GT-'-fragment{}(SortKCellOpt{}, SortEnvCellOpt{}, SortHoldsCellOpt{}, SortIdCellOpt{}) : SortThreadCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'threads'-GT-'{}(SortThreadCellSet{}) : SortThreadsCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(105,17,112,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'-LT-'threads'-GT-'-fragment{}(SortThreadCellSet{}) : SortThreadsCellFragment{} [constructor{}(), functional{}(), injective{}()]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [function{}(), hook{}("STRING.base2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1825,21,1825,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(SortBool{}) : SortString{} [function{}(), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1775,21,1775,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [function{}(), functional{}(), hook{}("STRING.float2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1802,21,1802,101)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LblFloatFormat{}(SortFloat{}, SortString{}) : SortString{} [function{}(), hook{}("STRING.floatFormat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1803,21,1803,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("FloatFormat")]
  hooked-symbol LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(SortId{}) : SortString{} [function{}(), functional{}(), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2262,21,2262,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [function{}(), functional{}(), hook{}("STRING.int2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1824,21,1824,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [function{}(), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(965,20,965,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("List:get")]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [function{}(), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,19,1012,112)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("List:range")]
  hooked-symbol LblList'Coln'set{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [function{}(), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(974,19,974,108)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("List:set")]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [function{}(), functional{}(), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,19,945,124)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smtlib{}("smt_seq_elem"), symbol'Kywd'{}("ListItem"), total{}()]
  hooked-symbol LblMap'Coln'choice{}(SortMap{}) : SortKItem{} [function{}(), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,20,393,101)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Map:choice")]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [function{}(), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,20,271,105)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Map:lookup")]
  hooked-symbol LblMap'Coln'lookupOrDefault{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [function{}(), functional{}(), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,20,281,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Map:lookupOrDefault"), total{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,18,290,132)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Map:update"), total{}()]
  hooked-symbol LblSet'Coln'choice{}(SortSet{}) : SortKItem{} [function{}(), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(804,20,804,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Set:choice")]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [function{}(), functional{}(), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(769,18,769,106)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Set:difference"), total{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [function{}(), functional{}(), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(777,19,777,94)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Set:in"), total{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [function{}(), functional{}(), hook{}("SET.element"), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(737,18,737,111)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("SetItem"), total{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [function{}(), hook{}("STRING.string2base"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1826,21,1826,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(SortString{}) : SortBool{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1781,19,1781,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [function{}(), hook{}("STRING.string2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1804,21,1804,94)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(SortString{}) : SortId{} [function{}(), functional{}(), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2263,17,2263,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [function{}(), hook{}("STRING.string2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1823,21,1823,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblThreadCellSetItem{}(SortThreadCell{}) : SortThreadCellSet{} [function{}(), hook{}("SET.element")]
  symbol Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1248,18,1250,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("(ite (or (= 0 (mod #1 #2)) (>= #1 0)) (mod #1 #2) (ite (> #2 0) (- (mod #1 #2) #2) (+ (mod #1 #2) #2)))"), symbol'Kywd'{}("_%Int_")]
  symbol Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,18,42,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1261,18,1261,125)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smtlib{}("andInt"), symbol'Kywd'{}("_&Int_"), total{}()]
  symbol Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1242,18,1242,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("*"), symbol'Kywd'{}("_*Int_"), total{}()]
  symbol Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1255,18,1255,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("+"), symbol'Kywd'{}("_+Int_"), total{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [function{}(), functional{}(), hook{}("STRING.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1714,21,1714,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExps{} [anywhere{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(SortId{}, SortIds{}) : SortIds{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(47,19,47,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(SortVal{}, SortVals{}) : SortVals{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,19,51,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1256,18,1256,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("-"), symbol'Kywd'{}("_-Int_"), total{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,18,311,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'THREAD'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(SortInt{}, SortInt{}, SortK{}) : SortMap{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,18,289,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(SortExp{}, SortId{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1245,18,1247,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("(ite (or (= 0 (mod #1 #2)) (>= #1 0)) (div #1 #2) (ite (> #2 0) (+ (div #1 #2) 1) (- (div #1 #2) 1)))"), symbol'Kywd'{}("_/Int_")]
  symbol Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,18,28,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1259,18,1259,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smtlib{}("shlInt"), symbol'Kywd'{}("_<<Int_")]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1317,19,1317,105)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("<="), symbol'Kywd'{}("_<=Int_"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [function{}(), functional{}(), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,19,383,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [function{}(), functional{}(), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(786,19,786,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [function{}(), functional{}(), hook{}("STRING.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1859,19,1859,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1318,19,1318,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("<"), symbol'Kywd'{}("_<Int_"), total{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [function{}(), functional{}(), hook{}("STRING.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1858,19,1858,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1118,19,1118,126)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("distinct"), symbol'Kywd'{}("_=/=Bool_"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1322,19,1322,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("distinct"), symbol'Kywd'{}("_=/=Int_"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [function{}(), functional{}(), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2293,19,2293,138)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("distinct"), symbol'Kywd'{}("_=/=K_"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [function{}(), functional{}(), hook{}("STRING.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1855,19,1855,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1117,19,1117,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("="), symbol'Kywd'{}("_==Bool_"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1321,19,1321,110)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("="), symbol'Kywd'{}("_==Int_"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [function{}(), functional{}(), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2292,19,2292,127)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("="), symbol'Kywd'{}("_==K_"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [function{}(), functional{}(), hook{}("STRING.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1854,19,1854,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,18,45,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1319,19,1319,105)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}(">="), symbol'Kywd'{}("_>=Int_"), total{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [function{}(), functional{}(), hook{}("STRING.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1861,19,1861,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1258,18,1258,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smtlib{}("shrInt"), symbol'Kywd'{}("_>>Int_")]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1320,19,1320,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}(">"), symbol'Kywd'{}("_>Int_"), total{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [function{}(), functional{}(), hook{}("STRING.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1860,19,1860,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [element{}(LblListItem{}()), function{}(), functional{}(), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,19,929,180)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smtlib{}("smt_seq_concat"), symbol'Kywd'{}("_List_"), total{}(), unit{}(Lbl'Stop'List{}())]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), function{}(), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,18,240,165)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("_Map_"), unit{}(Lbl'Stop'Map{}())]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [element{}(LblSetItem{}()), function{}(), hook{}("SET.concat"), idem{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(721,18,721,157)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("_Set_"), unit{}(Lbl'Stop'Set{}())]
  hooked-symbol Lbl'Unds'ThreadCellSet'Unds'{}(SortThreadCellSet{}, SortThreadCellSet{}) : SortThreadCellSet{} [element{}(LblThreadCellSetItem{}()), function{}(), hook{}("SET.concat"), idem{}(), unit{}(Lbl'Stop'ThreadCellSet{}())]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,18,299,109)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("_[_<-undef]"), total{}()]
  symbol Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1240,18,1240,131)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("(mod (^ #1 #2) #3)"), symbol'Kywd'{}("_^%Int__")]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1239,18,1239,109)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("^"), symbol'Kywd'{}("_^Int_")]
  symbol Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(SortStmt{}, SortStmt{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(72,19,72,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1110,19,1110,138)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("and"), symbol'Kywd'{}("_andBool_"), total{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1111,19,1111,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("and"), symbol'Kywd'{}("_andThenBool_"), total{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1252,18,1252,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("div"), symbol'Kywd'{}("_divInt_")]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1331,19,1331,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1115,19,1115,145)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("=>"), symbol'Kywd'{}("_impliesBool_"), total{}()]
  hooked-symbol Lbl'Unds'inList'Unds'{}(SortKItem{}, SortList{}) : SortBool{} [function{}(), functional{}(), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1021,19,1021,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("_inList_"), total{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [function{}(), functional{}(), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,19,357,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(SortExp{}, SortId{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1253,18,1253,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("mod"), symbol'Kywd'{}("_modInt_")]
  hooked-symbol Lbl'Unds'orBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1113,19,1113,135)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("or"), symbol'Kywd'{}("_orBool_"), total{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1114,19,1114,143)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("or"), symbol'Kywd'{}("_orElseBool_"), total{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1112,19,1112,138)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("xor"), symbol'Kywd'{}("_xorBool_"), total{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1263,18,1263,127)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smtlib{}("xorInt"), symbol'Kywd'{}("_xorInt_"), total{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.element"), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,18,257,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("_|->_"), total{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1265,18,1265,123)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smtlib{}("orInt"), symbol'Kywd'{}("_|Int_"), total{}()]
  hooked-symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [function{}(), functional{}(), hook{}("SET.union"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(748,18,748,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1282,18,1282,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), total{}()]
  symbol Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,19,68,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblarray'LParUndsCommUndsRParUnds'THREAD'Unds'Val'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortVal{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(89,18,89,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1307,18,1307,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [function{}(), hook{}("STRING.category"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1871,21,1871,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [function{}(), hook{}("STRING.chr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1731,21,1731,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(SortId{}, SortBlock{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,19,9,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(SortId{}, SortId{}, SortBlock{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,19,10,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [function{}(), functional{}(), hook{}("STRING.countAllOccurrences"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1844,18,1844,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [function{}(), hook{}("STRING.directionality"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1872,21,1872,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [function{}(), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1002,19,1002,100)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [function{}(), hook{}("STRING.findChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1768,18,1768,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [function{}(), hook{}("STRING.find"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1757,18,1757,111)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lblfor'LParUndsUndsSClnUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(SortStmt{}, SortExp{}, SortExp{}, SortBlock{}) : SortStmt{} [functional{}(), injective{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,19,61,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(SortInt{}) : SortId{} [freshGenerator{}(), function{}(), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2264,17,2264,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [freshGenerator{}(), function{}(), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1445,18,1445,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [function{}()]
  symbol Lblif'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(SortExp{}, SortBlock{}) : SortStmt{} [functional{}(), injective{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,19,59,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(SortExp{}, SortBlock{}, SortBlock{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol LblinitBusyCell{}() : SortBusyCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitEnvCell{}() : SortEnvCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [function{}()]
  symbol LblinitHoldsCell{}() : SortHoldsCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitIdCell{}() : SortIdCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [function{}()]
  symbol LblinitNextLocCell{}() : SortNextLocCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitStoreCell{}() : SortStoreCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitTCell{}(SortMap{}) : SortTCell{} [function{}()]
  symbol LblinitTerminatedCell{}() : SortTerminatedCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitThreadCell{}(SortMap{}) : SortThreadCellSet{} [function{}()]
  symbol LblinitThreadsCell{}(SortMap{}) : SortThreadsCell{} [function{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [function{}(), functional{}(), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(759,18,759,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol LblisBlock{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisBool{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisBusyCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisBusyCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisControlCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisCrntObjCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisEnvCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisEnvCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisEnvStackCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisExp{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisExps{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisFloat{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisHoldsCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisHoldsCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisIOError{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisIOFile{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisIOInt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisIOString{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisId{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisIdCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisIdCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisIds{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisInt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisK{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisKCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisKItem{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisKResult{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisList{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisMap{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisNextLocCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisNextLocCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisStmt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisStoreCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisStoreCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisStream{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisString{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTerminatedCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTerminatedCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisThreadCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisThreadCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisThreadCellSet{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisThreadsCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisThreadsCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisThreadsCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisVal{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisVals{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  hooked-symbol Lblite{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [function{}(), functional{}(), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2297,26,2297,132)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("ite"), symbol'Kywd'{}("ite"), total{}()]
  symbol Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,19,67,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [function{}(), functional{}(), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,18,341,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [function{}(), hook{}("MAP.keys_list"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,19,349,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [function{}(), functional{}(), hook{}("STRING.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1722,18,1722,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lblloc'LParUndsRParUnds'THREAD'Unds'Val'Unds'Int{}(SortInt{}) : SortVal{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,18,177,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [function{}(), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1293,18,1293,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(SortInt{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(165,18,165,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(SortK{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,18,172,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [function{}(), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(983,19,983,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1274,18,1274,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("(ite (< #1 #2) #2 #1)"), total{}()]
  symbol Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(SortId{}, SortIds{}, SortBlock{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,19,8,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1273,18,1273,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("(ite (< #1 #2) #1 #2)"), total{}()]
  hooked-symbol LblnewUUID'Unds'STRING-COMMON'Unds'String{}() : SortString{} [function{}(), hook{}("STRING.uuid"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1874,21,1874,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(SortId{}, SortExps{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol LblnoBusyCell{}() : SortBusyCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoEnvCell{}() : SortEnvCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoHoldsCell{}() : SortHoldsCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoIdCell{}() : SortIdCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoKCell{}() : SortKCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoNextLocCell{}() : SortNextLocCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoStoreCell{}() : SortStoreCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoTCell{}() : SortTCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoTerminatedCell{}() : SortTerminatedCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoThreadsCell{}() : SortThreadsCellOpt{} [constructor{}(), functional{}(), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1109,19,1109,131)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smt-hook{}("not"), symbol'Kywd'{}("notBool_"), total{}()]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [function{}(), hook{}("STRING.ord"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1732,18,1732,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(SortExps{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,19,64,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblproject'ColnHash'tempFile'Coln'fd{}(SortIOFile{}) : SortInt{} [function{}()]
  symbol Lblproject'ColnHash'tempFile'Coln'path{}(SortIOFile{}) : SortString{} [function{}()]
  symbol Lblproject'ColnHash'unknownIOError'Coln'errno{}(SortIOError{}) : SortInt{} [function{}()]
  symbol Lblproject'Coln'Block{}(SortK{}) : SortBlock{} [function{}()]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [function{}()]
  symbol Lblproject'Coln'BusyCell{}(SortK{}) : SortBusyCell{} [function{}()]
  symbol Lblproject'Coln'BusyCellOpt{}(SortK{}) : SortBusyCellOpt{} [function{}()]
  symbol Lblproject'Coln'ControlCell{}(SortK{}) : SortControlCell{} [function{}()]
  symbol Lblproject'Coln'CrntObjCellFragment{}(SortK{}) : SortCrntObjCellFragment{} [function{}()]
  symbol Lblproject'Coln'EnvCell{}(SortK{}) : SortEnvCell{} [function{}()]
  symbol Lblproject'Coln'EnvCellOpt{}(SortK{}) : SortEnvCellOpt{} [function{}()]
  symbol Lblproject'Coln'EnvStackCell{}(SortK{}) : SortEnvStackCell{} [function{}()]
  symbol Lblproject'Coln'Exp{}(SortK{}) : SortExp{} [function{}()]
  symbol Lblproject'Coln'Exps{}(SortK{}) : SortExps{} [function{}()]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [function{}()]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [function{}()]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [function{}()]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [function{}()]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [function{}()]
  symbol Lblproject'Coln'HoldsCell{}(SortK{}) : SortHoldsCell{} [function{}()]
  symbol Lblproject'Coln'HoldsCellOpt{}(SortK{}) : SortHoldsCellOpt{} [function{}()]
  symbol Lblproject'Coln'IOError{}(SortK{}) : SortIOError{} [function{}()]
  symbol Lblproject'Coln'IOFile{}(SortK{}) : SortIOFile{} [function{}()]
  symbol Lblproject'Coln'IOInt{}(SortK{}) : SortIOInt{} [function{}()]
  symbol Lblproject'Coln'IOString{}(SortK{}) : SortIOString{} [function{}()]
  symbol Lblproject'Coln'Id{}(SortK{}) : SortId{} [function{}()]
  symbol Lblproject'Coln'IdCell{}(SortK{}) : SortIdCell{} [function{}()]
  symbol Lblproject'Coln'IdCellOpt{}(SortK{}) : SortIdCellOpt{} [function{}()]
  symbol Lblproject'Coln'Ids{}(SortK{}) : SortIds{} [function{}()]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [function{}()]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [function{}()]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [function{}()]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [function{}()]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [function{}()]
  symbol Lblproject'Coln'KResult{}(SortK{}) : SortKResult{} [function{}()]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [function{}()]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [function{}()]
  symbol Lblproject'Coln'NextLocCell{}(SortK{}) : SortNextLocCell{} [function{}()]
  symbol Lblproject'Coln'NextLocCellOpt{}(SortK{}) : SortNextLocCellOpt{} [function{}()]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [function{}()]
  symbol Lblproject'Coln'Stmt{}(SortK{}) : SortStmt{} [function{}()]
  symbol Lblproject'Coln'StoreCell{}(SortK{}) : SortStoreCell{} [function{}()]
  symbol Lblproject'Coln'StoreCellOpt{}(SortK{}) : SortStoreCellOpt{} [function{}()]
  symbol Lblproject'Coln'Stream{}(SortK{}) : SortStream{} [function{}()]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [function{}()]
  symbol Lblproject'Coln'TCell{}(SortK{}) : SortTCell{} [function{}()]
  symbol Lblproject'Coln'TCellFragment{}(SortK{}) : SortTCellFragment{} [function{}()]
  symbol Lblproject'Coln'TCellOpt{}(SortK{}) : SortTCellOpt{} [function{}()]
  symbol Lblproject'Coln'TerminatedCell{}(SortK{}) : SortTerminatedCell{} [function{}()]
  symbol Lblproject'Coln'TerminatedCellOpt{}(SortK{}) : SortTerminatedCellOpt{} [function{}()]
  symbol Lblproject'Coln'ThreadCell{}(SortK{}) : SortThreadCell{} [function{}()]
  symbol Lblproject'Coln'ThreadCellFragment{}(SortK{}) : SortThreadCellFragment{} [function{}()]
  symbol Lblproject'Coln'ThreadCellSet{}(SortK{}) : SortThreadCellSet{} [function{}()]
  symbol Lblproject'Coln'ThreadsCell{}(SortK{}) : SortThreadsCell{} [function{}()]
  symbol Lblproject'Coln'ThreadsCellFragment{}(SortK{}) : SortThreadsCellFragment{} [function{}()]
  symbol Lblproject'Coln'ThreadsCellOpt{}(SortK{}) : SortThreadsCellOpt{} [function{}()]
  symbol Lblproject'Coln'Val{}(SortK{}) : SortVal{} [function{}()]
  symbol Lblproject'Coln'Vals{}(SortK{}) : SortVals{} [function{}()]
  hooked-symbol LblpushList{}(SortKItem{}, SortList{}) : SortList{} [function{}(), functional{}(), hook{}("LIST.push"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(953,19,953,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("pushList"), total{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [function{}(), hook{}("INT.rand"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1341,18,1341,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}() : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,19,69,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,18,333,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,19,70,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [function{}(), hook{}("STRING.replace"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1842,21,1842,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [function{}(), functional{}(), hook{}("STRING.replaceAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1841,21,1841,149)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [function{}(), functional{}(), hook{}("STRING.replaceFirst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1843,21,1843,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lblreturn'SClnUnds'THREAD-SYNTAX'Unds'Stmt{}() : SortStmt{} [functional{}(), injective{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,19,63,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [function{}(), hook{}("STRING.rfindChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1769,18,1769,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [function{}(), hook{}("STRING.rfind"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1758,18,1758,112)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,20,284,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1308,18,1308,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [function{}(), functional{}(), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(794,18,794,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LblsizeList{}(SortList{}) : SortInt{} [function{}(), functional{}(), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1029,18,1029,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smtlib{}("smt_seq_len"), symbol'Kywd'{}("sizeList"), total{}()]
  hooked-symbol LblsizeMap{}(SortMap{}) : SortInt{} [function{}(), functional{}(), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,18,373,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("sizeMap"), total{}()]
  symbol LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(SortBlock{}) : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,18,44,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT-COMMON'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [function{}(), hook{}("INT.srand"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1342,16,1342,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [function{}(), functional{}(), hook{}("STRING.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1747,21,1747,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  symbol Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}() : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,18,14,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}() : SortExp{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,18,13,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,19,66,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(SortBlock{}, SortId{}, SortBlock{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,19,65,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblundefined'Unds'THREAD'Unds'KItem{}() : SortKItem{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(123,20,123,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [function{}(), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(993,19,993,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,18,324,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [function{}(), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,19,365,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]
  symbol Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(SortExps{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(7,19,7,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(SortExp{}, SortBlock{}) : SortStmt{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,19,60,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(SortStmt{}) : SortBlock{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,19,54,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  symbol Lbl'LBraRBraUnds'THREAD-SYNTAX'Unds'Block{}() : SortBlock{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,20,53,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1237,18,1237,112)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), smtlib{}("notInt"), symbol'Kywd'{}("~Int_"), total{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCell{}, SortKItem{}} (From:SortThreadCell{}))) [subsort{SortThreadCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBusyCell{}, SortKItem{}} (From:SortBusyCell{}))) [subsort{SortBusyCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellOpt{}, SortKItem{}} (From:SortTCellOpt{}))) [subsort{SortTCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCrntObjCellFragment{}, SortKItem{}} (From:SortCrntObjCellFragment{}))) [subsort{SortCrntObjCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTerminatedCellOpt{}, SortKItem{}} (From:SortTerminatedCellOpt{}))) [subsort{SortTerminatedCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExps{}, SortKItem{}} (From:SortExps{}))) [subsort{SortExps{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTerminatedCell{}, SortKItem{}} (From:SortTerminatedCell{}))) [subsort{SortTerminatedCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, inj{SortTCell{}, SortTCellOpt{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortTCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCellSet{}, SortKItem{}} (From:SortThreadCellSet{}))) [subsort{SortThreadCellSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortControlCell{}, SortKItem{}} (From:SortControlCell{}))) [subsort{SortControlCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadsCellFragment{}, SortKItem{}} (From:SortThreadsCellFragment{}))) [subsort{SortThreadsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKResult{}, SortKItem{}} (From:SortKResult{}))) [subsort{SortKResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOError{}, SortKItem{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortId{}, SortKItem{}} (From:SortId{}))) [subsort{SortId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextLocCell{}, SortKItem{}} (From:SortNextLocCell{}))) [subsort{SortNextLocCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIdCellOpt{}, \equals{SortIdCellOpt{}, R} (Val:SortIdCellOpt{}, inj{SortIdCell{}, SortIdCellOpt{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortHoldsCellOpt{}, \equals{SortHoldsCellOpt{}, R} (Val:SortHoldsCellOpt{}, inj{SortHoldsCell{}, SortHoldsCellOpt{}} (From:SortHoldsCell{}))) [subsort{SortHoldsCell{}, SortHoldsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlock{}, SortKItem{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortThreadsCellOpt{}, \equals{SortThreadsCellOpt{}, R} (Val:SortThreadsCellOpt{}, inj{SortThreadsCell{}, SortThreadsCellOpt{}} (From:SortThreadsCell{}))) [subsort{SortThreadsCell{}, SortThreadsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortHoldsCellOpt{}, SortKItem{}} (From:SortHoldsCellOpt{}))) [subsort{SortHoldsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBusyCellOpt{}, \equals{SortBusyCellOpt{}, R} (Val:SortBusyCellOpt{}, inj{SortBusyCell{}, SortBusyCellOpt{}} (From:SortBusyCell{}))) [subsort{SortBusyCell{}, SortBusyCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStream{}, SortKItem{}} (From:SortStream{}))) [subsort{SortStream{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextLocCellOpt{}, SortKItem{}} (From:SortNextLocCellOpt{}))) [subsort{SortNextLocCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellFragment{}, SortKItem{}} (From:SortTCellFragment{}))) [subsort{SortTCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCellOpt{}, SortKItem{}} (From:SortStoreCellOpt{}))) [subsort{SortStoreCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCellFragment{}, SortKItem{}} (From:SortThreadCellFragment{}))) [subsort{SortThreadCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadsCellOpt{}, SortKItem{}} (From:SortThreadsCellOpt{}))) [subsort{SortThreadsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOString{}, SortKItem{}} (From:SortIOString{}))) [subsort{SortIOString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTerminatedCellOpt{}, \equals{SortTerminatedCellOpt{}, R} (Val:SortTerminatedCellOpt{}, inj{SortTerminatedCell{}, SortTerminatedCellOpt{}} (From:SortTerminatedCell{}))) [subsort{SortTerminatedCell{}, SortTerminatedCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExp{}, SortKItem{}} (From:SortExp{}))) [subsort{SortExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmt{}, SortKItem{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvStackCell{}, SortKItem{}} (From:SortEnvStackCell{}))) [subsort{SortEnvStackCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOFile{}, SortKItem{}} (From:SortIOFile{}))) [subsort{SortIOFile{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvCell{}, SortKItem{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextLocCellOpt{}, \equals{SortNextLocCellOpt{}, R} (Val:SortNextLocCellOpt{}, inj{SortNextLocCell{}, SortNextLocCellOpt{}} (From:SortNextLocCell{}))) [subsort{SortNextLocCell{}, SortNextLocCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortThreadCellSet{}, \equals{SortThreadCellSet{}, R} (Val:SortThreadCellSet{}, inj{SortThreadCell{}, SortThreadCellSet{}} (From:SortThreadCell{}))) [subsort{SortThreadCell{}, SortThreadCellSet{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIds{}, SortKItem{}} (From:SortIds{}))) [subsort{SortIds{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVal{}, SortKItem{}} (From:SortVal{}))) [subsort{SortVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdCellOpt{}, SortKItem{}} (From:SortIdCellOpt{}))) [subsort{SortIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCell{}, SortKItem{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortStoreCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortHoldsCell{}, SortKItem{}} (From:SortHoldsCell{}))) [subsort{SortHoldsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOInt{}, SortKItem{}} (From:SortIOInt{}))) [subsort{SortIOInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadsCell{}, SortKItem{}} (From:SortThreadsCell{}))) [subsort{SortThreadsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortEnvCellOpt{}, \equals{SortEnvCellOpt{}, R} (Val:SortEnvCellOpt{}, inj{SortEnvCell{}, SortEnvCellOpt{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortEnvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvCellOpt{}, SortKItem{}} (From:SortEnvCellOpt{}))) [subsort{SortEnvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdCell{}, SortKItem{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBusyCellOpt{}, SortKItem{}} (From:SortBusyCellOpt{}))) [subsort{SortBusyCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVals{}, SortKItem{}} (From:SortVals{}))) [subsort{SortVals{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCell{}, SortKItem{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortInt{}, SortExp{}} (From:SortInt{}))) [subsort{SortInt{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortBool{}, SortExp{}} (From:SortBool{}))) [subsort{SortBool{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortString{}, SortExp{}} (From:SortString{}))) [subsort{SortString{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortId{}, SortExp{}} (From:SortId{}))) [subsort{SortId{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortInt{}, SortIOInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortIOError{}, SortIOInt{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortString{}, SortIOString{}} (From:SortString{}))) [subsort{SortString{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortIOError{}, SortIOString{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, inj{SortIOError{}, SortIOFile{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOFile{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKConfigVar{}, SortKItem{}} (From:SortKConfigVar{}))) [subsort{SortKConfigVar{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortBlock{}, SortStmt{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortInt{}, SortVal{}} (From:SortInt{}))) [subsort{SortInt{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortBool{}, SortVal{}} (From:SortBool{}))) [subsort{SortBool{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortString{}, SortVal{}} (From:SortString{}))) [subsort{SortString{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortVal{}, SortExp{}} (From:SortVal{}))) [subsort{SortVal{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, inj{SortVals{}, SortExps{}} (From:SortVals{}))) [subsort{SortVals{}, SortExps{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortVal{}, SortKResult{}} (From:SortVal{}))) [subsort{SortVal{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortVals{}, SortKResult{}} (From:SortVals{}))) [subsort{SortVals{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(Y0:SortId{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'E2BIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EACCES{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRINUSE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRNOTAVAIL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAGAIN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EALREADY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBADF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBUSY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECHILD{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNABORTED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNREFUSED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDEADLK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDESTADDRREQ{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDOM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EEXIST{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFAULT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFBIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINPROGRESS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINTR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINVAL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ELOOP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMLINK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMSGSIZE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENAMETOOLONG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOBUFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENODEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOENT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOEXEC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOLCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOMEM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOPROTOOPT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSPC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSYS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTEMPTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTSOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENXIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOPNOTSUPP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOVERFLOW{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPERM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTONOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTOTYPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ERANGE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EROFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESHUTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESOCKTNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESRCH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETIMEDOUT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETOOMANYREFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EWOULDBLOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EXDEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(Y0:SortK{})), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(Y0:SortK{})), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'log{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'logToFile{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{})), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'systemResult{}(K0:SortInt{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{})), Lbl'Hash'systemResult{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}), \and{SortString{}} (X2:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, Lbl'Hash'tempFile{}(K0:SortString{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOFile{}} (\and{SortIOFile{}} (Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}), Lbl'Hash'tempFile{}(Y0:SortString{}, Y1:SortInt{})), Lbl'Hash'tempFile{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'trace{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'traceK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'unknownIOError{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'unknownIOError{}(X0:SortInt{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{})), Lbl'Hash'unknownIOError{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(K0:SortId{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(Y0:SortId{}, Y1:SortExp{})), Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())) [functional{}()] // functional
  axiom{}\not{SortExps{}} (\and{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIds{}, \equals{SortIds{}, R} (Val:SortIds{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids{}())) [functional{}()] // functional
  axiom{}\not{SortIds{}} (\and{SortIds{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids{}(), Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(Y0:SortId{}, Y1:SortIds{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVals{}, \equals{SortVals{}, R} (Val:SortVals{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())) [functional{}()] // functional
  axiom{}\not{SortVals{}} (\and{SortVals{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}(), Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(Y0:SortVal{}, Y1:SortVals{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCell{}, \equals{SortTCell{}, R} (Val:SortTCell{}, Lbl'-LT-'T'-GT-'{}(K0:SortThreadsCell{}, K1:SortStoreCell{}, K2:SortBusyCell{}, K3:SortTerminatedCell{}, K4:SortNextLocCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTCell{}} (\and{SortTCell{}} (Lbl'-LT-'T'-GT-'{}(X0:SortThreadsCell{}, X1:SortStoreCell{}, X2:SortBusyCell{}, X3:SortTerminatedCell{}, X4:SortNextLocCell{}), Lbl'-LT-'T'-GT-'{}(Y0:SortThreadsCell{}, Y1:SortStoreCell{}, Y2:SortBusyCell{}, Y3:SortTerminatedCell{}, Y4:SortNextLocCell{})), Lbl'-LT-'T'-GT-'{}(\and{SortThreadsCell{}} (X0:SortThreadsCell{}, Y0:SortThreadsCell{}), \and{SortStoreCell{}} (X1:SortStoreCell{}, Y1:SortStoreCell{}), \and{SortBusyCell{}} (X2:SortBusyCell{}, Y2:SortBusyCell{}), \and{SortTerminatedCell{}} (X3:SortTerminatedCell{}, Y3:SortTerminatedCell{}), \and{SortNextLocCell{}} (X4:SortNextLocCell{}, Y4:SortNextLocCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTCellFragment{}, \equals{SortTCellFragment{}, R} (Val:SortTCellFragment{}, Lbl'-LT-'T'-GT-'-fragment{}(K0:SortThreadsCellOpt{}, K1:SortStoreCellOpt{}, K2:SortBusyCellOpt{}, K3:SortTerminatedCellOpt{}, K4:SortNextLocCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTCellFragment{}} (\and{SortTCellFragment{}} (Lbl'-LT-'T'-GT-'-fragment{}(X0:SortThreadsCellOpt{}, X1:SortStoreCellOpt{}, X2:SortBusyCellOpt{}, X3:SortTerminatedCellOpt{}, X4:SortNextLocCellOpt{}), Lbl'-LT-'T'-GT-'-fragment{}(Y0:SortThreadsCellOpt{}, Y1:SortStoreCellOpt{}, Y2:SortBusyCellOpt{}, Y3:SortTerminatedCellOpt{}, Y4:SortNextLocCellOpt{})), Lbl'-LT-'T'-GT-'-fragment{}(\and{SortThreadsCellOpt{}} (X0:SortThreadsCellOpt{}, Y0:SortThreadsCellOpt{}), \and{SortStoreCellOpt{}} (X1:SortStoreCellOpt{}, Y1:SortStoreCellOpt{}), \and{SortBusyCellOpt{}} (X2:SortBusyCellOpt{}, Y2:SortBusyCellOpt{}), \and{SortTerminatedCellOpt{}} (X3:SortTerminatedCellOpt{}, Y3:SortTerminatedCellOpt{}), \and{SortNextLocCellOpt{}} (X4:SortNextLocCellOpt{}, Y4:SortNextLocCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBusyCell{}, \equals{SortBusyCell{}, R} (Val:SortBusyCell{}, Lbl'-LT-'busy'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortBusyCell{}} (\and{SortBusyCell{}} (Lbl'-LT-'busy'-GT-'{}(X0:SortSet{}), Lbl'-LT-'busy'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'busy'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEnvCell{}, \equals{SortEnvCell{}, R} (Val:SortEnvCell{}, Lbl'-LT-'env'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortEnvCell{}} (\and{SortEnvCell{}} (Lbl'-LT-'env'-GT-'{}(X0:SortMap{}), Lbl'-LT-'env'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'env'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortTCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortTCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortTCell{}} (X0:SortTCell{}, Y0:SortTCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortTCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortTCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortTCellOpt{}} (X0:SortTCellOpt{}, Y0:SortTCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortHoldsCell{}, \equals{SortHoldsCell{}, R} (Val:SortHoldsCell{}, Lbl'-LT-'holds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortHoldsCell{}} (\and{SortHoldsCell{}} (Lbl'-LT-'holds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'holds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'holds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIdCell{}, \equals{SortIdCell{}, R} (Val:SortIdCell{}, Lbl'-LT-'id'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIdCell{}} (\and{SortIdCell{}} (Lbl'-LT-'id'-GT-'{}(X0:SortInt{}), Lbl'-LT-'id'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'id'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextLocCell{}, \equals{SortNextLocCell{}, R} (Val:SortNextLocCell{}, Lbl'-LT-'nextLoc'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextLocCell{}} (\and{SortNextLocCell{}} (Lbl'-LT-'nextLoc'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextLoc'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextLoc'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStoreCell{}, \equals{SortStoreCell{}, R} (Val:SortStoreCell{}, Lbl'-LT-'store'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortStoreCell{}} (\and{SortStoreCell{}} (Lbl'-LT-'store'-GT-'{}(X0:SortMap{}), Lbl'-LT-'store'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'store'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTerminatedCell{}, \equals{SortTerminatedCell{}, R} (Val:SortTerminatedCell{}, Lbl'-LT-'terminated'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortTerminatedCell{}} (\and{SortTerminatedCell{}} (Lbl'-LT-'terminated'-GT-'{}(X0:SortSet{}), Lbl'-LT-'terminated'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'terminated'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadCell{}, \equals{SortThreadCell{}, R} (Val:SortThreadCell{}, Lbl'-LT-'thread'-GT-'{}(K0:SortKCell{}, K1:SortEnvCell{}, K2:SortHoldsCell{}, K3:SortIdCell{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadCell{}} (\and{SortThreadCell{}} (Lbl'-LT-'thread'-GT-'{}(X0:SortKCell{}, X1:SortEnvCell{}, X2:SortHoldsCell{}, X3:SortIdCell{}), Lbl'-LT-'thread'-GT-'{}(Y0:SortKCell{}, Y1:SortEnvCell{}, Y2:SortHoldsCell{}, Y3:SortIdCell{})), Lbl'-LT-'thread'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortEnvCell{}} (X1:SortEnvCell{}, Y1:SortEnvCell{}), \and{SortHoldsCell{}} (X2:SortHoldsCell{}, Y2:SortHoldsCell{}), \and{SortIdCell{}} (X3:SortIdCell{}, Y3:SortIdCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadCellFragment{}, \equals{SortThreadCellFragment{}, R} (Val:SortThreadCellFragment{}, Lbl'-LT-'thread'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortEnvCellOpt{}, K2:SortHoldsCellOpt{}, K3:SortIdCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadCellFragment{}} (\and{SortThreadCellFragment{}} (Lbl'-LT-'thread'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortEnvCellOpt{}, X2:SortHoldsCellOpt{}, X3:SortIdCellOpt{}), Lbl'-LT-'thread'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortEnvCellOpt{}, Y2:SortHoldsCellOpt{}, Y3:SortIdCellOpt{})), Lbl'-LT-'thread'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortEnvCellOpt{}} (X1:SortEnvCellOpt{}, Y1:SortEnvCellOpt{}), \and{SortHoldsCellOpt{}} (X2:SortHoldsCellOpt{}, Y2:SortHoldsCellOpt{}), \and{SortIdCellOpt{}} (X3:SortIdCellOpt{}, Y3:SortIdCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadsCell{}, \equals{SortThreadsCell{}, R} (Val:SortThreadsCell{}, Lbl'-LT-'threads'-GT-'{}(K0:SortThreadCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadsCell{}} (\and{SortThreadsCell{}} (Lbl'-LT-'threads'-GT-'{}(X0:SortThreadCellSet{}), Lbl'-LT-'threads'-GT-'{}(Y0:SortThreadCellSet{})), Lbl'-LT-'threads'-GT-'{}(\and{SortThreadCellSet{}} (X0:SortThreadCellSet{}, Y0:SortThreadCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadsCellFragment{}, \equals{SortThreadsCellFragment{}, R} (Val:SortThreadsCellFragment{}, Lbl'-LT-'threads'-GT-'-fragment{}(K0:SortThreadCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadsCellFragment{}} (\and{SortThreadsCellFragment{}} (Lbl'-LT-'threads'-GT-'-fragment{}(X0:SortThreadCellSet{}), Lbl'-LT-'threads'-GT-'-fragment{}(Y0:SortThreadCellSet{})), Lbl'-LT-'threads'-GT-'-fragment{}(\and{SortThreadCellSet{}} (X0:SortThreadCellSet{}, Y0:SortThreadCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblMap'Coln'lookupOrDefault{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExps{}} (\and{SortExps{}} (Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIds{}, \equals{SortIds{}, R} (Val:SortIds{}, Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(K0:SortId{}, K1:SortIds{}))) [functional{}()] // functional
  axiom{}\implies{SortIds{}} (\and{SortIds{}} (Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(X0:SortId{}, X1:SortIds{}), Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(Y0:SortId{}, Y1:SortIds{})), Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortIds{}} (X1:SortIds{}, Y1:SortIds{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVals{}, \equals{SortVals{}, R} (Val:SortVals{}, Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(K0:SortVal{}, K1:SortVals{}))) [functional{}()] // functional
  axiom{}\implies{SortVals{}} (\and{SortVals{}} (Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(X0:SortVal{}, X1:SortVals{}), Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(Y0:SortVal{}, Y1:SortVals{})), Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(\and{SortVal{}} (X0:SortVal{}, Y0:SortVal{}), \and{SortVals{}} (X1:SortVals{}, Y1:SortVals{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(K0:SortExp{}, K1:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{})), Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \equals{SortThreadCellSet{}, R} (Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Unds'ThreadCellSet'Unds'{}(K1:SortThreadCellSet{},K2:SortThreadCellSet{}),K3:SortThreadCellSet{}),Lbl'Unds'ThreadCellSet'Unds'{}(K1:SortThreadCellSet{},Lbl'Unds'ThreadCellSet'Unds'{}(K2:SortThreadCellSet{},K3:SortThreadCellSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortThreadCellSet{}, R} (Lbl'Unds'ThreadCellSet'Unds'{}(K:SortThreadCellSet{},K:SortThreadCellSet{}),K:SortThreadCellSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortThreadCellSet{}, R} (Lbl'Unds'ThreadCellSet'Unds'{}(K:SortThreadCellSet{},Lbl'Stop'ThreadCellSet{}()),K:SortThreadCellSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortThreadCellSet{}, R} (Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Stop'ThreadCellSet{}(),K:SortThreadCellSet{}),K:SortThreadCellSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(K0:SortStmt{}, K1:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{})), Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'inList'Unds'{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(K0:SortExp{}, K1:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{})), Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblarray'LParUndsCommUndsRParUnds'THREAD'Unds'Val'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsRParUnds'THREAD'Unds'Val'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}), Lblarray'LParUndsCommUndsRParUnds'THREAD'Unds'Val'Unds'Int'Unds'Int{}(Y0:SortInt{}, Y1:SortInt{})), Lblarray'LParUndsCommUndsRParUnds'THREAD'Unds'Val'Unds'Int'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsRParUnds'THREAD'Unds'Val'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}), Lblloc'LParUndsRParUnds'THREAD'Unds'Val'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(K0:SortId{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{})), Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(K0:SortId{}, K1:SortId{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{})), Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblfor'LParUndsUndsSClnUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(K0:SortStmt{}, K1:SortExp{}, K2:SortExp{}, K3:SortBlock{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{})), Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBusyCell{}, \equals{SortBusyCell{}, R} (Val:SortBusyCell{}, LblinitBusyCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEnvCell{}, \equals{SortEnvCell{}, R} (Val:SortEnvCell{}, LblinitEnvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, LblinitGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortHoldsCell{}, \equals{SortHoldsCell{}, R} (Val:SortHoldsCell{}, LblinitHoldsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdCell{}, \equals{SortIdCell{}, R} (Val:SortIdCell{}, LblinitIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextLocCell{}, \equals{SortNextLocCell{}, R} (Val:SortNextLocCell{}, LblinitNextLocCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStoreCell{}, \equals{SortStoreCell{}, R} (Val:SortStoreCell{}, LblinitStoreCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTerminatedCell{}, \equals{SortTerminatedCell{}, R} (Val:SortTerminatedCell{}, LblinitTerminatedCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBlock{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBool{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBusyCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBusyCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisControlCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCrntObjCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvStackCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExps{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFloat{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisHoldsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisHoldsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOError{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOFile{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisId{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIdCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIdCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIds{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKConfigVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKItem{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKResult{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisList{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextLocCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextLocCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStmt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStream{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTerminatedCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTerminatedCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadCellSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadsCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVal{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVals{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lblite{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblloc'LParUndsRParUnds'THREAD'Unds'Val'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lblloc'LParUndsRParUnds'THREAD'Unds'Val'Unds'Int{}(X0:SortInt{}), Lblloc'LParUndsRParUnds'THREAD'Unds'Val'Unds'Int{}(Y0:SortInt{})), Lblloc'LParUndsRParUnds'THREAD'Unds'Val'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Y0:SortInt{})), Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(X0:SortInt{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(X0:SortK{}), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(Y0:SortK{})), Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(X0:SortK{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(X0:SortK{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(X0:SortK{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(X0:SortK{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(X0:SortK{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(X0:SortK{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(K0:SortId{}, K1:SortIds{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(Y0:SortId{}, Y1:SortIds{}, Y2:SortBlock{})), Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortIds{}} (X1:SortIds{}, Y1:SortIds{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(K0:SortId{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{})), Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBusyCellOpt{}, \equals{SortBusyCellOpt{}, R} (Val:SortBusyCellOpt{}, LblnoBusyCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEnvCellOpt{}, \equals{SortEnvCellOpt{}, R} (Val:SortEnvCellOpt{}, LblnoEnvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortHoldsCellOpt{}, \equals{SortHoldsCellOpt{}, R} (Val:SortHoldsCellOpt{}, LblnoHoldsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdCellOpt{}, \equals{SortIdCellOpt{}, R} (Val:SortIdCellOpt{}, LblnoIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextLocCellOpt{}, \equals{SortNextLocCellOpt{}, R} (Val:SortNextLocCellOpt{}, LblnoNextLocCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, LblnoStoreCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, LblnoTCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTerminatedCellOpt{}, \equals{SortTerminatedCellOpt{}, R} (Val:SortTerminatedCellOpt{}, LblnoTerminatedCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortThreadsCellOpt{}, \equals{SortThreadsCellOpt{}, R} (Val:SortThreadsCellOpt{}, LblnoThreadsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(K0:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{})), Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(\and{SortExps{}} (X0:SortExps{}, Y0:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblpushList{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}(), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}(), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}(), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}(), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblreturn'SClnUnds'THREAD-SYNTAX'Unds'Stmt{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(X0:SortMap{}), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Y0:SortMap{})), LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(X0:SortMap{}), Lblundefined'Unds'THREAD'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblsizeList{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblsizeMap{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(K0:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{})), Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}(), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(K0:SortBlock{}, K1:SortId{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(X0:SortBlock{}, X1:SortId{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(Y0:SortBlock{}, Y1:SortId{}, Y2:SortBlock{})), Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(X0:SortBlock{}, X1:SortId{}, X2:SortBlock{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(X0:SortBlock{}, X1:SortId{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblundefined'Unds'THREAD'Unds'KItem{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(K0:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{})), Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(\and{SortExps{}} (X0:SortExps{}, Y0:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{})), Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(K0:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(Y0:SortStmt{})), Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraRBraUnds'THREAD-SYNTAX'Unds'Block{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraRBraUnds'THREAD-SYNTAX'Unds'Block{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortBlock{}} (\exists{SortBlock{}} (X0:SortStmt{}, Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{})), Lbl'LBraRBraUnds'THREAD-SYNTAX'Unds'Block{}(), \bottom{SortBlock{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortBusyCell{}} (\exists{SortBusyCell{}} (X0:SortSet{}, Lbl'-LT-'busy'-GT-'{}(X0:SortSet{})), \bottom{SortBusyCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBusyCellOpt{}} (LblnoBusyCell{}(), \exists{SortBusyCellOpt{}} (Val:SortBusyCell{}, inj{SortBusyCell{}, SortBusyCellOpt{}} (Val:SortBusyCell{})), \bottom{SortBusyCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEnvCell{}} (\exists{SortEnvCell{}} (X0:SortMap{}, Lbl'-LT-'env'-GT-'{}(X0:SortMap{})), \bottom{SortEnvCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEnvCellOpt{}} (LblnoEnvCell{}(), \exists{SortEnvCellOpt{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortEnvCellOpt{}} (Val:SortEnvCell{})), \bottom{SortEnvCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortId{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortExp{}, Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExps{}, Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortId{}, Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExps{}, Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortId{}, Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortInt{}, Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(X0:SortInt{})), \exists{SortExp{}} (X0:SortK{}, Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(X0:SortK{})), \exists{SortExp{}} (X0:SortId{}, \exists{SortExp{}} (X1:SortExps{}, Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}))), Lblread'LParRParUnds'THREAD-SYNTAX'Unds'Exp{}(), \exists{SortExp{}} (X0:SortExp{}, LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortBlock{}, Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{})), Lblsuper'Unds'THREAD-SYNTAX'Unds'Exp{}(), Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}(), \exists{SortExp{}} (Val:SortBool{}, inj{SortBool{}, SortExp{}} (Val:SortBool{})), \exists{SortExp{}} (Val:SortId{}, inj{SortId{}, SortExp{}} (Val:SortId{})), \exists{SortExp{}} (Val:SortInt{}, inj{SortInt{}, SortExp{}} (Val:SortInt{})), \exists{SortExp{}} (Val:SortString{}, inj{SortString{}, SortExp{}} (Val:SortString{})), \exists{SortExp{}} (Val:SortVal{}, inj{SortVal{}, SortExp{}} (Val:SortVal{})), \bottom{SortExp{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), \exists{SortExps{}} (X0:SortExp{}, \exists{SortExps{}} (X1:SortExps{}, Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \exists{SortExps{}} (Val:SortVals{}, inj{SortVals{}, SortExps{}} (Val:SortVals{})), \bottom{SortExps{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortTCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortTCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortHoldsCell{}} (\exists{SortHoldsCell{}} (X0:SortMap{}, Lbl'-LT-'holds'-GT-'{}(X0:SortMap{})), \bottom{SortHoldsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortHoldsCellOpt{}} (LblnoHoldsCell{}(), \exists{SortHoldsCellOpt{}} (Val:SortHoldsCell{}, inj{SortHoldsCell{}, SortHoldsCellOpt{}} (Val:SortHoldsCell{})), \bottom{SortHoldsCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}(), \exists{SortIOError{}} (X0:SortInt{}, Lbl'Hash'unknownIOError{}(X0:SortInt{})), \bottom{SortIOError{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOFile{}} (\exists{SortIOFile{}} (X0:SortString{}, \exists{SortIOFile{}} (X1:SortInt{}, Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}))), \exists{SortIOFile{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOFile{}} (Val:SortIOError{})), \bottom{SortIOFile{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOInt{}} (Val:SortIOError{})), \exists{SortIOInt{}} (Val:SortInt{}, inj{SortInt{}, SortIOInt{}} (Val:SortInt{})), \bottom{SortIOInt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOString{}} (Val:SortIOError{})), \exists{SortIOString{}} (Val:SortString{}, inj{SortString{}, SortIOString{}} (Val:SortString{})), \bottom{SortIOString{}}()) [constructor{}()] // no junk
  axiom{} \or{SortId{}} (\top{SortId{}}(), \bottom{SortId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortIdCell{}} (\exists{SortIdCell{}} (X0:SortInt{}, Lbl'-LT-'id'-GT-'{}(X0:SortInt{})), \bottom{SortIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdCellOpt{}} (LblnoIdCell{}(), \exists{SortIdCellOpt{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortIdCellOpt{}} (Val:SortIdCell{})), \bottom{SortIdCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIds{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids{}(), \exists{SortIds{}} (X0:SortId{}, \exists{SortIds{}} (X1:SortIds{}, Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids{}(X0:SortId{}, X1:SortIds{}))), \bottom{SortIds{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{})), Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}))), Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{})), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortInt{}, \exists{SortKItem{}} (X1:SortString{}, \exists{SortKItem{}} (X2:SortString{}, Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{})))), \exists{SortKItem{}} (X0:SortMap{}, LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(X0:SortMap{})), Lblundefined'Unds'THREAD'Unds'KItem{}(), \exists{SortKItem{}} (Val:SortBlock{}, inj{SortBlock{}, SortKItem{}} (Val:SortBlock{})), \exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \exists{SortKItem{}} (Val:SortBusyCell{}, inj{SortBusyCell{}, SortKItem{}} (Val:SortBusyCell{})), \exists{SortKItem{}} (Val:SortBusyCellOpt{}, inj{SortBusyCellOpt{}, SortKItem{}} (Val:SortBusyCellOpt{})), \exists{SortKItem{}} (Val:SortControlCell{}, inj{SortControlCell{}, SortKItem{}} (Val:SortControlCell{})), \exists{SortKItem{}} (Val:SortCrntObjCellFragment{}, inj{SortCrntObjCellFragment{}, SortKItem{}} (Val:SortCrntObjCellFragment{})), \exists{SortKItem{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortKItem{}} (Val:SortEnvCell{})), \exists{SortKItem{}} (Val:SortEnvCellOpt{}, inj{SortEnvCellOpt{}, SortKItem{}} (Val:SortEnvCellOpt{})), \exists{SortKItem{}} (Val:SortEnvStackCell{}, inj{SortEnvStackCell{}, SortKItem{}} (Val:SortEnvStackCell{})), \exists{SortKItem{}} (Val:SortExp{}, inj{SortExp{}, SortKItem{}} (Val:SortExp{})), \exists{SortKItem{}} (Val:SortExps{}, inj{SortExps{}, SortKItem{}} (Val:SortExps{})), \exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \exists{SortKItem{}} (Val:SortHoldsCell{}, inj{SortHoldsCell{}, SortKItem{}} (Val:SortHoldsCell{})), \exists{SortKItem{}} (Val:SortHoldsCellOpt{}, inj{SortHoldsCellOpt{}, SortKItem{}} (Val:SortHoldsCellOpt{})), \exists{SortKItem{}} (Val:SortIOError{}, inj{SortIOError{}, SortKItem{}} (Val:SortIOError{})), \exists{SortKItem{}} (Val:SortIOFile{}, inj{SortIOFile{}, SortKItem{}} (Val:SortIOFile{})), \exists{SortKItem{}} (Val:SortIOInt{}, inj{SortIOInt{}, SortKItem{}} (Val:SortIOInt{})), \exists{SortKItem{}} (Val:SortIOString{}, inj{SortIOString{}, SortKItem{}} (Val:SortIOString{})), \exists{SortKItem{}} (Val:SortId{}, inj{SortId{}, SortKItem{}} (Val:SortId{})), \exists{SortKItem{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortKItem{}} (Val:SortIdCell{})), \exists{SortKItem{}} (Val:SortIdCellOpt{}, inj{SortIdCellOpt{}, SortKItem{}} (Val:SortIdCellOpt{})), \exists{SortKItem{}} (Val:SortIds{}, inj{SortIds{}, SortKItem{}} (Val:SortIds{})), \exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \exists{SortKItem{}} (Val:SortKConfigVar{}, inj{SortKConfigVar{}, SortKItem{}} (Val:SortKConfigVar{})), \exists{SortKItem{}} (Val:SortKResult{}, inj{SortKResult{}, SortKItem{}} (Val:SortKResult{})), \exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \exists{SortKItem{}} (Val:SortNextLocCell{}, inj{SortNextLocCell{}, SortKItem{}} (Val:SortNextLocCell{})), \exists{SortKItem{}} (Val:SortNextLocCellOpt{}, inj{SortNextLocCellOpt{}, SortKItem{}} (Val:SortNextLocCellOpt{})), \exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \exists{SortKItem{}} (Val:SortStmt{}, inj{SortStmt{}, SortKItem{}} (Val:SortStmt{})), \exists{SortKItem{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortKItem{}} (Val:SortStoreCell{})), \exists{SortKItem{}} (Val:SortStoreCellOpt{}, inj{SortStoreCellOpt{}, SortKItem{}} (Val:SortStoreCellOpt{})), \exists{SortKItem{}} (Val:SortStream{}, inj{SortStream{}, SortKItem{}} (Val:SortStream{})), \exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \exists{SortKItem{}} (Val:SortTCell{}, inj{SortTCell{}, SortKItem{}} (Val:SortTCell{})), \exists{SortKItem{}} (Val:SortTCellFragment{}, inj{SortTCellFragment{}, SortKItem{}} (Val:SortTCellFragment{})), \exists{SortKItem{}} (Val:SortTCellOpt{}, inj{SortTCellOpt{}, SortKItem{}} (Val:SortTCellOpt{})), \exists{SortKItem{}} (Val:SortTerminatedCell{}, inj{SortTerminatedCell{}, SortKItem{}} (Val:SortTerminatedCell{})), \exists{SortKItem{}} (Val:SortTerminatedCellOpt{}, inj{SortTerminatedCellOpt{}, SortKItem{}} (Val:SortTerminatedCellOpt{})), \exists{SortKItem{}} (Val:SortThreadCell{}, inj{SortThreadCell{}, SortKItem{}} (Val:SortThreadCell{})), \exists{SortKItem{}} (Val:SortThreadCellFragment{}, inj{SortThreadCellFragment{}, SortKItem{}} (Val:SortThreadCellFragment{})), \exists{SortKItem{}} (Val:SortThreadCellSet{}, inj{SortThreadCellSet{}, SortKItem{}} (Val:SortThreadCellSet{})), \exists{SortKItem{}} (Val:SortThreadsCell{}, inj{SortThreadsCell{}, SortKItem{}} (Val:SortThreadsCell{})), \exists{SortKItem{}} (Val:SortThreadsCellFragment{}, inj{SortThreadsCellFragment{}, SortKItem{}} (Val:SortThreadsCellFragment{})), \exists{SortKItem{}} (Val:SortThreadsCellOpt{}, inj{SortThreadsCellOpt{}, SortKItem{}} (Val:SortThreadsCellOpt{})), \exists{SortKItem{}} (Val:SortVal{}, inj{SortVal{}, SortKItem{}} (Val:SortVal{})), \exists{SortKItem{}} (Val:SortVals{}, inj{SortVals{}, SortKItem{}} (Val:SortVals{})), \bottom{SortKItem{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortBool{}, inj{SortBool{}, SortKResult{}} (Val:SortBool{})), \exists{SortKResult{}} (Val:SortInt{}, inj{SortInt{}, SortKResult{}} (Val:SortInt{})), \exists{SortKResult{}} (Val:SortString{}, inj{SortString{}, SortKResult{}} (Val:SortString{})), \exists{SortKResult{}} (Val:SortVal{}, inj{SortVal{}, SortKResult{}} (Val:SortVal{})), \exists{SortKResult{}} (Val:SortVals{}, inj{SortVals{}, SortKResult{}} (Val:SortVals{})), \bottom{SortKResult{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextLocCell{}} (\exists{SortNextLocCell{}} (X0:SortInt{}, Lbl'-LT-'nextLoc'-GT-'{}(X0:SortInt{})), \bottom{SortNextLocCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextLocCellOpt{}} (LblnoNextLocCell{}(), \exists{SortNextLocCellOpt{}} (Val:SortNextLocCell{}, inj{SortNextLocCell{}, SortNextLocCellOpt{}} (Val:SortNextLocCell{})), \bottom{SortNextLocCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortStmt{}, Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}))), \exists{SortStmt{}} (X0:SortExp{}, Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortId{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblclass'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}))), \exists{SortStmt{}} (X0:SortId{}, \exists{SortStmt{}} (X1:SortId{}, \exists{SortStmt{}} (X2:SortBlock{}, Lblclass'Unds'extends'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{})))), \exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, \exists{SortStmt{}} (X2:SortBlock{}, Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{})))), \exists{SortStmt{}} (X0:SortExp{}, Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortId{}, \exists{SortStmt{}} (X1:SortIds{}, \exists{SortStmt{}} (X2:SortBlock{}, Lblmethod'UndsLParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Id'Unds'Ids'Unds'Block{}(X0:SortId{}, X1:SortIds{}, X2:SortBlock{})))), \exists{SortStmt{}} (X0:SortExps{}, Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{})), \exists{SortStmt{}} (X0:SortExp{}, Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortExp{}, Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortExp{}, Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortExp{}, Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortBlock{}, \exists{SortStmt{}} (X1:SortId{}, \exists{SortStmt{}} (X2:SortBlock{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Block'Unds'Id'Unds'Block{}(X0:SortBlock{}, X1:SortId{}, X2:SortBlock{})))), \exists{SortStmt{}} (X0:SortExps{}, Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{})), \exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}))), \exists{SortStmt{}} (Val:SortBlock{}, inj{SortBlock{}, SortStmt{}} (Val:SortBlock{})), \bottom{SortStmt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreCell{}} (\exists{SortStoreCell{}} (X0:SortMap{}, Lbl'-LT-'store'-GT-'{}(X0:SortMap{})), \bottom{SortStoreCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreCellOpt{}} (LblnoStoreCell{}(), \exists{SortStoreCellOpt{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (Val:SortStoreCell{})), \bottom{SortStoreCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStream{}} (\exists{SortStream{}} (X0:SortK{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{})), \exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \exists{SortStream{}} (X0:SortString{}, \exists{SortStream{}} (X1:SortString{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}))), \bottom{SortStream{}}()) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortTCell{}} (\exists{SortTCell{}} (X0:SortThreadsCell{}, \exists{SortTCell{}} (X1:SortStoreCell{}, \exists{SortTCell{}} (X2:SortBusyCell{}, \exists{SortTCell{}} (X3:SortTerminatedCell{}, \exists{SortTCell{}} (X4:SortNextLocCell{}, Lbl'-LT-'T'-GT-'{}(X0:SortThreadsCell{}, X1:SortStoreCell{}, X2:SortBusyCell{}, X3:SortTerminatedCell{}, X4:SortNextLocCell{})))))), \bottom{SortTCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellFragment{}} (\exists{SortTCellFragment{}} (X0:SortThreadsCellOpt{}, \exists{SortTCellFragment{}} (X1:SortStoreCellOpt{}, \exists{SortTCellFragment{}} (X2:SortBusyCellOpt{}, \exists{SortTCellFragment{}} (X3:SortTerminatedCellOpt{}, \exists{SortTCellFragment{}} (X4:SortNextLocCellOpt{}, Lbl'-LT-'T'-GT-'-fragment{}(X0:SortThreadsCellOpt{}, X1:SortStoreCellOpt{}, X2:SortBusyCellOpt{}, X3:SortTerminatedCellOpt{}, X4:SortNextLocCellOpt{})))))), \bottom{SortTCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellOpt{}} (LblnoTCell{}(), \exists{SortTCellOpt{}} (Val:SortTCell{}, inj{SortTCell{}, SortTCellOpt{}} (Val:SortTCell{})), \bottom{SortTCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTerminatedCell{}} (\exists{SortTerminatedCell{}} (X0:SortSet{}, Lbl'-LT-'terminated'-GT-'{}(X0:SortSet{})), \bottom{SortTerminatedCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTerminatedCellOpt{}} (LblnoTerminatedCell{}(), \exists{SortTerminatedCellOpt{}} (Val:SortTerminatedCell{}, inj{SortTerminatedCell{}, SortTerminatedCellOpt{}} (Val:SortTerminatedCell{})), \bottom{SortTerminatedCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadCell{}} (\exists{SortThreadCell{}} (X0:SortKCell{}, \exists{SortThreadCell{}} (X1:SortEnvCell{}, \exists{SortThreadCell{}} (X2:SortHoldsCell{}, \exists{SortThreadCell{}} (X3:SortIdCell{}, Lbl'-LT-'thread'-GT-'{}(X0:SortKCell{}, X1:SortEnvCell{}, X2:SortHoldsCell{}, X3:SortIdCell{}))))), \bottom{SortThreadCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadCellFragment{}} (\exists{SortThreadCellFragment{}} (X0:SortKCellOpt{}, \exists{SortThreadCellFragment{}} (X1:SortEnvCellOpt{}, \exists{SortThreadCellFragment{}} (X2:SortHoldsCellOpt{}, \exists{SortThreadCellFragment{}} (X3:SortIdCellOpt{}, Lbl'-LT-'thread'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortEnvCellOpt{}, X2:SortHoldsCellOpt{}, X3:SortIdCellOpt{}))))), \bottom{SortThreadCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadCellSet{}} (\exists{SortThreadCellSet{}} (Val:SortThreadCell{}, inj{SortThreadCell{}, SortThreadCellSet{}} (Val:SortThreadCell{})), \bottom{SortThreadCellSet{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadsCell{}} (\exists{SortThreadsCell{}} (X0:SortThreadCellSet{}, Lbl'-LT-'threads'-GT-'{}(X0:SortThreadCellSet{})), \bottom{SortThreadsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadsCellFragment{}} (\exists{SortThreadsCellFragment{}} (X0:SortThreadCellSet{}, Lbl'-LT-'threads'-GT-'-fragment{}(X0:SortThreadCellSet{})), \bottom{SortThreadsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadsCellOpt{}} (LblnoThreadsCell{}(), \exists{SortThreadsCellOpt{}} (Val:SortThreadsCell{}, inj{SortThreadsCell{}, SortThreadsCellOpt{}} (Val:SortThreadsCell{})), \bottom{SortThreadsCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVal{}} (\exists{SortVal{}} (X0:SortInt{}, \exists{SortVal{}} (X1:SortInt{}, Lblarray'LParUndsCommUndsRParUnds'THREAD'Unds'Val'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}))), \exists{SortVal{}} (X0:SortInt{}, Lblloc'LParUndsRParUnds'THREAD'Unds'Val'Unds'Int{}(X0:SortInt{})), \exists{SortVal{}} (Val:SortBool{}, inj{SortBool{}, SortVal{}} (Val:SortBool{})), \exists{SortVal{}} (Val:SortInt{}, inj{SortInt{}, SortVal{}} (Val:SortInt{})), \exists{SortVal{}} (Val:SortString{}, inj{SortString{}, SortVal{}} (Val:SortString{})), \bottom{SortVal{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVals{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}(), \exists{SortVals{}} (X0:SortVal{}, \exists{SortVals{}} (X1:SortVals{}, Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(X0:SortVal{}, X1:SortVals{}))), \bottom{SortVals{}}()) [constructor{}()] // no junk
  axiom{R} \equals{SortExps{}, R} (Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}} (K0:SortVal{}),inj{SortVals{}, SortExps{}} (K1:SortVals{})), inj{SortVals{}, SortExps{}} (Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(K0:SortVal{},K1:SortVals{}))) [symbol-overload{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(),Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}())] // overloaded production
  axiom{R} \equals{SortExps{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), inj{SortVals{}, SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())) [symbol-overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())] // overloaded production

// rules
// rule `#open(_)_K-IO_IOInt_String`(S)=>`#open(_,_)_K-IO_IOInt_String_String`(S,#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9), org.kframework.attributes.Location(Location(2493,8,2493,48)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(X0:SortString{}),
     \and{SortIOInt{}} (
       Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("r+")),
        \top{SortIOInt{}}())))
  [UNIQUE'Unds'ID{}("7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2493,8,2493,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `#stderr_K-IO_Int`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162), org.kframework.attributes.Location(Location(2590,8,2590,20)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("2"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2590,8,2590,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `#stdin_K-IO_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3), org.kframework.attributes.Location(Location(2588,8,2588,19)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2588,8,2588,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `#stdout_K-IO_Int`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c), org.kframework.attributes.Location(Location(2589,8,2589,20)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2589,8,2589,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(.K),_DotVar4,`<holds>`(H),`<id>`(T))),_DotVar3)),_Gen0,`<busy>`(Busy),`<terminated>`(_DotVar2),_Gen1),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(_DotVar3),_Gen0,`<busy>`(`Set:difference`(Busy,`keys(_)_MAP_Set_Map`(H))),`<terminated>`(`_Set_`(`SetItem`(inj{Int,KItem}(T)),_DotVar2)),_Gen1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85d175a002a5ed59b603970eae9644d76850a63920b06689c202db5552be464e), org.kframework.attributes.Location(Location(210,8,212,59)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(dotk{}()),Var'Unds'DotVar4:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(VarH:SortMap{}),Lbl'-LT-'id'-GT-'{}(VarT:SortInt{}))),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen0:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(VarBusy:SortSet{}),Lbl'-LT-'terminated'-GT-'{}(Var'Unds'DotVar2:SortSet{}),Var'Unds'Gen1:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Var'Unds'DotVar3:SortThreadCellSet{}),Var'Unds'Gen0:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(LblSet'Coln'difference{}(VarBusy:SortSet{},Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarH:SortMap{}))),Lbl'-LT-'terminated'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortInt{}, SortKItem{}}(VarT:SortInt{})),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen1:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("85d175a002a5ed59b603970eae9644d76850a63920b06689c202db5552be464e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,8,212,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(`{_}_THREAD-SYNTAX_Block_Stmt`(S))~>_DotVar4),`<env>`(Env),_Gen0,_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(S)~>`setEnv(_)_THREAD_KItem_Map`(Env)~>_DotVar4),`<env>`(Env),_Gen0,_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(50544093f0a66b9fdf0016843b8ba659fb64f7c947be15bc3a2301c5867bea2b), org.kframework.attributes.Location(Location(274,8,274,63)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),kseq{}(LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(VarEnv:SortMap{}),Var'Unds'DotVar4:SortK{}))),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("50544093f0a66b9fdf0016843b8ba659fb64f7c947be15bc3a2301c5867bea2b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(274,8,274,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(`{}_THREAD-SYNTAX_Block`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6ba59d09bc26d2efb1b444e99aed47cc65f67ff479fdc51306a34ee64768eb32), org.kframework.attributes.Location(Location(272,8,272,16)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraRBraUnds'THREAD-SYNTAX'Unds'Block{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6ba59d09bc26d2efb1b444e99aed47cc65f67ff479fdc51306a34ee64768eb32"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(272,8,272,16)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__THREAD-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`!__THREAD-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(07a74355f7a1ff16e05716a490a1505957a89e92aa31a38328b5ee1e704d4622), cool, cool-like, label(THREAD-SYNTAX.!__THREAD-SYNTAX_Exp_Exp1-cool), org.kframework.attributes.Location(Location(40,18,40,50)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("07a74355f7a1ff16e05716a490a1505957a89e92aa31a38328b5ee1e704d4622"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.!__THREAD-SYNTAX_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer(_)__THREAD-SYNTAX_Exp_Id_Exp1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`(_)__THREAD-SYNTAX_Exp_Id_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(13aeec7b7a82fc23dd1e7eaf6ea044bd795f10a17cb92638578e9d0fc899dd42), cool, cool-like, label(THREAD-SYNTAX.(_)__THREAD-SYNTAX_Exp_Id_Exp2-cool), org.kframework.attributes.Location(Location(18,18,18,53)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarK0:SortId{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("13aeec7b7a82fc23dd1e7eaf6ea044bd795f10a17cb92638578e9d0fc899dd42"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.(_)__THREAD-SYNTAX_Exp_Id_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__THREAD-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`-__THREAD-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(383344f733aa975793fa0883bbd5ac4297376cafdab9b00888918988b5058049), cool, cool-like, label(THREAD-SYNTAX.-__THREAD-SYNTAX_Exp_Exp1-cool), org.kframework.attributes.Location(Location(23,18,23,50)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("383344f733aa975793fa0883bbd5ac4297376cafdab9b00888918988b5058049"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.-__THREAD-SYNTAX_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,18,23,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_!=__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(4e24d985d8ada77b6f481aaaabb0c7e14bf53e5d5c02df2fd64bdb76fe760e07), cool, cool-like, label(THREAD-SYNTAX._!=__THREAD-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(39,18,39,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4e24d985d8ada77b6f481aaaabb0c7e14bf53e5d5c02df2fd64bdb76fe760e07"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._!=__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_!=__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(8da9c1a5820342f7dad019c61cad1d3d4761e3fb30fc2591d1305f7b1845b5e6), cool, cool-like, label(THREAD-SYNTAX._!=__THREAD-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(39,18,39,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8da9c1a5820342f7dad019c61cad1d3d4761e3fb30fc2591d1305f7b1845b5e6"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._!=__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_%__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(2388037fdcb9cd5c198313d270c8a4386571a9f5c93b8cf1f48e2b6238c08321), cool, cool-like, label(THREAD-SYNTAX._%__THREAD-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("2388037fdcb9cd5c198313d270c8a4386571a9f5c93b8cf1f48e2b6238c08321"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._%__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_%__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(dcee017368d257ec9c01c8cb7dcce8c17251f581867f4ecba1bc3adef4094a7c), cool, cool-like, label(THREAD-SYNTAX._%__THREAD-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("dcee017368d257ec9c01c8cb7dcce8c17251f581867f4ecba1bc3adef4094a7c"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._%__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_&&__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c18e7168920063c2034fbcb9d7bb120d1bbf2aa884749872b5de8637e2e733d4), cool, cool-like, label(THREAD-SYNTAX._&&__THREAD-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(42,18,42,59)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c18e7168920063c2034fbcb9d7bb120d1bbf2aa884749872b5de8637e2e733d4"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._&&__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,18,42,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_*__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(9d47235a7604997fa611cc2d027bbf3c87ffe245f23dd42995b5a834e2c16dba), cool, cool-like, label(THREAD-SYNTAX._*__THREAD-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9d47235a7604997fa611cc2d027bbf3c87ffe245f23dd42995b5a834e2c16dba"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._*__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_*__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(3cfbfdf38e9a50b4bbf577947f972116039e5ef851f63bd26175224c2b5b3649), cool, cool-like, label(THREAD-SYNTAX._*__THREAD-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3cfbfdf38e9a50b4bbf577947f972116039e5ef851f63bd26175224c2b5b3649"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._*__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f242c82fcfa3f3d95466994a2ca82f349d33c1b2bb855bce4c2bb7074868b5cd), cool, cool-like, label(THREAD-SYNTAX._+__THREAD-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(31,18,31,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f242c82fcfa3f3d95466994a2ca82f349d33c1b2bb855bce4c2bb7074868b5cd"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._+__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(b667cbd9da48220a119c10728aad0f9a8aad7d8c3c7a76306cca6684a9f64fee), cool, cool-like, label(THREAD-SYNTAX._+__THREAD-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(31,18,31,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b667cbd9da48220a119c10728aad0f9a8aad7d8c3c7a76306cca6684a9f64fee"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._+__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__THREAD-SYNTAX_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(d8402cc9c758997bc5fc6097b9ad8736d5863c6cc3934a00c47281bedcfcd786), cool, cool-like, label(THREAD-SYNTAX._,__THREAD-SYNTAX_Exps_Exp_Exps1-cool), org.kframework.attributes.Location(Location(49,19,49,66)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), overload(exps), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d8402cc9c758997bc5fc6097b9ad8736d5863c6cc3934a00c47281bedcfcd786"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._,__THREAD-SYNTAX_Exps_Exp_Exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_-__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(a89a1cfc3d838a1f91a29edb4143301cdfe051e35f2709896d63b9ac6d37e83b), cool, cool-like, label(THREAD-SYNTAX._-__THREAD-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(32,18,32,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a89a1cfc3d838a1f91a29edb4143301cdfe051e35f2709896d63b9ac6d37e83b"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._-__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_-__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(466f1ef3673e46f982fd62003fc3e64bef9c58cdb25fb2cf94f40f9362aae47f), cool, cool-like, label(THREAD-SYNTAX._-__THREAD-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(32,18,32,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("466f1ef3673e46f982fd62003fc3e64bef9c58cdb25fb2cf94f40f9362aae47f"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._-__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_/__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(236df01715c74270be8c9eae8e33bfe5e1f5a042383fcd913f0d8ffda5d0e43b), cool, cool-like, label(THREAD-SYNTAX._/__THREAD-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(28,18,28,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("236df01715c74270be8c9eae8e33bfe5e1f5a042383fcd913f0d8ffda5d0e43b"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._/__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,18,28,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_/__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(da941318ba34c00cefa15a0a8c00fc3a26c2c0e6ce92c902a6013f43c4a097a0), cool, cool-like, label(THREAD-SYNTAX._/__THREAD-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(28,18,28,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("da941318ba34c00cefa15a0a8c00fc3a26c2c0e6ce92c902a6013f43c4a097a0"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._/__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,18,28,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(420c5e33e6fe175bdab45c59863ca9c80547906910e8d2d82a11883995c5dd2f), cool, cool-like, label(THREAD-SYNTAX._;_THREAD-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(57,19,57,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("420c5e33e6fe175bdab45c59863ca9c80547906910e8d2d82a11883995c5dd2f"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._;_THREAD-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<=__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(44c81961e1a4d9cd38b64b8a8461e0e83addba1ef0453a1e4db7001212c450db), cool, cool-like, label(THREAD-SYNTAX._<=__THREAD-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("44c81961e1a4d9cd38b64b8a8461e0e83addba1ef0453a1e4db7001212c450db"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._<=__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<=__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(88deba8cbe4053c98a63b2f58cfbad35d6731ebc2bfbdc259ffbe62d951625b7), cool, cool-like, label(THREAD-SYNTAX._<=__THREAD-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("88deba8cbe4053c98a63b2f58cfbad35d6731ebc2bfbdc259ffbe62d951625b7"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._<=__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(d473127fba79f1817d1eecc55552dc60e0cffa774e50a907573a11d85236fa08), cool, cool-like, label(THREAD-SYNTAX._<__THREAD-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d473127fba79f1817d1eecc55552dc60e0cffa774e50a907573a11d85236fa08"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._<__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(dc1712a51b9e15ed3de23f891a6c188979c26914bc3eb7ce0e2370e87bbed02e), cool, cool-like, label(THREAD-SYNTAX._<__THREAD-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("dc1712a51b9e15ed3de23f891a6c188979c26914bc3eb7ce0e2370e87bbed02e"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._<__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_==__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(63852e3243a3e69e2e40b27d61a4c774fd43bd6e7f05076cdcd52a750888fa65), cool, cool-like, label(THREAD-SYNTAX._==__THREAD-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(38,18,38,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("63852e3243a3e69e2e40b27d61a4c774fd43bd6e7f05076cdcd52a750888fa65"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._==__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_==__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(0eb4af11e4d86c0387bb0dec6ffe29f5c4e39972321953c3a79075bec36799de), cool, cool-like, label(THREAD-SYNTAX._==__THREAD-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(38,18,38,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0eb4af11e4d86c0387bb0dec6ffe29f5c4e39972321953c3a79075bec36799de"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._==__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_=__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_=__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(bc63ac9b2bcbeaf098d46a4f61f12578679002d803a6ff38085c975e962bc709), cool, cool-like, label(THREAD-SYNTAX._=__THREAD-SYNTAX_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(45,18,45,60)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), right, strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("bc63ac9b2bcbeaf098d46a4f61f12578679002d803a6ff38085c975e962bc709"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._=__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,18,45,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>=__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6ecf279c41444531cbecc18879a78da5b9856a54dd76fa83916ef4cbde6a11c4), cool, cool-like, label(THREAD-SYNTAX._>=__THREAD-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6ecf279c41444531cbecc18879a78da5b9856a54dd76fa83916ef4cbde6a11c4"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._>=__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>=__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ec09f94fe8b6397e09dc8f6070170e6e20d334d37f7007161c604e896d3e588e), cool, cool-like, label(THREAD-SYNTAX._>=__THREAD-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ec09f94fe8b6397e09dc8f6070170e6e20d334d37f7007161c604e896d3e588e"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._>=__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(9c315079e5d4df1ab37552d8a77a84578291a2607b180dbc68c76b55c9e168b4), cool, cool-like, label(THREAD-SYNTAX._>__THREAD-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9c315079e5d4df1ab37552d8a77a84578291a2607b180dbc68c76b55c9e168b4"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._>__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(d17ee961f73116759ea89b33050862b3928bdfd0a5f514edd3c4d2d20e037be4), cool, cool-like, label(THREAD-SYNTAX._>__THREAD-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d17ee961f73116759ea89b33050862b3928bdfd0a5f514edd3c4d2d20e037be4"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._>__THREAD-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_[_]_THREAD-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(a671d5c5f688750bf8fe7020dfa9f72126fc8a868f826d4efaa14fdfbab0559f), cool, cool-like, label(THREAD-SYNTAX._[_]_THREAD-SYNTAX_Exp_Exp_Exps1-cool), org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a671d5c5f688750bf8fe7020dfa9f72126fc8a868f826d4efaa14fdfbab0559f"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._[_]_THREAD-SYNTAX_Exp_Exp_Exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_instanceOf__THREAD-SYNTAX_Exp_Exp_Id0_`(inj{Id,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_instanceOf__THREAD-SYNTAX_Exp_Exp_Id`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(796f9834bb4cfc3cc4ff88a22d6f10bee46002f6cd84f0551d0dc5f925d47bce), cool, cool-like, label(THREAD-SYNTAX._instanceOf__THREAD-SYNTAX_Exp_Exp_Id1-cool), org.kframework.attributes.Location(Location(17,18,17,53)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK1:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},VarK1:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("796f9834bb4cfc3cc4ff88a22d6f10bee46002f6cd84f0551d0dc5f925d47bce"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._instanceOf__THREAD-SYNTAX_Exp_Exp_Id1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_||__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(286a63109f54f3ec325bf747755ef4998152f3dc5fc699452bf949db013d4b73), cool, cool-like, label(THREAD-SYNTAX._||__THREAD-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(43,18,43,59)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("286a63109f54f3ec325bf747755ef4998152f3dc5fc699452bf949db013d4b73"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._||__THREAD-SYNTAX_Exp_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezeracquire_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`acquire_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e1efdb4cd7425030a9c2a6e25e10a18fb67b631099b53bd1c2f6b66cb59eaca6), cool, cool-like, label(THREAD-SYNTAX.acquire_;_THREAD-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(68,19,68,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e1efdb4cd7425030a9c2a6e25e10a18fb67b631099b53bd1c2f6b66cb59eaca6"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.acquire_;_THREAD-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,19,68,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block0_`(inj{Block,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(330b97ea9499cb095b8fbc4c5cdfec1314ab0a1b57258e1eb0503c59db723e23), avoid, cool, cool-like, label(THREAD-SYNTAX.if(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block1-cool), org.kframework.attributes.Location(Location(58,19,58,75)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("330b97ea9499cb095b8fbc4c5cdfec1314ab0a1b57258e1eb0503c59db723e23"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.if(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerjoin_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`join_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(232ad7f3c5536fc619f8819d4067f27516d1d3dfe0b84cbbcc26f068d4aa55b8), cool, cool-like, label(THREAD-SYNTAX.join_;_THREAD-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(67,19,67,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("232ad7f3c5536fc619f8819d4067f27516d1d3dfe0b84cbbcc26f068d4aa55b8"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.join_;_THREAD-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,19,67,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerlvalue(_)_THREAD_Exp_K0_`(inj{Exps,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(HOLE,_Gen0))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(560e027be48eb31ddfaa6371bc22b3b6a0f22d39b3196c5c9a8603ab058c9dc3), cool, cool-like, org.kframework.attributes.Location(Location(194,11,194,37)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen0:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("560e027be48eb31ddfaa6371bc22b3b6a0f22d39b3196c5c9a8603ab058c9dc3"), cool{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(194,11,194,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerlvalue(_)_THREAD_Exp_K0_2`(inj{Id,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Exp,KItem}(`_.__THREAD-SYNTAX_Exp_Exp_Id`(HOLE,_Gen0))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(547881142dd377b7e92e0e4f3b235902417bb3fd58f36a965d1568b596d32b80), cool, cool-like, org.kframework.attributes.Location(Location(182,11,182,34)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortId{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("547881142dd377b7e92e0e4f3b235902417bb3fd58f36a965d1568b596d32b80"), cool{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,11,182,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrelease_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`release_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(dda80686c90e45718f7307ee70dea661005d93dd89bf0382d587dede535d15ce), cool, cool-like, label(THREAD-SYNTAX.release_;_THREAD-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(69,19,69,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("dda80686c90e45718f7307ee70dea661005d93dd89bf0382d587dede535d15ce"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.release_;_THREAD-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,19,69,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrendezvous_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f166e79d98a797460e3e6ba4a9067687a90b1fd7c4f5036e3946e8b23f80c318), cool, cool-like, label(THREAD-SYNTAX.rendezvous_;_THREAD-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(70,19,70,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f166e79d98a797460e3e6ba4a9067687a90b1fd7c4f5036e3946e8b23f80c318"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.rendezvous_;_THREAD-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,19,70,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerreturn_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`return_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(b25b46ea1b66737681d6fa5fd34002c47c1d310a7fab6eca68e6e7ab8ea76943), cool, cool-like, label(THREAD-SYNTAX.return_;_THREAD-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(62,19,62,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b25b46ea1b66737681d6fa5fd34002c47c1d310a7fab6eca68e6e7ab8ea76943"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.return_;_THREAD-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezersizeOf(_)_THREAD-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_THREAD-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(8199f9cef92bfe9964cb27831924e6e92f055555305f9b0544ccdf6ab2eebffb), cool, cool-like, label(THREAD-SYNTAX.sizeOf(_)_THREAD-SYNTAX_Exp_Exp1-cool), org.kframework.attributes.Location(Location(24,18,24,50)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8199f9cef92bfe9964cb27831924e6e92f055555305f9b0544ccdf6ab2eebffb"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.sizeOf(_)_THREAD-SYNTAX_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerthrow_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`throw_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(128dc0135ce87a6a8f825397a6aeed2f3dbb3fb0167d6f6e25506937c7ffd758), cool, cool-like, label(THREAD-SYNTAX.throw_;_THREAD-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(66,19,66,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("128dc0135ce87a6a8f825397a6aeed2f3dbb3fb0167d6f6e25506937c7ffd758"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.throw_;_THREAD-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,19,66,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`!__THREAD-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__THREAD-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(0edaf61a556aab37c399857af1b6ce063e08a9e92254bb6083675bbabd107b08), heat, label(THREAD-SYNTAX.!__THREAD-SYNTAX_Exp_Exp1-heat), org.kframework.attributes.Location(Location(40,18,40,50)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0edaf61a556aab37c399857af1b6ce063e08a9e92254bb6083675bbabd107b08"), label{}("THREAD-SYNTAX.!__THREAD-SYNTAX_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`!__THREAD-SYNTAX_Exp_Exp`(inj{Bool,Exp}(T)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`notBool_`(T))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4aeec95cd2dc4af1cf8f163a0bbdb8bd0f0d8a9d367f986dbbd89c96b99b5a6), org.kframework.attributes.Location(Location(266,8,266,25)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(VarT:SortBool{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(LblnotBool'Unds'{}(VarT:SortBool{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a4aeec95cd2dc4af1cf8f163a0bbdb8bd0f0d8a9d367f986dbbd89c96b99b5a6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(266,8,266,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`(_)__THREAD-SYNTAX_Exp_Id_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer(_)__THREAD-SYNTAX_Exp_Id_Exp1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8b588d5c663aedf12aa3cc91ca9e3fcb83dc8f565b8821d9931f728b64c7110a), heat, label(THREAD-SYNTAX.(_)__THREAD-SYNTAX_Exp_Id_Exp2-heat), org.kframework.attributes.Location(Location(18,18,18,53)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarK0:SortId{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8b588d5c663aedf12aa3cc91ca9e3fcb83dc8f565b8821d9931f728b64c7110a"), label{}("THREAD-SYNTAX.(_)__THREAD-SYNTAX_Exp_Id_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`-__THREAD-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__THREAD-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(25c11396790d39e332edee7947e1a4b7f98f792b7568ef68ada3e9d4ce8d43d7), heat, label(THREAD-SYNTAX.-__THREAD-SYNTAX_Exp_Exp1-heat), org.kframework.attributes.Location(Location(23,18,23,50)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("25c11396790d39e332edee7947e1a4b7f98f792b7568ef68ada3e9d4ce8d43d7"), label{}("THREAD-SYNTAX.-__THREAD-SYNTAX_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,18,23,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`-__THREAD-SYNTAX_Exp_Exp`(inj{Int,Exp}(I)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_-Int_`(#token("0","Int"),I))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9be3dca4586e6bb2c7b8e0e345443cd78386309bdfddd22ed32784e5f6b8deec), org.kframework.attributes.Location(Location(256,8,256,23)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9be3dca4586e6bb2c7b8e0e345443cd78386309bdfddd22ed32784e5f6b8deec"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(256,8,256,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_!=__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c48b9c672ff28816708350687d2894d1547f31ca8802bc0de05a9ecfc9c9ddff), heat, label(THREAD-SYNTAX._!=__THREAD-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(39,18,39,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c48b9c672ff28816708350687d2894d1547f31ca8802bc0de05a9ecfc9c9ddff"), label{}("THREAD-SYNTAX._!=__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_!=__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a6f7f63ae4691b0ac71429da9fed82fe5becf27e028d8da7626520341dec9493), heat, label(THREAD-SYNTAX._!=__THREAD-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(39,18,39,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a6f7f63ae4691b0ac71429da9fed82fe5becf27e028d8da7626520341dec9493"), label{}("THREAD-SYNTAX._!=__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_!=__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Val,Exp}(V1),inj{Val,Exp}(V2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_=/=K_`(inj{Val,KItem}(V1),inj{Val,KItem}(V2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e32d569c8ba37cdb1aa93f1c1573785749838aaed5e2602bdc9c9964e7ef697), org.kframework.attributes.Location(Location(262,8,262,38)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV1:SortVal{}),inj{SortVal{}, SortExp{}}(VarV2:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV1:SortVal{}),dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(VarV2:SortVal{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9e32d569c8ba37cdb1aa93f1c1573785749838aaed5e2602bdc9c9964e7ef697"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(262,8,262,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_%__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2f1d0aef593ba396c21a02d50356dcfa2fcda25cfa6697f6c2292614db2ef63f), heat, label(THREAD-SYNTAX._%__THREAD-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("2f1d0aef593ba396c21a02d50356dcfa2fcda25cfa6697f6c2292614db2ef63f"), label{}("THREAD-SYNTAX._%__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_%__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c97e49c8f9186ca6450b9c95a7815c63f2bdbb038c68867320edb3a42191a9d6), heat, label(THREAD-SYNTAX._%__THREAD-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c97e49c8f9186ca6450b9c95a7815c63f2bdbb038c68867320edb3a42191a9d6"), label{}("THREAD-SYNTAX._%__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_%__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_%Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_=/=K_`(inj{Int,KItem}(I2),inj{Int,KItem}(#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(c2eade6c9a1194b118231f5392d538bb115e14338fa9bf8b4c9149fc3c069569), org.kframework.attributes.Location(Location(255,8,255,48)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c2eade6c9a1194b118231f5392d538bb115e14338fa9bf8b4c9149fc3c069569"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,8,255,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_&&__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(19752330ce0cfe35f91e3eee5600b15288536fe1a880981b16b0358d4e6a56fe), heat, label(THREAD-SYNTAX._&&__THREAD-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(42,18,42,59)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("19752330ce0cfe35f91e3eee5600b15288536fe1a880981b16b0358d4e6a56fe"), label{}("THREAD-SYNTAX._&&__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,18,42,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_&&__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("false","Bool")),_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(#token("false","Bool"))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f2c44f7808a1c0f807b54f292e4ef0c81eefbcca140bbb89b509034f58c79d35), org.kframework.attributes.Location(Location(268,8,268,27)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("false")),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f2c44f7808a1c0f807b54f292e4ef0c81eefbcca140bbb89b509034f58c79d35"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(268,8,268,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_&&__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("true","Bool")),E))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(E)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad81de8c4a55205c0cfafa30e23fbdcec51f99a2af147594b8995b02708afcef), org.kframework.attributes.Location(Location(267,8,267,23)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),VarE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ad81de8c4a55205c0cfafa30e23fbdcec51f99a2af147594b8995b02708afcef"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(267,8,267,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_THREAD-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_THREAD-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3150a8935d76fc42804708045e54053caf94e34cf42a04263bc10a7e5b72efdd), heat, label(THREAD-SYNTAX._(_)_THREAD-SYNTAX_Exp_Exp_Exps2-heat), org.kframework.attributes.Location(Location(22,18,22,53)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3150a8935d76fc42804708045e54053caf94e34cf42a04263bc10a7e5b72efdd"), label{}("THREAD-SYNTAX._(_)_THREAD-SYNTAX_Exp_Exp_Exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_*__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(ac7e368b501d47f901f056f8b1317650648f520a9d22e78d6909b5c4f5da7655), heat, label(THREAD-SYNTAX._*__THREAD-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ac7e368b501d47f901f056f8b1317650648f520a9d22e78d6909b5c4f5da7655"), label{}("THREAD-SYNTAX._*__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_*__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(26cb29154b22cd9c1d2f99eebfb449a17c503e33a3bf50b04a15450c40c4902f), heat, label(THREAD-SYNTAX._*__THREAD-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("26cb29154b22cd9c1d2f99eebfb449a17c503e33a3bf50b04a15450c40c4902f"), label{}("THREAD-SYNTAX._*__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_*__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_*Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b04897b14dee6b2288485d2332de52269b662a46efbdf79b6fddba68cb4a68c), org.kframework.attributes.Location(Location(253,8,253,29)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsStar'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3b04897b14dee6b2288485d2332de52269b662a46efbdf79b6fddba68cb4a68c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,8,253,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8839c680d219d20a92bb014f5091f53a6577b160e7134d37adf53143e15d45cf), heat, label(THREAD-SYNTAX._+__THREAD-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(31,18,31,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8839c680d219d20a92bb014f5091f53a6577b160e7134d37adf53143e15d45cf"), label{}("THREAD-SYNTAX._+__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(be6c6e29cf87cf76fefebcc12b3293c7ea6056e56bcafe349d7ce9687dc883ba), heat, label(THREAD-SYNTAX._+__THREAD-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(31,18,31,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("be6c6e29cf87cf76fefebcc12b3293c7ea6056e56bcafe349d7ce9687dc883ba"), label{}("THREAD-SYNTAX._+__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_+Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb3bc5260906b3bf56b4dade0bb13e41a8aace611d4dae31ef1bcd06ebc9d290), org.kframework.attributes.Location(Location(250,8,250,29)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("eb3bc5260906b3bf56b4dade0bb13e41a8aace611d4dae31ef1bcd06ebc9d290"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(250,8,250,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_+__THREAD-SYNTAX_Exp_Exp_Exp`(inj{String,Exp}(Str1),inj{String,Exp}(Str2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Str1,Str2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8b44c71b8b16284064d65c246b3b0af34c3ad5ce86699110203a29aa10528ab8), org.kframework.attributes.Location(Location(251,8,251,40)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortString{}, SortExp{}}(VarStr1:SortString{}),inj{SortString{}, SortExp{}}(VarStr2:SortString{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarStr1:SortString{},VarStr2:SortString{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8b44c71b8b16284064d65c246b3b0af34c3ad5ce86699110203a29aa10528ab8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(251,8,251,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_-__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b43c5d3e8e10e95e3e72a4b83f19e5865929dc50b39c802232bab3d702b0eaf2), heat, label(THREAD-SYNTAX._-__THREAD-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(32,18,32,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b43c5d3e8e10e95e3e72a4b83f19e5865929dc50b39c802232bab3d702b0eaf2"), label{}("THREAD-SYNTAX._-__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_-__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3b1fbbf2795d868bc42179299f5f199a828a3f9ee90416a237ca4a0138e26607), heat, label(THREAD-SYNTAX._-__THREAD-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(32,18,32,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3b1fbbf2795d868bc42179299f5f199a828a3f9ee90416a237ca4a0138e26607"), label{}("THREAD-SYNTAX._-__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_-__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_-Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fe2c696172f8e7e7e20c91bcbc3a2011dcd37a76b88202f7331e13908d444870), org.kframework.attributes.Location(Location(252,8,252,29)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("fe2c696172f8e7e7e20c91bcbc3a2011dcd37a76b88202f7331e13908d444870"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(252,8,252,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_/__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(49e79b8687f1ff6c9daa0e133aa4472b84be490c3fbf9f83662eebe4ccc94bd4), heat, label(THREAD-SYNTAX._/__THREAD-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(28,18,28,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("49e79b8687f1ff6c9daa0e133aa4472b84be490c3fbf9f83662eebe4ccc94bd4"), label{}("THREAD-SYNTAX._/__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,18,28,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_/__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b8a8d0d80752e2c7ee79bda3c2987d6c806a1474862a3b317a6a3513f6a0cdc4), heat, label(THREAD-SYNTAX._/__THREAD-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(28,18,28,56)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b8a8d0d80752e2c7ee79bda3c2987d6c806a1474862a3b317a6a3513f6a0cdc4"), label{}("THREAD-SYNTAX._/__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,18,28,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_/__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`_/Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_=/=K_`(inj{Int,KItem}(I2),inj{Int,KItem}(#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(03a54db6aaa190b0d233e4b0011766a2a8abdafc1c4077c6e1d0dbdbf920c30d), org.kframework.attributes.Location(Location(254,8,254,48)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsSlsh'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("03a54db6aaa190b0d233e4b0011766a2a8abdafc1c4077c6e1d0dbdbf920c30d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(254,8,254,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<=__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a3802ece7c57396e0e247701e634481c26d566a87a4ca6b806032e00682c870b), heat, label(THREAD-SYNTAX._<=__THREAD-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a3802ece7c57396e0e247701e634481c26d566a87a4ca6b806032e00682c870b"), label{}("THREAD-SYNTAX._<=__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<=__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8a0cc35bf066108acd51916c4db2182a06c76b87548b726d7ee220003c134959), heat, label(THREAD-SYNTAX._<=__THREAD-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8a0cc35bf066108acd51916c4db2182a06c76b87548b726d7ee220003c134959"), label{}("THREAD-SYNTAX._<=__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<=__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_<=Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c4b814cc34a2d75c2da7af6729a4ea51ba0c4ec94218457c731d33f35d25b2a7), org.kframework.attributes.Location(Location(258,8,258,31)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c4b814cc34a2d75c2da7af6729a4ea51ba0c4ec94218457c731d33f35d25b2a7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(258,8,258,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(761636d6b9f6fff2c9523f02e2df0f46dd0de3de0507a19a89b60a7f20f957a6), heat, label(THREAD-SYNTAX._<__THREAD-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("761636d6b9f6fff2c9523f02e2df0f46dd0de3de0507a19a89b60a7f20f957a6"), label{}("THREAD-SYNTAX._<__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8bc69a4a4e55be3708a4654d89769ed9b64b726629e281d16b10f944ba5599c6), heat, label(THREAD-SYNTAX._<__THREAD-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8bc69a4a4e55be3708a4654d89769ed9b64b726629e281d16b10f944ba5599c6"), label{}("THREAD-SYNTAX._<__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_<__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_<Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad85f219f3c049431cfa9984f8ca35d612cf3c0f6b9d26a744bd92b805507299), org.kframework.attributes.Location(Location(257,8,257,29)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ad85f219f3c049431cfa9984f8ca35d612cf3c0f6b9d26a744bd92b805507299"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,8,257,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_==__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6e68295bd5cb365a627011b736d7fb8d961dbd2c139ab8624f0d7cc64c012555), heat, label(THREAD-SYNTAX._==__THREAD-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(38,18,38,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6e68295bd5cb365a627011b736d7fb8d961dbd2c139ab8624f0d7cc64c012555"), label{}("THREAD-SYNTAX._==__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_==__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(57c7888286c5d86082f73a92e82e2bedd797fcf40f1e0927c14dd2f1dd903b18), heat, label(THREAD-SYNTAX._==__THREAD-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(38,18,38,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("57c7888286c5d86082f73a92e82e2bedd797fcf40f1e0927c14dd2f1dd903b18"), label{}("THREAD-SYNTAX._==__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_==__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Val,Exp}(V1),inj{Val,Exp}(V2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_==K_`(inj{Val,KItem}(V1),inj{Val,KItem}(V2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07b531e2ef668a59052ba351be8c283a0aacaadcfed186b3517d001560d82a6a), org.kframework.attributes.Location(Location(261,8,261,37)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV1:SortVal{}),inj{SortVal{}, SortExp{}}(VarV2:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV1:SortVal{}),dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(VarV2:SortVal{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("07b531e2ef668a59052ba351be8c283a0aacaadcfed186b3517d001560d82a6a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(261,8,261,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_=__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Exp,KItem}(HOLE)))~>`#freezer_=__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8cc75e40e401ce7c19f0cc94f1417e70f48498539d27617d9fdaad8ad958e4ce), heat, org.kframework.attributes.Location(Location(173,11,173,37)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8cc75e40e401ce7c19f0cc94f1417e70f48498539d27617d9fdaad8ad958e4ce"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,11,173,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_=__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_=__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(19377d380d197207774a811e340a5b3ab45b832af71b60f01f229d20c6f9c5d6), heat, label(THREAD-SYNTAX._=__THREAD-SYNTAX_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(45,18,45,60)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), right, strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("19377d380d197207774a811e340a5b3ab45b832af71b60f01f229d20c6f9c5d6"), label{}("THREAD-SYNTAX._=__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,18,45,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_=__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Val,Exp}(`loc(_)_THREAD_Val_Int`(L)),inj{Val,Exp}(V)))~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),_Gen0),_DotVar2)),_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Val,KItem}(V)~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(V)),_DotVar2)),_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b5874c11a028d52f5310ccaa1f14f59a504f4be661345af3b51f511060696bdf), org.kframework.attributes.Location(Location(186,8,186,77)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblloc'LParUndsRParUnds'THREAD'Unds'Val'Unds'Int{}(VarL:SortInt{})),inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),Var'Unds'Gen0:SortKItem{}),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b5874c11a028d52f5310ccaa1f14f59a504f4be661345af3b51f511060696bdf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(186,8,186,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>=__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4b96b8002acf2fa590a2e321410efe7ccd95a9fd1bdd12a00823077d15fc498f), heat, label(THREAD-SYNTAX._>=__THREAD-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4b96b8002acf2fa590a2e321410efe7ccd95a9fd1bdd12a00823077d15fc498f"), label{}("THREAD-SYNTAX._>=__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>=__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(ff587f0fc8659d684e4c5476af3e9776755c5a5a9faa7efb1345736faa4f3b32), heat, label(THREAD-SYNTAX._>=__THREAD-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ff587f0fc8659d684e4c5476af3e9776755c5a5a9faa7efb1345736faa4f3b32"), label{}("THREAD-SYNTAX._>=__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>=__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_>=Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cbed47f0440494235b9360a9a4194ff6f741921cfe2f23cb980c128a4c567931), org.kframework.attributes.Location(Location(260,8,260,31)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cbed47f0440494235b9360a9a4194ff6f741921cfe2f23cb980c128a4c567931"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(260,8,260,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b4b4c5a6eed6a270c7508a295498a0460b6962ccd8a0ed7d307b68f2992b641c), heat, label(THREAD-SYNTAX._>__THREAD-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b4b4c5a6eed6a270c7508a295498a0460b6962ccd8a0ed7d307b68f2992b641c"), label{}("THREAD-SYNTAX._>__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>__THREAD-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__THREAD-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8f6fe58ba51b1386898771e729cb140027c3369702a7b3fda0ddaef976ad3f63), heat, label(THREAD-SYNTAX._>__THREAD-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8f6fe58ba51b1386898771e729cb140027c3369702a7b3fda0ddaef976ad3f63"), label{}("THREAD-SYNTAX._>__THREAD-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_>__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(`_>Int_`(I1,I2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d2aea38abb0bf25d0ff6a698ceb5b7bf6ede3a11f4863455bb53464513ff1bf5), org.kframework.attributes.Location(Location(259,8,259,29)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d2aea38abb0bf25d0ff6a698ceb5b7bf6ede3a11f4863455bb53464513ff1bf5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(259,8,259,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_[_]_THREAD-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e9eefadd29d2eeab72d347b98e98f305f143d30e5c1e63957c1f420f275eb27f), heat, label(THREAD-SYNTAX._[_]_THREAD-SYNTAX_Exp_Exp_Exps1-heat), org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e9eefadd29d2eeab72d347b98e98f305f143d30e5c1e63957c1f420f275eb27f"), label{}("THREAD-SYNTAX._[_]_THREAD-SYNTAX_Exp_Exp_Exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_[_]_THREAD-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(52d113ba6ef5291e63fac4a3f93652b3633b6c5be6da47726a285546310809ed), heat, label(THREAD-SYNTAX._[_]_THREAD-SYNTAX_Exp_Exp_Exps2-heat), org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("52d113ba6ef5291e63fac4a3f93652b3633b6c5be6da47726a285546310809ed"), label{}("THREAD-SYNTAX._[_]_THREAD-SYNTAX_Exp_Exp_Exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(V),inj{Vals,Exps}(`_,__THREAD-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1),`_,__THREAD-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs)))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(V),inj{Vals,Exps}(`_,__THREAD-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1),`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Vals,Exps}(`_,__THREAD-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fa9b66b2de3565f01b6aaf4794b4bcfc52d584493f10192ca99e5099fe0f1ed3), org.kframework.attributes.Location(Location(167,8,167,55)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{}))))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("fa9b66b2de3565f01b6aaf4794b4bcfc52d584493f10192ca99e5099fe0f1ed3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,8,167,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(`array(_,_)_THREAD_Val_Int_Int`(L,_Gen0)),inj{Vals,Exps}(`_,__THREAD-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N),`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lookup(_)_THREAD_Exp_Int`(`_+Int_`(L,N)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(28e7c925523633bd0ff73fd70d921dd639c6a3f0fee810c9460401dbfbb42ef0), org.kframework.attributes.Location(Location(168,8,168,45)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(Lblarray'LParUndsCommUndsRParUnds'THREAD'Unds'Val'Unds'Int'Unds'Int{}(VarL:SortInt{},Var'Unds'Gen0:SortInt{})),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllookup'LParUndsRParUnds'THREAD'Unds'Exp'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},VarN:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("28e7c925523633bd0ff73fd70d921dd639c6a3f0fee810c9460401dbfbb42ef0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,8,168,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_instanceOf__THREAD-SYNTAX_Exp_Exp_Id`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_instanceOf__THREAD-SYNTAX_Exp_Exp_Id0_`(inj{Id,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(ea11191c1acf8e7d2801eadecba516fdefbe8b283deab3b17af68531a21c5197), heat, label(THREAD-SYNTAX._instanceOf__THREAD-SYNTAX_Exp_Exp_Id1-heat), org.kframework.attributes.Location(Location(17,18,17,53)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},VarK1:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK1:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ea11191c1acf8e7d2801eadecba516fdefbe8b283deab3b17af68531a21c5197"), label{}("THREAD-SYNTAX._instanceOf__THREAD-SYNTAX_Exp_Exp_Id1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_||__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f7bfc88c85ff0de2de0b13dd4d068729be31b41368e1dba97258a5aed7392c36), heat, label(THREAD-SYNTAX._||__THREAD-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(43,18,43,59)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f7bfc88c85ff0de2de0b13dd4d068729be31b41368e1dba97258a5aed7392c36"), label{}("THREAD-SYNTAX._||__THREAD-SYNTAX_Exp_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_||__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("false","Bool")),E))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(E)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d311a5ab6a3db3e49ed056dc11263c8df8163ac27ebe12ef419196f9fccd9bea), org.kframework.attributes.Location(Location(270,8,270,23)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),VarE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d311a5ab6a3db3e49ed056dc11263c8df8163ac27ebe12ef419196f9fccd9bea"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(270,8,270,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_||__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("true","Bool")),_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Bool,KItem}(#token("true","Bool"))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(217f445bb90d275201251dd1a39c0d8c5236f5118b524251e309d09d384bf2cb), org.kframework.attributes.Location(Location(269,8,269,26)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("true")),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("217f445bb90d275201251dd1a39c0d8c5236f5118b524251e309d09d384bf2cb"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(269,8,269,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Exp,KItem}(HOLE)))~>`#freezer_=__THREAD-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_=__THREAD-SYNTAX_Exp_Exp_Exp`(HOLE,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e4af600618660284a6ede2781a2eb3b2958775f9b2f21415d4e98dc627853ca8), cool, org.kframework.attributes.Location(Location(173,11,173,37)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e4af600618660284a6ede2781a2eb3b2958775f9b2f21415d4e98dc627853ca8"), cool{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,11,173,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Exp,KItem}(`_.__THREAD-SYNTAX_Exp_Exp_Id`(HOLE,_Gen0))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerlvalue(_)_THREAD_Exp_K0_2`(inj{Id,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(693080bbdda488c9d796f458010cb88eeada6e71195fd9c7c45c6f3c214a4d13), heat, org.kframework.attributes.Location(Location(182,11,182,34)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortId{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'2{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("693080bbdda488c9d796f458010cb88eeada6e71195fd9c7c45c6f3c214a4d13"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,11,182,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(HOLE,_Gen0))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerlvalue(_)_THREAD_Exp_K0_`(inj{Exps,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c7b28e724a6f9dcb5bcade76b4932cb576af8040bcdcb037335391d9f275ada3), heat, org.kframework.attributes.Location(Location(194,11,194,37)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen0:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c7b28e724a6f9dcb5bcade76b4932cb576af8040bcdcb037335391d9f275ada3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(194,11,194,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(_Gen0,HOLE))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerlvalue(_)_THREAD_Exp_K1_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(bdeee875360c82722f8c09786eecaf4a0e9784e7058f359b695269aceaa000ca), heat, org.kframework.attributes.Location(Location(190,11,190,37)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen0:SortExp{},VarHOLE:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("bdeee875360c82722f8c09786eecaf4a0e9784e7058f359b695269aceaa000ca"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,11,190,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Id,KItem}(X)))~>_DotVar4),`<env>`(Env),_Gen0,_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Exp,KItem}(`_.__THREAD-SYNTAX_Exp_Exp_Id`(`this_THREAD-SYNTAX_Exp`(.KList),X))))~>_DotVar4),`<env>`(Env),_Gen0,_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),`keys(_)_MAP_Set_Map`(Env))) ensures #token("true","Bool") [UNIQUE_ID(58af3b18828f47f47bec5a299b83844ff5dda42e1a889f4161e8e888ba088f80), org.kframework.attributes.Location(Location(180,8,181,37)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarEnv:SortMap{}))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStopUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Lblthis'Unds'THREAD-SYNTAX'Unds'Exp{}(),VarX:SortId{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("58af3b18828f47f47bec5a299b83844ff5dda42e1a889f4161e8e888ba088f80"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,8,181,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Id,KItem}(X)))~>_DotVar4),`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),inj{Int,KItem}(L)),_DotVar5)),_Gen0,_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Val,KItem}(`loc(_)_THREAD_Val_Int`(L))))~>_DotVar4),`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),inj{Int,KItem}(L)),_DotVar5)),_Gen0,_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(76127d182046cb0cffe1c01d7bee43a6a41ca2ed19eec120322f7f20a7bfe33d), org.kframework.attributes.Location(Location(178,8,178,73)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lblloc'LParUndsRParUnds'THREAD'Unds'Val'Unds'Int{}(VarL:SortInt{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("76127d182046cb0cffe1c01d7bee43a6a41ca2ed19eec120322f7f20a7bfe33d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,8,178,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`new_(_)_THREAD-SYNTAX_Exp_Id_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezernew_(_)_THREAD-SYNTAX_Exp_Id_Exps1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(0627d25e35f84c0ce4042599541c690657e8151f70d7704df84a6ec6a52a5b38), heat, label(THREAD-SYNTAX.new_(_)_THREAD-SYNTAX_Exp_Id_Exps2-heat), org.kframework.attributes.Location(Location(19,18,19,53)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(VarK0:SortId{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0627d25e35f84c0ce4042599541c690657e8151f70d7704df84a6ec6a52a5b38"), label{}("THREAD-SYNTAX.new_(_)_THREAD-SYNTAX_Exp_Id_Exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_THREAD-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezersizeOf(_)_THREAD-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(aa3028d7a4461cd0a7200530893643621a9a8ef7ccf4c6e454edde4281b149bd), heat, label(THREAD-SYNTAX.sizeOf(_)_THREAD-SYNTAX_Exp_Exp1-heat), org.kframework.attributes.Location(Location(24,18,24,50)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezersizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("aa3028d7a4461cd0a7200530893643621a9a8ef7ccf4c6e454edde4281b149bd"), label{}("THREAD-SYNTAX.sizeOf(_)_THREAD-SYNTAX_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,18,24,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_THREAD-SYNTAX_Exp_Exp`(inj{Val,Exp}(`array(_,_)_THREAD_Val_Int_Int`(_Gen0,N))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(N)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(44e9830cd8991a4f436fd42088b65472687b8d5741bd95ec44d93d8219caf303), org.kframework.attributes.Location(Location(264,8,264,31)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblarray'LParUndsCommUndsRParUnds'THREAD'Unds'Val'Unds'Int'Unds'Int{}(Var'Unds'Gen0:SortInt{},VarN:SortInt{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarN:SortInt{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("44e9830cd8991a4f436fd42088b65472687b8d5741bd95ec44d93d8219caf303"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(264,8,264,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`spawn__THREAD-SYNTAX_Exp_Block`(S))~>_DotVar4),`<env>`(Env),_Gen0,_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),`<generatedCounter>`(#Fresh))=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Int,KItem}(`freshInt(_)_INT_Int_Int`(`_+Int_`(#Fresh,#token("0","Int"))))~>_DotVar4),`<env>`(Env),_Gen0,_Gen1)),`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(S)),`<env>`(Env),initHoldsCell(.KList),`<id>`(`freshInt(_)_INT_Int_Int`(`_+Int_`(#Fresh,#token("0","Int"))))))),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),`<generatedCounter>`(`_+Int_`(#Fresh,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c1fec1e2227a02ddf2e3bfd77873f6ba8a600675185ec12fc7777336e9fcf231), org.kframework.attributes.Location(Location(198,8,206,27)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblspawn'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Block{}(VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Lbl'-LT-'generatedCounter'-GT-'{}(Var'Hash'Fresh:SortInt{})),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("0")))),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),dotk{}())),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),LblinitHoldsCell{}(),Lbl'-LT-'id'-GT-'{}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("0"))))))),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Lbl'-LT-'generatedCounter'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("1")))), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c1fec1e2227a02ddf2e3bfd77873f6ba8a600675185ec12fc7777336e9fcf231"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(198,8,206,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_THREAD-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_(_)_THREAD-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(8c06c52dc1c09ce633b1d56d71d6e6ad505a3521feb0828dcdd3e9521a1bec6e), cool, cool-like, label(THREAD-SYNTAX._(_)_THREAD-SYNTAX_Exp_Exp_Exps2-cool), org.kframework.attributes.Location(Location(22,18,22,53)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8c06c52dc1c09ce633b1d56d71d6e6ad505a3521feb0828dcdd3e9521a1bec6e"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._(_)_THREAD-SYNTAX_Exp_Exp_Exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__THREAD-SYNTAX_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(3c2e3631df6a6f165e9ef61db471d76c21cb5f0ea3bf86544c9e92e9322146c2), cool, cool-like, label(THREAD-SYNTAX._,__THREAD-SYNTAX_Exps_Exp_Exps2-cool), org.kframework.attributes.Location(Location(49,19,49,66)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), overload(exps), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3c2e3631df6a6f165e9ef61db471d76c21cb5f0ea3bf86544c9e92e9322146c2"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._,__THREAD-SYNTAX_Exps_Exp_Exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_[_]_THREAD-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(3f034872902f94a1df8dae86083521202cb6ddbbd6da1ec651807decb1a08243), cool, cool-like, label(THREAD-SYNTAX._[_]_THREAD-SYNTAX_Exp_Exp_Exps2-cool), org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3f034872902f94a1df8dae86083521202cb6ddbbd6da1ec651807decb1a08243"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX._[_]_THREAD-SYNTAX_Exp_Exp_Exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerlvalue(_)_THREAD_Exp_K1_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`lvalue(_)_THREAD_Exp_K`(inj{Exp,KItem}(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(_Gen0,HOLE))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(3d93982e99f217b0c8b9ed5d13d62030f5fcbbe57a9c4b25553e1fea9755e77f), cool, cool-like, org.kframework.attributes.Location(Location(190,11,190,37)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'THREAD'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen0:SortExp{},VarHOLE:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3d93982e99f217b0c8b9ed5d13d62030f5fcbbe57a9c4b25553e1fea9755e77f"), cool{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,11,190,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezernew_(_)_THREAD-SYNTAX_Exp_Id_Exps1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(`new_(_)_THREAD-SYNTAX_Exp_Id_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(d426f839e5931cb2a9321b74c4eb301e6bda9afe44c3859bb107111e3bf123b4), cool, cool-like, label(THREAD-SYNTAX.new_(_)_THREAD-SYNTAX_Exp_Id_Exps2-cool), org.kframework.attributes.Location(Location(19,18,19,53)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezernew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblnew'UndsLParUndsRParUnds'THREAD-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(VarK0:SortId{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d426f839e5931cb2a9321b74c4eb301e6bda9afe44c3859bb107111e3bf123b4"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.new_(_)_THREAD-SYNTAX_Exp_Id_Exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerprint(_);_THREAD-SYNTAX_Stmt_Exps0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`print(_);_THREAD-SYNTAX_Stmt_Exps`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(b0b86fbf56d30994f5cfe2c98afa5fef6ed62b5c1ee6c4b5db16fdee1401aa43), cool, cool-like, label(THREAD-SYNTAX.print(_);_THREAD-SYNTAX_Stmt_Exps1-cool), org.kframework.attributes.Location(Location(64,19,64,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b0b86fbf56d30994f5cfe2c98afa5fef6ed62b5c1ee6c4b5db16fdee1401aa43"), cool{}(), cool-like{}(), label{}("THREAD-SYNTAX.print(_);_THREAD-SYNTAX_Stmt_Exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,19,64,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezervar_;_THREAD-SYNTAX_Stmt_Exps1_`(inj{Id,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(_Gen0),HOLE),inj{Vals,Exps}(`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(1fb82eadf695bfa2a5c26c53abf65395addb396b62e1f43f20cadc6cf38b3524), cool, cool-like, org.kframework.attributes.Location(Location(132,11,132,26)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(Var'Unds'Gen0:SortId{}),VarHOLE:SortExps{}),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1fb82eadf695bfa2a5c26c53abf65395addb396b62e1f43f20cadc6cf38b3524"), cool{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(132,11,132,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__THREAD-SYNTAX_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8a79b2d33a8ff07e2e6a5484c77182f2f943036a855812bded559dbf5657b951), heat, label(THREAD-SYNTAX._,__THREAD-SYNTAX_Exps_Exp_Exps1-heat), org.kframework.attributes.Location(Location(49,19,49,66)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), overload(exps), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8a79b2d33a8ff07e2e6a5484c77182f2f943036a855812bded559dbf5657b951"), label{}("THREAD-SYNTAX._,__THREAD-SYNTAX_Exps_Exp_Exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__THREAD-SYNTAX_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6ade653cf79adbee70297c84d7000d8dadb77eb14fd79a77b98c1e2a248aa670), heat, label(THREAD-SYNTAX._,__THREAD-SYNTAX_Exps_Exp_Exps2-heat), org.kframework.attributes.Location(Location(49,19,49,66)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), overload(exps), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6ade653cf79adbee70297c84d7000d8dadb77eb14fd79a77b98c1e2a248aa670"), label{}("THREAD-SYNTAX._,__THREAD-SYNTAX_Exps_Exp_Exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Id,KItem}(X)~>_DotVar5),`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),L),_DotVar6)),_Gen0,_Gen1)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(L,inj{Val,KItem}(V)),_DotVar2)) #as _Gen8,_Gen2,_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Val,KItem}(V)~>_DotVar5),`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),L),_DotVar6)),_Gen0,_Gen1)),_DotVar3)),_Gen8,_Gen2,_Gen3,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9d280516846db4a9132ce64f58dde5ead5cb44441018a4005f9f9534fbc13d3c), cool-like, group(lookup), org.kframework.attributes.Location(Location(159,8,161,42)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'DotVar5:SortK{})),Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarL:SortKItem{}),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen8:SortStoreCell{}),Var'Unds'Gen2:SortBusyCell{},Var'Unds'Gen3:SortTerminatedCell{},Var'Unds'Gen4:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar5:SortK{})),Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarL:SortKItem{}),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen8:SortStoreCell{},Var'Unds'Gen2:SortBusyCell{},Var'Unds'Gen3:SortTerminatedCell{},Var'Unds'Gen4:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9d280516846db4a9132ce64f58dde5ead5cb44441018a4005f9f9534fbc13d3c"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(159,8,161,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(213b4238ba7c8af1bf9a6cc751cbf45c135dd2a9e7461a8407abf3d2caf259ea), heat, label(THREAD-SYNTAX._;_THREAD-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(57,19,57,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("213b4238ba7c8af1bf9a6cc751cbf45c135dd2a9e7461a8407abf3d2caf259ea"), label{}("THREAD-SYNTAX._;_THREAD-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`_;_THREAD-SYNTAX_Stmt_Exp`(inj{Val,Exp}(_Gen0)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0736f02472a2ccb83bd89f7fcef6b4b8da0bb315f189a57f6dcbfce20a56e3ab), org.kframework.attributes.Location(Location(277,8,277,20)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Var'Unds'Gen0:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0736f02472a2ccb83bd89f7fcef6b4b8da0bb315f189a57f6dcbfce20a56e3ab"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(277,8,277,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`___THREAD-SYNTAX_Stmt_Stmt_Stmt`(S1,S2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(S1)~>inj{Stmt,KItem}(S2)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afdcef3caedd1b0e61bda376f863b0bfa58519222cfea10b977279597c2b8c92), org.kframework.attributes.Location(Location(276,8,276,35)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarS1:SortStmt{},VarS2:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS1:SortStmt{}),kseq{}(inj{SortStmt{}, SortKItem{}}(VarS2:SortStmt{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("afdcef3caedd1b0e61bda376f863b0bfa58519222cfea10b977279597c2b8c92"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,8,276,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`acquire_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezeracquire_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5b492af6d5362719726786cdf92b8befd3c0931199ec3d0eddbb55e57ca74107), heat, label(THREAD-SYNTAX.acquire_;_THREAD-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(68,19,68,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezeracquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5b492af6d5362719726786cdf92b8befd3c0931199ec3d0eddbb55e57ca74107"), label{}("THREAD-SYNTAX.acquire_;_THREAD-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,19,68,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`acquire_;_THREAD-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen0,`<holds>`(`_Map_`(`.Map`(.KList),_DotVar5)),_Gen1)),_DotVar2)),_Gen2,`<busy>`(Busy),_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(#token("0","Int"))),_DotVar5)),_Gen1)),_DotVar2)),_Gen2,`<busy>`(`_Set_`(Busy,`SetItem`(inj{Val,KItem}(V)))),_Gen3,_Gen4),_DotVar0) requires `notBool_`(`Set:in`(inj{Val,KItem}(V),Busy)) ensures #token("true","Bool") [UNIQUE_ID(f184a3688737d605ef5de34cc9a40d2783085bb601f990829c9580bd82a580b2), label(THREAD.acquire), org.kframework.attributes.Location(Location(222,19,225,34)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(VarBusy:SortSet{}),Var'Unds'Gen3:SortTerminatedCell{},Var'Unds'Gen4:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),VarBusy:SortSet{})),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0"))),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(Lbl'Unds'Set'Unds'{}(VarBusy:SortSet{},LblSetItem{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{})))),Var'Unds'Gen3:SortTerminatedCell{},Var'Unds'Gen4:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f184a3688737d605ef5de34cc9a40d2783085bb601f990829c9580bd82a580b2"), label{}("THREAD.acquire"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(222,19,225,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`acquire_;_THREAD-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen0,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(N)),_DotVar5)),_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(`_+Int_`(N,#token("1","Int")))),_DotVar5)),_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d618dcb58f84b8c44622f57bc7ab59af606a31e2fe3f46c42e11665ff9606457), org.kframework.attributes.Location(Location(230,8,231,54)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d618dcb58f84b8c44622f57bc7ab59af606a31e2fe3f46c42e11665ff9606457"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(230,8,231,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block0_`(inj{Block,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8755fb96a6c2bcac35a91c4d0d49f98d68fd89955049fa8ebd61bf8232eaf857), avoid, heat, label(THREAD-SYNTAX.if(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block1-heat), org.kframework.attributes.Location(Location(58,19,58,75)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8755fb96a6c2bcac35a91c4d0d49f98d68fd89955049fa8ebd61bf8232eaf857"), label{}("THREAD-SYNTAX.if(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block`(inj{Bool,Exp}(#token("false","Bool")),_Gen0,S))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(S)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a9169eb4d59d9d3c768324b8d2af5a3a6267e13e99fda459a0744ff362a6d08d), org.kframework.attributes.Location(Location(280,8,280,32)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),Var'Unds'Gen0:SortBlock{},VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a9169eb4d59d9d3c768324b8d2af5a3a6267e13e99fda459a0744ff362a6d08d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(280,8,280,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block`(inj{Bool,Exp}(#token("true","Bool")),S,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Block,KItem}(S)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73cf5d0d302164d326bf497addfed754c102b5835f3e17d443e5c06b1e9c2cd4), label(THREAD.ifTrue), org.kframework.attributes.Location(Location(279,18,279,42)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),VarS:SortBlock{},Var'Unds'Gen0:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("73cf5d0d302164d326bf497addfed754c102b5835f3e17d443e5c06b1e9c2cd4"), label{}("THREAD.ifTrue"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,18,279,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`join_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerjoin_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f58201be68a43c9e3b3837700bada68da26a8b4fb9433ca6d7d94b7681d800fb), heat, label(THREAD-SYNTAX.join_;_THREAD-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(67,19,67,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerjoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f58201be68a43c9e3b3837700bada68da26a8b4fb9433ca6d7d94b7681d800fb"), label{}("THREAD-SYNTAX.join_;_THREAD-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,19,67,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`join_;_THREAD-SYNTAX_Stmt_Exp`(inj{Int,Exp}(T)))~>_DotVar5),_Gen0,_Gen1,_Gen2)),_DotVar3)),_Gen3,_Gen4,`<terminated>`(`_Set_`(`SetItem`(inj{Int,KItem}(T)),_DotVar2)) #as _Gen9,_Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),_Gen0,_Gen1,_Gen2)),_DotVar3)),_Gen3,_Gen4,_Gen9,_Gen5),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d2bbd2b22c54e862d1c97d5d2d6c64bbfbd37b0e8b7df29dee7a3262bac9ec47), org.kframework.attributes.Location(Location(216,8,217,51)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarT:SortInt{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},\and{SortTerminatedCell{}}(Lbl'-LT-'terminated'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortInt{}, SortKItem{}}(VarT:SortInt{})),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen9:SortTerminatedCell{}),Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d2bbd2b22c54e862d1c97d5d2d6c64bbfbd37b0e8b7df29dee7a3262bac9ec47"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(216,8,217,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`print(_);_THREAD-SYNTAX_Stmt_Exps`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerprint(_);_THREAD-SYNTAX_Stmt_Exps0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b93d726fb51ae55e6be46a46eb6eb3e7451883b3d7b3569cfc117d039dc09aab), heat, label(THREAD-SYNTAX.print(_);_THREAD-SYNTAX_Stmt_Exps1-heat), org.kframework.attributes.Location(Location(64,19,64,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerprint'LParUndsRParSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b93d726fb51ae55e6be46a46eb6eb3e7451883b3d7b3569cfc117d039dc09aab"), label{}("THREAD-SYNTAX.print(_);_THREAD-SYNTAX_Stmt_Exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,19,64,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`release_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrelease_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f31c25396c0d9d59196b26fce6ca319dd0c34b5f48b38cebfed2b6a7af3f14d0), heat, label(THREAD-SYNTAX.release_;_THREAD-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(69,19,69,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f31c25396c0d9d59196b26fce6ca319dd0c34b5f48b38cebfed2b6a7af3f14d0"), label{}("THREAD-SYNTAX.release_;_THREAD-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,19,69,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`release_;_THREAD-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen0,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(N)),_DotVar5)),_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(`_-Int_`(N,#token("1","Int")))),_DotVar5)),_Gen1)),_DotVar2)),_Gen2,_Gen3,_Gen4,_Gen5),_DotVar0) requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(550c9aa135fe8341bdc59fb83a7f891f201fec0bc4c95f78f2f059cec3bfd2c8), org.kframework.attributes.Location(Location(235,8,237,22)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("550c9aa135fe8341bdc59fb83a7f891f201fec0bc4c95f78f2f059cec3bfd2c8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(235,8,237,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`release_;_THREAD-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar5),_Gen0,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(#token("0","Int"))),_DotVar6)),_Gen1)),_DotVar3)),_Gen2,`<busy>`(`_Set_`(`SetItem`(inj{Val,KItem}(V)),_DotVar2)),_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),_Gen0,`<holds>`(`_Map_`(`.Map`(.KList),_DotVar6)),_Gen1)),_DotVar3)),_Gen2,`<busy>`(_DotVar2),_Gen3,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5ae3761d5a3653349a509b3e269f29bd4e47c94521f3648da63257c40afc8766), label(THREAD.release), org.kframework.attributes.Location(Location(241,19,242,47)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0"))),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen3:SortTerminatedCell{},Var'Unds'Gen4:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen0:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Var'Unds'Gen2:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(Var'Unds'DotVar2:SortSet{}),Var'Unds'Gen3:SortTerminatedCell{},Var'Unds'Gen4:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5ae3761d5a3653349a509b3e269f29bd4e47c94521f3648da63257c40afc8766"), label{}("THREAD.release"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(241,19,242,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrendezvous_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(cc944a23ee5a13d1aef796762920748a1bbf548bf74c34e45c23a0d3234c26de), heat, label(THREAD-SYNTAX.rendezvous_;_THREAD-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(70,19,70,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cc944a23ee5a13d1aef796762920748a1bbf548bf74c34e45c23a0d3234c26de"), label{}("THREAD-SYNTAX.rendezvous_;_THREAD-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,19,70,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`return_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerreturn_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(9db0bb69b8c1adb57c47ebf762531d30824d36c21cd022d7727e78050ed178eb), heat, label(THREAD-SYNTAX.return_;_THREAD-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(62,19,62,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerreturn'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9db0bb69b8c1adb57c47ebf762531d30824d36c21cd022d7727e78050ed178eb"), label{}("THREAD-SYNTAX.return_;_THREAD-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`throw_;_THREAD-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerthrow_;_THREAD-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a58749fcc5ed3155706ada2e4f2bdd2330b7904bde2986cd7e12c54c1177a322), heat, label(THREAD-SYNTAX.throw_;_THREAD-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(66,19,66,65)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerthrow'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a58749fcc5ed3155706ada2e4f2bdd2330b7904bde2986cd7e12c54c1177a322"), label{}("THREAD-SYNTAX.throw_;_THREAD-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,19,66,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(E1,`_,__THREAD-SYNTAX_Exps_Exp_Exps`(E2,Es))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`___THREAD-SYNTAX_Stmt_Stmt_Stmt`(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(E1,`.List{"_,__THREAD-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList))),`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(E2,Es))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75b992b87be33b47142b97f0a6930215c48238a5003fe32a06fc04fecfb2d3ad), org.kframework.attributes.Location(Location(78,8,78,59)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE2:SortExp{},VarEs:SortExps{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())),Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE2:SortExp{},VarEs:SortExps{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("75b992b87be33b47142b97f0a6930215c48238a5003fe32a06fc04fecfb2d3ad"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,8,78,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(`_=__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X),E),`.List{"_,__THREAD-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`___THREAD-SYNTAX_Stmt_Stmt_Stmt`(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),`.List{"_,__THREAD-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList))),`_;_THREAD-SYNTAX_Stmt_Exp`(`_=__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X),E))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c0ebc8d4e2ceeb10dabc92f5ecbd44a1b1e7c6f3daacd703911e4ca04a0fd534), org.kframework.attributes.Location(Location(79,8,79,38)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),VarE:SortExp{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())),Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),VarE:SortExp{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c0ebc8d4e2ceeb10dabc92f5ecbd44a1b1e7c6f3daacd703911e4ca04a0fd534"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(79,8,79,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`_,__THREAD-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N),`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Vals,Exps}(`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar5),`<env>`(Env),_Gen0,_Gen1)),_DotVar3)),`<store>`(_DotVar2),_Gen2,_Gen3,`<nextLoc>`(L)),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),`<env>`(`Map:update`(Env,inj{Id,KItem}(X),inj{Int,KItem}(L))),_Gen0,_Gen1)),_DotVar3)),`<store>`(`_Map_`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(`array(_,_)_THREAD_Val_Int_Int`(`_+Int_`(L,#token("1","Int")),N))),`_..._|->__THREAD_Map_Int_Int_K`(`_+Int_`(L,#token("1","Int")),`_+Int_`(L,N),`undefined_THREAD_KItem`(.KList))),_DotVar2)),_Gen2,_Gen3,`<nextLoc>`(`_+Int_`(`_+Int_`(L,#token("1","Int")),N))),_DotVar0) requires `_>=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(3a11e6de5b41b14797e41521fbf27984b7d6664aa6078ae9f856f538b0cffabb), org.kframework.attributes.Location(Location(137,8,142,23)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar5:SortK{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Var'Unds'DotVar2:SortMap{}),Var'Unds'Gen2:SortBusyCell{},Var'Unds'Gen3:SortTerminatedCell{},Lbl'-LT-'nextLoc'-GT-'{}(VarL:SortInt{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Lbl'-LT-'env'-GT-'{}(LblMap'Coln'update{}(VarEnv:SortMap{},inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{}))),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(Lblarray'LParUndsCommUndsRParUnds'THREAD'Unds'Val'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")),VarN:SortInt{}))),Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'THREAD'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},VarN:SortInt{}),kseq{}(Lblundefined'Unds'THREAD'Unds'KItem{}(),dotk{}()))),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen2:SortBusyCell{},Var'Unds'Gen3:SortTerminatedCell{},Lbl'-LT-'nextLoc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")),VarN:SortInt{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3a11e6de5b41b14797e41521fbf27984b7d6664aa6078ae9f856f538b0cffabb"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,8,142,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`_,__THREAD-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1),`_,__THREAD-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs)))),inj{Vals,Exps}(`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`___THREAD-SYNTAX_Stmt_Stmt_Stmt`(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`_,__THREAD-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1),`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Vals,Exps}(`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Block,Stmt}(`{_}_THREAD-SYNTAX_Block_Stmt`(inj{Block,Stmt}(`{_}_THREAD-SYNTAX_Block_Stmt`(`___THREAD-SYNTAX_Stmt_Stmt_Stmt`(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(`_=__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(#token("$1","Id")),inj{Int,Exp}(#token("0","Int"))),inj{Vals,Exps}(`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),`while(_)__THREAD-SYNTAX_Stmt_Exp_Block`(`_<=__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(#token("$1","Id")),`_-__THREAD-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(N1),inj{Int,Exp}(#token("1","Int")))),`{_}_THREAD-SYNTAX_Block_Stmt`(`___THREAD-SYNTAX_Stmt_Stmt_Stmt`(`___THREAD-SYNTAX_Stmt_Stmt_Stmt`(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(#token("$2","Id")),inj{Vals,Exps}(`_,__THREAD-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs))),inj{Vals,Exps}(`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),`_;_THREAD-SYNTAX_Stmt_Exp`(`_=__THREAD-SYNTAX_Exp_Exp_Exp`(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),`_,__THREAD-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(#token("$1","Id")),inj{Vals,Exps}(`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Id,Exp}(#token("$2","Id"))))),`_;_THREAD-SYNTAX_Stmt_Exp`(`++__THREAD-SYNTAX_Exp_Exp`(inj{Id,Exp}(#token("$1","Id"))))))))))))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8787d6f6551ff17efd775a72a74f67b54ce56d7b270188946b746df8b9840e77), org.kframework.attributes.Location(Location(147,8,154,9)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{})))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortBlock{}, SortStmt{}}(Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(inj{SortBlock{}, SortStmt{}}(Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$1")),inj{SortInt{}, SortExp{}}(\dv{SortInt{}}("0"))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Lbl'Unds-LT-EqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$1")),Lbl'Unds'-'UndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarN1:SortInt{}),inj{SortInt{}, SortExp{}}(\dv{SortInt{}}("1")))),Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$2")),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{}))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'UndsEqlsUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$1")),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortId{}, SortExp{}}(\dv{SortId{}}("$2"))))),Lbl'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'PlusPlusUndsUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$1")))))))))))))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8787d6f6551ff17efd775a72a74f67b54ce56d7b270188946b746df8b9840e77"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(147,8,154,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(`_[_]_THREAD-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(_Gen0),HOLE),inj{Vals,Exps}(`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezervar_;_THREAD-SYNTAX_Stmt_Exps1_`(inj{Id,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c0aaedc21fda16b9d4b1256b8303ce0e30c528c2cda993a99a4ede0379bfb335), heat, org.kframework.attributes.Location(Location(132,11,132,26)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'THREAD-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(Var'Unds'Gen0:SortId{}),VarHOLE:SortExps{}),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezervar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortEnvCell{},Var'Unds'Gen2:SortHoldsCell{},Var'Unds'Gen3:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c0aaedc21fda16b9d4b1256b8303ce0e30c528c2cda993a99a4ede0379bfb335"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(132,11,132,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`var_;_THREAD-SYNTAX_Stmt_Exps`(`_,__THREAD-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`.List{"_,__THREAD-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar5),`<env>`(Env),_Gen0,_Gen1)),_DotVar3)),`<store>`(_DotVar2),_Gen2,_Gen3,`<nextLoc>`(L)),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar5),`<env>`(`Map:update`(Env,inj{Id,KItem}(X),inj{Int,KItem}(L))),_Gen0,_Gen1)),_DotVar3)),`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),`undefined_THREAD_KItem`(.KList)),_DotVar2)),_Gen2,_Gen3,`<nextLoc>`(`_+Int_`(L,#token("1","Int")))),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b3a4422648fabc2963f60d189cf10bf58a23e656548e24d2c841ae156d3a4e4), org.kframework.attributes.Location(Location(125,8,128,42)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblvar'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'THREAD-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'THREAD-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar5:SortK{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Var'Unds'DotVar2:SortMap{}),Var'Unds'Gen2:SortBusyCell{},Var'Unds'Gen3:SortTerminatedCell{},Lbl'-LT-'nextLoc'-GT-'{}(VarL:SortInt{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Lbl'-LT-'env'-GT-'{}(LblMap'Coln'update{}(VarEnv:SortMap{},inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{}))),Var'Unds'Gen0:SortHoldsCell{},Var'Unds'Gen1:SortIdCell{})),Var'Unds'DotVar3:SortThreadCellSet{})),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),Lblundefined'Unds'THREAD'Unds'KItem{}()),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen2:SortBusyCell{},Var'Unds'Gen3:SortTerminatedCell{},Lbl'-LT-'nextLoc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("2b3a4422648fabc2963f60d189cf10bf58a23e656548e24d2c841ae156d3a4e4"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,8,128,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`while(_)__THREAD-SYNTAX_Stmt_Exp_Block`(E,S))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__THREAD-SYNTAX_Stmt_Exp_Block_Block`(E,`{_}_THREAD-SYNTAX_Block_Stmt`(`___THREAD-SYNTAX_Stmt_Stmt_Stmt`(inj{Block,Stmt}(S),`while(_)__THREAD-SYNTAX_Stmt_Exp_Block`(E,S))),`{}_THREAD-SYNTAX_Block`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4e5973f3d94c4389b53a72b80d84c32d87d8da207f6305471eaac2881ac9a14b), org.kframework.attributes.Location(Location(282,8,282,43)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarE:SortExp{},VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarE:SortExp{},Lbl'LBraUndsRBraUnds'THREAD-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(inj{SortBlock{}, SortStmt{}}(VarS:SortBlock{}),Lblwhile'LParUndsRParUndsUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarE:SortExp{},VarS:SortBlock{}))),Lbl'LBraRBraUnds'THREAD-SYNTAX'Unds'Block{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4e5973f3d94c4389b53a72b80d84c32d87d8da207f6305471eaac2881ac9a14b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(282,8,282,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`setEnv(_)_THREAD_KItem_Map`(Env)~>_DotVar4),`<env>`(_Gen0),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),`<env>`(Env),_Gen1,_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e1b29cfcb0586fc6aee3818657d84a87c54c249e8a3987b5fe47a2dd78207c7e), org.kframework.attributes.Location(Location(285,8,286,29)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(VarEnv:SortMap{}),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'env'-GT-'{}(Var'Unds'Gen0:SortMap{}),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e1b29cfcb0586fc6aee3818657d84a87c54c249e8a3987b5fe47a2dd78207c7e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(285,8,286,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`setEnv(_)_THREAD_KItem_Map`(_Gen0)~>`setEnv(_)_THREAD_KItem_Map`(_Gen1)~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(`setEnv(_)_THREAD_KItem_Map`(_Gen1)~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(19438cbe92b29f8be21138f6253427776619ff863300705b879383e0085ae5f1), org.kframework.attributes.Location(Location(287,8,287,38)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Var'Unds'Gen0:SortMap{}),kseq{}(LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Var'Unds'Gen1:SortMap{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblsetEnv'LParUndsRParUnds'THREAD'Unds'KItem'Unds'Map{}(Var'Unds'Gen1:SortMap{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{},Var'Unds'Gen4:SortIdCell{})),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("19438cbe92b29f8be21138f6253427776619ff863300705b879383e0085ae5f1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(287,8,287,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_THREAD-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),`ThreadCellSetItem`(`<thread>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_THREAD-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar6),_Gen3,_Gen4,_Gen5))),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellSet_`(`_ThreadCellSet_`(`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2)),`ThreadCellSetItem`(`<thread>`(`<k>`(_DotVar6),_Gen3,_Gen4,_Gen5))),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2411008cc00734ce3f8a48cdb56665d2ca1e0061b6f2fb4f9b39f03983f3e3c5), org.kframework.attributes.Location(Location(245,8,246,39)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'THREAD-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar6:SortK{})),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{}))),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellSet'Unds'{}(Lbl'Unds'ThreadCellSet'Unds'{}(LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortEnvCell{},Var'Unds'Gen1:SortHoldsCell{},Var'Unds'Gen2:SortIdCell{})),LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar6:SortK{}),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{},Var'Unds'Gen5:SortIdCell{}))),Var'Unds'DotVar2:SortThreadCellSet{})),Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("2411008cc00734ce3f8a48cdb56665d2ca1e0061b6f2fb4f9b39f03983f3e3c5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(245,8,246,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("false","Bool"))=>#token("\"false\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f), org.kframework.attributes.Location(Location(1777,8,1777,37)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("false"),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1777,8,1777,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("true","Bool"))=>#token("\"true\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d), org.kframework.attributes.Location(Location(1776,8,1776,36)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("true"),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1776,8,1776,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"false\"","String"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835), org.kframework.attributes.Location(Location(1783,8,1783,37)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1783,8,1783,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"true\"","String"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8), org.kframework.attributes.Location(Location(1782,8,1782,36)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1782,8,1782,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_..._|->__THREAD_Map_Int_Int_K`(N,M,K #as _Gen0)=>`_Map_`(`_|->_`(inj{Int,KItem}(N),K),`_..._|->__THREAD_Map_Int_Int_K`(`_+Int_`(N,#token("1","Int")),M,_Gen0)) requires `_<=Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(cdc8fed0a8308d281bf314a7309b7544e889bc1d4c5aae94a3ded1361d81fe00), org.kframework.attributes.Location(Location(291,8,291,71)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarM:SortInt{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            \and{SortK{}}(kseq{}(VarK:SortKItem{},dotk{}()),Var'Unds'Gen0:SortK{})
          ),
          \top{R} ()
        )))),
    \equals{SortMap{},R} (
      Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'THREAD'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(X0:SortInt{},X1:SortInt{},X2:SortK{}),
     \and{SortMap{}} (
       Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarN:SortInt{}),VarK:SortKItem{}),Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'THREAD'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),VarM:SortInt{},Var'Unds'Gen0:SortK{})),
        \top{SortMap{}}())))
  [UNIQUE'Unds'ID{}("cdc8fed0a8308d281bf314a7309b7544e889bc1d4c5aae94a3ded1361d81fe00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,8,291,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `_..._|->__THREAD_Map_Int_Int_K`(N,M,_Gen0)=>`.Map`(.KList) requires `_>Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(5f36f8e79bf7ffb5c5da540d893baf8e1171bf07432a835ef2668ce2f0be3b05), org.kframework.attributes.Location(Location(290,8,290,46)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarM:SortInt{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortMap{},R} (
      Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'THREAD'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(X0:SortInt{},X1:SortInt{},X2:SortK{}),
     \and{SortMap{}} (
       Lbl'Stop'Map{}(),
        \top{SortMap{}}())))
  [UNIQUE'Unds'ID{}("5f36f8e79bf7ffb5c5da540d893baf8e1171bf07432a835ef2668ce2f0be3b05"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,8,290,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule `_<=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80), org.kframework.attributes.Location(Location(1876,8,1876,63)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1876,8,1876,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(1159,8,1159,57)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB2:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1159,8,1159,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1442,8,1442,53)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1442,8,1442,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2322,8,2322,45)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarK2:SortK{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2322,8,2322,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_=/=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7), org.kframework.attributes.Location(Location(1856,8,1856,65)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1856,8,1856,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_>=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17), org.kframework.attributes.Location(Location(1878,8,1878,63)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1878,8,1878,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_>String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_<String__STRING-COMMON_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0), org.kframework.attributes.Location(Location(1877,8,1877,52)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1877,8,1877,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_andBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(1132,8,1132,37)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1132,8,1132,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(72139ee1f2b9362a47514de6503329ccf3c27e74e3ebfa0c0fe26321ec13f281), org.kframework.attributes.Location(Location(1131,8,1131,37)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("true")),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("72139ee1f2b9362a47514de6503329ccf3c27e74e3ebfa0c0fe26321ec13f281"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1131,8,1131,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_andBool_`(_Gen0,#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd61c826168aab115cd7f528702e8187ca16195bdcf29f42f33a32c83afebb12), org.kframework.attributes.Location(Location(1133,8,1133,37)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(Var'Unds'Gen0:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fd61c826168aab115cd7f528702e8187ca16195bdcf29f42f33a32c83afebb12"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1133,8,1133,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(1130,8,1130,37)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1130,8,1130,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_andThenBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(1137,8,1137,36)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1137,8,1137,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2cfb33affb9c668d39a4a7267156085e1dbd3584fc7925b1aa9a1672bb9eab9f), org.kframework.attributes.Location(Location(1136,8,1136,37)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(VarK:SortBool{},\dv{SortBool{}}("true")),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2cfb33affb9c668d39a4a7267156085e1dbd3584fc7925b1aa9a1672bb9eab9f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1136,8,1136,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_andThenBool_`(_Gen0,#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(198861009d03d8f5220000f16342962720be289ca0d49b12953fb2693e2fea01), org.kframework.attributes.Location(Location(1138,8,1138,36)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(Var'Unds'Gen0:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("198861009d03d8f5220000f16342962720be289ca0d49b12953fb2693e2fea01"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1138,8,1138,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(1135,8,1135,37)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1135,8,1135,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1431,8,1432,23)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      Lbl'Unds'divInt'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{}),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1431,8,1432,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1443,8,1443,58)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0")),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1443,8,1443,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(93b8d798abd6d9999e0e733384ad161e9a0bd2f074623a742afdc63964380aba), org.kframework.attributes.Location(Location(1157,8,1157,45)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(VarB:SortBool{}),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("93b8d798abd6d9999e0e733384ad161e9a0bd2f074623a742afdc63964380aba"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1157,8,1157,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_impliesBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b4994db7b40b72dc09ac8d5d036263b215c37d45f45d764251d8b607a7592ba), org.kframework.attributes.Location(Location(1156,8,1156,39)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(Var'Unds'Gen0:SortBool{},\dv{SortBool{}}("true")),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2b4994db7b40b72dc09ac8d5d036263b215c37d45f45d764251d8b607a7592ba"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1156,8,1156,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_impliesBool_`(#token("false","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(1155,8,1155,40)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1155,8,1155,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(1154,8,1154,36)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1154,8,1154,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(44257f63a99a0583c2d10058edbff90118966e30914b3a637b8315212c681bc4), concrete, org.kframework.attributes.Location(Location(1434,5,1437,23)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("44257f63a99a0583c2d10058edbff90118966e30914b3a637b8315212c681bc4"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1434,5,1437,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a5bb27ab54700cb845d17b12e0b0a4cbd5c8944272bcbe0d15ccc0b44d0049ff), org.kframework.attributes.Location(Location(1147,8,1147,32)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a5bb27ab54700cb845d17b12e0b0a4cbd5c8944272bcbe0d15ccc0b44d0049ff"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1147,8,1147,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_orBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(942af273100b5a3c1fb3d0c8cc92b0bf845a7b34444c5a6c35b7d3fe72bef48e), org.kframework.attributes.Location(Location(1145,8,1145,34)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(Var'Unds'Gen0:SortBool{},\dv{SortBool{}}("true")),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("942af273100b5a3c1fb3d0c8cc92b0bf845a7b34444c5a6c35b7d3fe72bef48e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1145,8,1145,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(1146,8,1146,32)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1146,8,1146,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_orBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(1144,8,1144,34)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1144,8,1144,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(13cf42d440f9a7a360a8136ee4b35ae7b99501f515322d214c3b866691f4713b), org.kframework.attributes.Location(Location(1152,8,1152,37)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(VarK:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("13cf42d440f9a7a360a8136ee4b35ae7b99501f515322d214c3b866691f4713b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1152,8,1152,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_orElseBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2459cad4fbb946a5c7f71565601afeeec79f05f41497b1f7ef547578c88f3158), org.kframework.attributes.Location(Location(1150,8,1150,33)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(Var'Unds'Gen0:SortBool{},\dv{SortBool{}}("true")),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2459cad4fbb946a5c7f71565601afeeec79f05f41497b1f7ef547578c88f3158"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1150,8,1150,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(1151,8,1151,37)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1151,8,1151,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_orElseBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(1149,8,1149,33)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1149,8,1149,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(1142,8,1142,38)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1142,8,1142,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(69f518203376930fb76ce51df5dd0c6c81d19f71eba3a1852afa5301d02eb4fa), org.kframework.attributes.Location(Location(1141,8,1141,38)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("69f518203376930fb76ce51df5dd0c6c81d19f71eba3a1852afa5301d02eb4fa"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1141,8,1141,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(1140,8,1140,38)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1140,8,1140,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c384edb8f3875244a593dda6163c3dee1bce5485e4e1848892aebc2bab67d2e9), concrete, org.kframework.attributes.Location(Location(749,8,749,45)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortSet{}, R} (
            X0:SortSet{},
            VarS1:SortSet{}
          ),\and{R} (
          \in{SortSet{}, R} (
            X1:SortSet{},
            VarS2:SortSet{}
          ),
          \top{R} ()
        ))),
    \equals{SortSet{},R} (
      Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(X0:SortSet{},X1:SortSet{}),
     \and{SortSet{}} (
       Lbl'Unds'Set'Unds'{}(VarS1:SortSet{},LblSet'Coln'difference{}(VarS2:SortSet{},VarS1:SortSet{})),
        \top{SortSet{}}())))
  [UNIQUE'Unds'ID{}("c384edb8f3875244a593dda6163c3dee1bce5485e4e1848892aebc2bab67d2e9"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(749,8,749,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1427,8,1427,85)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1427,8,1427,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToCount)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e), org.kframework.attributes.Location(Location(1887,8,1888,60)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1887,8,1888,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84), org.kframework.attributes.Location(Location(1885,8,1886,59)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1885,8,1886,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>ite{Int}(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),ite{Int}(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(5b5d41706ad496a8165f1ea9c2109ce502796cbe90047732b173b3ad015058e3), org.kframework.attributes.Location(Location(1880,8,1880,431)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       Lblite{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lblite{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})))),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("5b5d41706ad496a8165f1ea9c2109ce502796cbe90047732b173b3ad015058e3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1880,8,1880,431)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117), org.kframework.attributes.Location(Location(1881,8,1881,32)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1881,8,1881,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `freshId(_)_ID-COMMON_Id_Int`(I)=>`String2Id(_)_ID-COMMON_Id_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"_\"","String"),`Int2String(_)_STRING-COMMON_String_Int`(I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de), org.kframework.attributes.Location(Location(2266,8,2266,62)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(X0:SortInt{}),
     \and{SortId{}} (
       LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("_"),LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(VarI:SortInt{}))),
        \top{SortId{}}())))
  [UNIQUE'Unds'ID{}("3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2266,8,2266,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1446,8,1446,28)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1446,8,1446,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule getGeneratedCounterCell(`<generatedTop>`(_DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ef5eb9b9e6bbd7436911fad20615821f61e06e742dd27773001ab0664bd1de3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGeneratedTopCell{}, R} (
            X0:SortGeneratedTopCell{},
            Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'DotVar0:SortTCell{},VarCell:SortGeneratedCounterCell{})
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      LblgetGeneratedCounterCell{}(X0:SortGeneratedTopCell{}),
     \and{SortGeneratedCounterCell{}} (
       VarCell:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("9ef5eb9b9e6bbd7436911fad20615821f61e06e742dd27773001ab0664bd1de3")]

// rule initBusyCell(.KList)=>`<busy>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0684bf26697219a45407cda377fd8a6f26c911dc548ad148dd42132f5f242ada), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortBusyCell{},R} (
      LblinitBusyCell{}(),
     \and{SortBusyCell{}} (
       Lbl'-LT-'busy'-GT-'{}(Lbl'Stop'Set{}()),
        \top{SortBusyCell{}}())))
  [UNIQUE'Unds'ID{}("0684bf26697219a45407cda377fd8a6f26c911dc548ad148dd42132f5f242ada")]

// rule initEnvCell(.KList)=>`<env>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(00d428bbba5e1be4a85aba1c6d8e92413cb67f2b9e9b8fc00940b647db49b07a), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortEnvCell{},R} (
      LblinitEnvCell{}(),
     \and{SortEnvCell{}} (
       Lbl'-LT-'env'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortEnvCell{}}())))
  [UNIQUE'Unds'ID{}("00d428bbba5e1be4a85aba1c6d8e92413cb67f2b9e9b8fc00940b647db49b07a")]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5de11f6b50c4684c0e05b773f809d756f4ce9c03a4f24e23a9cddaf3fa31f553), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGeneratedCounterCell{},R} (
      LblinitGeneratedCounterCell{}(),
     \and{SortGeneratedCounterCell{}} (
       Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("5de11f6b50c4684c0e05b773f809d756f4ce9c03a4f24e23a9cddaf3fa31f553")]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initTCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6bc7582a7d8c6574a248b085ad3bdecafbf86539963d4e752be82fb1c857fb28), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      LblinitGeneratedTopCell{}(X0:SortMap{}),
     \and{SortGeneratedTopCell{}} (
       Lbl'-LT-'generatedTop'-GT-'{}(LblinitTCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}()),
        \top{SortGeneratedTopCell{}}())))
  [UNIQUE'Unds'ID{}("6bc7582a7d8c6574a248b085ad3bdecafbf86539963d4e752be82fb1c857fb28")]

// rule initHoldsCell(.KList)=>`<holds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9be8c90b7f6b23856b1ed3707ade1cf2a855a2cf6e34743812741545dc4b1b5b), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortHoldsCell{},R} (
      LblinitHoldsCell{}(),
     \and{SortHoldsCell{}} (
       Lbl'-LT-'holds'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortHoldsCell{}}())))
  [UNIQUE'Unds'ID{}("9be8c90b7f6b23856b1ed3707ade1cf2a855a2cf6e34743812741545dc4b1b5b")]

// rule initIdCell(.KList)=>`<id>`(#token("-1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(36d83d14b2cc0597941cc4474812ab55195192363a89b2486f11beb7f10902ec), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortIdCell{},R} (
      LblinitIdCell{}(),
     \and{SortIdCell{}} (
       Lbl'-LT-'id'-GT-'{}(\dv{SortInt{}}("-1")),
        \top{SortIdCell{}}())))
  [UNIQUE'Unds'ID{}("36d83d14b2cc0597941cc4474812ab55195192363a89b2486f11beb7f10902ec")]

// rule initKCell(Init)=>`<k>`(inj{Stmt,KItem}(`project:Stmt`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22d54eca8d9ac85f814b9c78605ed3331a8a4d463df4bf0fa35d2c76bafb8855), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      LblinitKCell{}(X0:SortMap{}),
     \and{SortKCell{}} (
       Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblproject'Coln'Stmt{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),dotk{}())),
        \top{SortKCell{}}())))
  [UNIQUE'Unds'ID{}("22d54eca8d9ac85f814b9c78605ed3331a8a4d463df4bf0fa35d2c76bafb8855")]

// rule initNextLocCell(.KList)=>`<nextLoc>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4fce38c9043a703557a44ac26d031234b8e1aef6e96c923d401287f09f8295f2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortNextLocCell{},R} (
      LblinitNextLocCell{}(),
     \and{SortNextLocCell{}} (
       Lbl'-LT-'nextLoc'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortNextLocCell{}}())))
  [UNIQUE'Unds'ID{}("4fce38c9043a703557a44ac26d031234b8e1aef6e96c923d401287f09f8295f2")]

// rule initStoreCell(.KList)=>`<store>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25c9fd48ffb4ae6d3301adb7ee16d732c9e7eff638e62fef57a687c62281f5ee), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortStoreCell{},R} (
      LblinitStoreCell{}(),
     \and{SortStoreCell{}} (
       Lbl'-LT-'store'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortStoreCell{}}())))
  [UNIQUE'Unds'ID{}("25c9fd48ffb4ae6d3301adb7ee16d732c9e7eff638e62fef57a687c62281f5ee")]

// rule initTCell(Init)=>`<T>`(initThreadsCell(Init),initStoreCell(.KList),initBusyCell(.KList),initTerminatedCell(.KList),initNextLocCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d52e3429835257e16684ef40bac9eabf1edeb5b502ed114ebe4ca755f422b36a), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      LblinitTCell{}(X0:SortMap{}),
     \and{SortTCell{}} (
       Lbl'-LT-'T'-GT-'{}(LblinitThreadsCell{}(VarInit:SortMap{}),LblinitStoreCell{}(),LblinitBusyCell{}(),LblinitTerminatedCell{}(),LblinitNextLocCell{}()),
        \top{SortTCell{}}())))
  [UNIQUE'Unds'ID{}("d52e3429835257e16684ef40bac9eabf1edeb5b502ed114ebe4ca755f422b36a")]

// rule initTerminatedCell(.KList)=>`<terminated>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(41229aeff886e23baf75c294f7c63ef7311feea4a480497b71875dc0c1d0870e), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortTerminatedCell{},R} (
      LblinitTerminatedCell{}(),
     \and{SortTerminatedCell{}} (
       Lbl'-LT-'terminated'-GT-'{}(Lbl'Stop'Set{}()),
        \top{SortTerminatedCell{}}())))
  [UNIQUE'Unds'ID{}("41229aeff886e23baf75c294f7c63ef7311feea4a480497b71875dc0c1d0870e")]

// rule initThreadCell(Init)=>`ThreadCellSetItem`(`<thread>`(initKCell(Init),initEnvCell(.KList),initHoldsCell(.KList),initIdCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0be12779678bef5cb5c4634fda8bc458bd726d318e874a5391d75eef38d15b99), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortThreadCellSet{},R} (
      LblinitThreadCell{}(X0:SortMap{}),
     \and{SortThreadCellSet{}} (
       LblThreadCellSetItem{}(Lbl'-LT-'thread'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitEnvCell{}(),LblinitHoldsCell{}(),LblinitIdCell{}())),
        \top{SortThreadCellSet{}}())))
  [UNIQUE'Unds'ID{}("0be12779678bef5cb5c4634fda8bc458bd726d318e874a5391d75eef38d15b99")]

// rule initThreadsCell(Init)=>`<threads>`(initThreadCell(Init)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e08d3c475b64c7e4b7a4038d9a7c5dd428a06793741278eb7bb82d182f92b0c), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCell{},R} (
      LblinitThreadsCell{}(X0:SortMap{}),
     \and{SortThreadsCell{}} (
       Lbl'-LT-'threads'-GT-'{}(LblinitThreadCell{}(VarInit:SortMap{})),
        \top{SortThreadsCell{}}())))
  [UNIQUE'Unds'ID{}("3e08d3c475b64c7e4b7a4038d9a7c5dd428a06793741278eb7bb82d182f92b0c")]

// rule isBlock(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f5ae65358f70fc346d115c9bbcc527e313ff1b14e7c84213db0b6d782888dded), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBlock{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBlock{}, SortKItem{}}(Var'Unds'Gen0:SortBlock{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f5ae65358f70fc346d115c9bbcc527e313ff1b14e7c84213db0b6d782888dded"), owise{}()]

// rule isBlock(inj{Block,KItem}(Block))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(90826e214774c10052882db34f0b29a8ab1ba03e3a5538878677c25ef57d97d0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlock{}, SortKItem{}}(VarBlock:SortBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("90826e214774c10052882db34f0b29a8ab1ba03e3a5538878677c25ef57d97d0")]

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(495da551d13b205c8648618471ccfca028707f98eff21e6b11d591515ed6f29a), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen0:SortBool{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("495da551d13b205c8648618471ccfca028707f98eff21e6b11d591515ed6f29a"), owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dadad716b2f6a82fa4b2cc8f903a1b8f1f6e8cfa63f18b72a7cb35110bdcff77)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("dadad716b2f6a82fa4b2cc8f903a1b8f1f6e8cfa63f18b72a7cb35110bdcff77")]

// rule isBusyCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7cf202293ebbe1751e8a328b0fdda75c47f613323fe5b2498de6da84286eb868), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBusyCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBusyCell{}, SortKItem{}}(Var'Unds'Gen0:SortBusyCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBusyCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7cf202293ebbe1751e8a328b0fdda75c47f613323fe5b2498de6da84286eb868"), owise{}()]

// rule isBusyCell(inj{BusyCell,KItem}(BusyCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(35f287667971515d860f5f2310fb6271679209a5680067f0d50679ff171ff7d0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCell{}, SortKItem{}}(VarBusyCell:SortBusyCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBusyCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("35f287667971515d860f5f2310fb6271679209a5680067f0d50679ff171ff7d0")]

// rule isBusyCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c814c9a8dec217f17a21ed885d6d7bfba6596eae432423042fc0dd9bc6204c6), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBusyCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBusyCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortBusyCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBusyCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9c814c9a8dec217f17a21ed885d6d7bfba6596eae432423042fc0dd9bc6204c6"), owise{}()]

// rule isBusyCellOpt(inj{BusyCellOpt,KItem}(BusyCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(956fb6f344cb55dabc3fa4c67486a97162c96bef153c2ee19ade668bca91efd5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCellOpt{}, SortKItem{}}(VarBusyCellOpt:SortBusyCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBusyCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("956fb6f344cb55dabc3fa4c67486a97162c96bef153c2ee19ade668bca91efd5")]

// rule isControlCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c7b136161be694fe55f1213d0635e3c1a946ec414b95c0b88f597af46b580ad), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortControlCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortControlCell{}, SortKItem{}}(Var'Unds'Gen1:SortControlCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisControlCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9c7b136161be694fe55f1213d0635e3c1a946ec414b95c0b88f597af46b580ad"), owise{}()]

// rule isControlCell(inj{ControlCell,KItem}(ControlCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(abdd2ffc330687110949d68ad33860ad6080aa2fd5f36488ba2edc9491c5a813)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCell{}, SortKItem{}}(VarControlCell:SortControlCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisControlCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("abdd2ffc330687110949d68ad33860ad6080aa2fd5f36488ba2edc9491c5a813")]

// rule isCrntObjCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(419a3033241ae78631fb506c323d9212178554f5a91020e7347157ff34c28e73), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCrntObjCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCrntObjCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortCrntObjCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCrntObjCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("419a3033241ae78631fb506c323d9212178554f5a91020e7347157ff34c28e73"), owise{}()]

// rule isCrntObjCellFragment(inj{CrntObjCellFragment,KItem}(CrntObjCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(271817f6160cbcc75b352f6a860ccbb0a867b8d1b26f841a172c2ecc4f0e3bfb)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntObjCellFragment{}, SortKItem{}}(VarCrntObjCellFragment:SortCrntObjCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCrntObjCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("271817f6160cbcc75b352f6a860ccbb0a867b8d1b26f841a172c2ecc4f0e3bfb")]

// rule isEnvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ea3a5b7b3f4dc34d9889f17680151db49c6d6fc19a17b1348b455ddb604f032), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortEnvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvCell{}, SortKItem{}}(Var'Unds'Gen0:SortEnvCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0ea3a5b7b3f4dc34d9889f17680151db49c6d6fc19a17b1348b455ddb604f032"), owise{}()]

// rule isEnvCell(inj{EnvCell,KItem}(EnvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b5df359932869a7148a60c91069b0bd8bd4c747deff9948cc9b5abe368811236)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCell{}, SortKItem{}}(VarEnvCell:SortEnvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b5df359932869a7148a60c91069b0bd8bd4c747deff9948cc9b5abe368811236")]

// rule isEnvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1ba556a2b4b2fbf1f2cf6e1cee435b70544fd47a8753b3a1abbfafc6f7132dc4), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortEnvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortEnvCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1ba556a2b4b2fbf1f2cf6e1cee435b70544fd47a8753b3a1abbfafc6f7132dc4"), owise{}()]

// rule isEnvCellOpt(inj{EnvCellOpt,KItem}(EnvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d5b22845313dff6f784ac0e578d3b7433b454aa2be3a9a6d389705cbbd1c0dc)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(VarEnvCellOpt:SortEnvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d5b22845313dff6f784ac0e578d3b7433b454aa2be3a9a6d389705cbbd1c0dc")]

// rule isEnvStackCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6c3dfea2533a27ecb0fcdd0b9b6ae9c4591f70b0e8d73fb042dc4337964fc683), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortEnvStackCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvStackCell{}, SortKItem{}}(Var'Unds'Gen1:SortEnvStackCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvStackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("6c3dfea2533a27ecb0fcdd0b9b6ae9c4591f70b0e8d73fb042dc4337964fc683"), owise{}()]

// rule isEnvStackCell(inj{EnvStackCell,KItem}(EnvStackCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(942a52980fdcfd55711e41c08c069252b02c20fc6b1084301aa0f5b4843442e4)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvStackCell{}, SortKItem{}}(VarEnvStackCell:SortEnvStackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvStackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("942a52980fdcfd55711e41c08c069252b02c20fc6b1084301aa0f5b4843442e4")]

// rule isExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e2a259ff2d6434bfe264d9e99ba0f82d9109ec7c26ae247655c5599fc9ef8b1), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen1:SortExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9e2a259ff2d6434bfe264d9e99ba0f82d9109ec7c26ae247655c5599fc9ef8b1"), owise{}()]

// rule isExp(inj{Exp,KItem}(Exp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5113a02f7660a72f8eec77fb75db8556ae809f64d13e8478319e14b277319d5c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarExp:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5113a02f7660a72f8eec77fb75db8556ae809f64d13e8478319e14b277319d5c")]

// rule isExps(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c4ba2bfcc0787e5e962ff6c0f8be9f39fdb6c52825d38b43c0ca6a0afa991c90), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortExps{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen1:SortExps{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c4ba2bfcc0787e5e962ff6c0f8be9f39fdb6c52825d38b43c0ca6a0afa991c90"), owise{}()]

// rule isExps(inj{Exps,KItem}(Exps))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5e8cbdfdf9c482f9ff6f11c69b77e56f646c4d81c94b35164a4228a6e5c51104)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarExps:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5e8cbdfdf9c482f9ff6f11c69b77e56f646c4d81c94b35164a4228a6e5c51104")]

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(613283edb3d0af0dfe3d5c3626073b1904f0e254fc0797cd7a4f620cfeb7de62), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'Gen1:SortFloat{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("613283edb3d0af0dfe3d5c3626073b1904f0e254fc0797cd7a4f620cfeb7de62"), owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d74a36c34f45e0bf74d89fdd362f124478ab18934b5786ff4aabfe527643c5f0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d74a36c34f45e0bf74d89fdd362f124478ab18934b5786ff4aabfe527643c5f0")]

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0c8eb86594a387398bf96f2dbf773cff29d14b8a45c5f6701f205bf3d2f33ba), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedCounterCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b0c8eb86594a387398bf96f2dbf773cff29d14b8a45c5f6701f205bf3d2f33ba"), owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f7b6a3dbee5a80d5eeba727f40009876995660d4052a45fc50c55f88c5fc1a7c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f7b6a3dbee5a80d5eeba727f40009876995660d4052a45fc50c55f88c5fc1a7c")]

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(84cfc8e964ec28b1912ffec4e6f5fccfcbad2256a1cba113622d99b11c13afd6), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedCounterCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("84cfc8e964ec28b1912ffec4e6f5fccfcbad2256a1cba113622d99b11c13afd6"), owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4ff3e170677e099d4b28085658942cb10fcf871aa99abcdf73927596c180f12)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a4ff3e170677e099d4b28085658942cb10fcf871aa99abcdf73927596c180f12")]

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ccb9226d9e6c0e476485f098ef162c6c2206ed3af1d8336ea3ae859b86bc4a8b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ccb9226d9e6c0e476485f098ef162c6c2206ed3af1d8336ea3ae859b86bc4a8b"), owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3bcf423225700e329d0533cfd806eb9bab91f9d8de0979c8d8e381fe5d076bb2)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3bcf423225700e329d0533cfd806eb9bab91f9d8de0979c8d8e381fe5d076bb2")]

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(98049f5819962c7ee2b01436957b6cf8460b106979fa2c24f4c606bbf6cb1592), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("98049f5819962c7ee2b01436957b6cf8460b106979fa2c24f4c606bbf6cb1592"), owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(559f2cdc0ab425bb065cc3174f4a1af4d9ca834f762a814cf3dfbf9a9d7f8271)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("559f2cdc0ab425bb065cc3174f4a1af4d9ca834f762a814cf3dfbf9a9d7f8271")]

// rule isHoldsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5f52d396f62add95df595b09823d1623e15b289019d5ae30816d6e1ac5178bad), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortHoldsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortHoldsCell{}, SortKItem{}}(Var'Unds'Gen1:SortHoldsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisHoldsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5f52d396f62add95df595b09823d1623e15b289019d5ae30816d6e1ac5178bad"), owise{}()]

// rule isHoldsCell(inj{HoldsCell,KItem}(HoldsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dab60eefe39a7bb1d358c481f6446213c02fa91513431b42273a386e81a9030b)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCell{}, SortKItem{}}(VarHoldsCell:SortHoldsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisHoldsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("dab60eefe39a7bb1d358c481f6446213c02fa91513431b42273a386e81a9030b")]

// rule isHoldsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5127cf40e3f00a38653ddb3e40df25ba794a21454e52e53c701447166a0f8054), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortHoldsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortHoldsCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortHoldsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisHoldsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5127cf40e3f00a38653ddb3e40df25ba794a21454e52e53c701447166a0f8054"), owise{}()]

// rule isHoldsCellOpt(inj{HoldsCellOpt,KItem}(HoldsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(810e4b40f46cbdeafca610b639bde5ad7344b01c6cf7a1ae73fefaa45f29a6c9)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCellOpt{}, SortKItem{}}(VarHoldsCellOpt:SortHoldsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisHoldsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("810e4b40f46cbdeafca610b639bde5ad7344b01c6cf7a1ae73fefaa45f29a6c9")]

// rule isIOError(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c96fa3a271ec5957293f6ff8436703651f7e219c4364d65286dc134a6a6e7dda), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOError{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOError{}, SortKItem{}}(Var'Unds'Gen1:SortIOError{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c96fa3a271ec5957293f6ff8436703651f7e219c4364d65286dc134a6a6e7dda"), owise{}()]

// rule isIOError(inj{IOError,KItem}(IOError))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(af1461e241b050082a392e02da8a0d27eb78de77d591d7b2a949770399eea7d0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarIOError:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("af1461e241b050082a392e02da8a0d27eb78de77d591d7b2a949770399eea7d0")]

// rule isIOFile(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb21a59193df5500799f91683023dc97bc08ffce188c0fae38f4920cab8a0f5e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOFile{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOFile{}, SortKItem{}}(Var'Unds'Gen0:SortIOFile{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bb21a59193df5500799f91683023dc97bc08ffce188c0fae38f4920cab8a0f5e"), owise{}()]

// rule isIOFile(inj{IOFile,KItem}(IOFile))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e265f4f40b46b033479ce783a161791d2f3390b848921b8d137e83f3f513fc0a)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarIOFile:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e265f4f40b46b033479ce783a161791d2f3390b848921b8d137e83f3f513fc0a")]

// rule isIOInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c0297d42abd0eb84ecc87316430c6a6e2961b3bc806b64f68256522680f8b19c), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOInt{}, SortKItem{}}(Var'Unds'Gen1:SortIOInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c0297d42abd0eb84ecc87316430c6a6e2961b3bc806b64f68256522680f8b19c"), owise{}()]

// rule isIOInt(inj{IOInt,KItem}(IOInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e744736c885f38e99587884080e17e1ddd231da39bcbdcb445d10f52b6675232)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarIOInt:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e744736c885f38e99587884080e17e1ddd231da39bcbdcb445d10f52b6675232")]

// rule isIOString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f878d7ff3c358cb31e185d67585786837797c18b9599b202e2f399e4dc91f178), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOString{}, SortKItem{}}(Var'Unds'Gen0:SortIOString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f878d7ff3c358cb31e185d67585786837797c18b9599b202e2f399e4dc91f178"), owise{}()]

// rule isIOString(inj{IOString,KItem}(IOString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(febfbad427936ffed4a4f974d1061ec9b65a4d6751c5a4e0e31661905c3f9e1e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarIOString:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("febfbad427936ffed4a4f974d1061ec9b65a4d6751c5a4e0e31661905c3f9e1e")]

// rule isId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f37abe49c9a4ee52b56a492679d7aab25802b3c05860fee32a4a09d72b2a322f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen1:SortId{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f37abe49c9a4ee52b56a492679d7aab25802b3c05860fee32a4a09d72b2a322f"), owise{}()]

// rule isId(inj{Id,KItem}(Id))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f024b5fa3f428dab8c832862d8a13219a64369be25641326400611b32ae8843d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarId:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f024b5fa3f428dab8c832862d8a13219a64369be25641326400611b32ae8843d")]

// rule isIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55570a5dd6c8347da6876db9087330db94d4ea6328e1363d79c9896c35bfb14e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIdCell{}, SortKItem{}}(Var'Unds'Gen1:SortIdCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("55570a5dd6c8347da6876db9087330db94d4ea6328e1363d79c9896c35bfb14e"), owise{}()]

// rule isIdCell(inj{IdCell,KItem}(IdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73020a53592acbac1d04790c4774758426d83d6fe2e29744e101c40df700c7d6)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCell{}, SortKItem{}}(VarIdCell:SortIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73020a53592acbac1d04790c4774758426d83d6fe2e29744e101c40df700c7d6")]

// rule isIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(97b460458510ac90d567ead6ecab7304b27095a3f1375f34a8dbf3bca5b34861), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortIdCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("97b460458510ac90d567ead6ecab7304b27095a3f1375f34a8dbf3bca5b34861"), owise{}()]

// rule isIdCellOpt(inj{IdCellOpt,KItem}(IdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3363447a9686305d5f5c655945cc9274e56380a3bc43a5a3e605ebd4160fddf9)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(VarIdCellOpt:SortIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3363447a9686305d5f5c655945cc9274e56380a3bc43a5a3e605ebd4160fddf9")]

// rule isIds(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(65aedfea11aff4f39c34dd525d09fc6d59148ee6676f396b2f545e9536180009), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIds{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIds{}, SortKItem{}}(Var'Unds'Gen1:SortIds{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIds{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("65aedfea11aff4f39c34dd525d09fc6d59148ee6676f396b2f545e9536180009"), owise{}()]

// rule isIds(inj{Ids,KItem}(Ids))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(beb91d39851ff93a47efc4b7f23e39352a35ce69aa318452751201526391901b)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIds{}, SortKItem{}}(VarIds:SortIds{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIds{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("beb91d39851ff93a47efc4b7f23e39352a35ce69aa318452751201526391901b")]

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(105572a4ac107eeb518b37c4d6ed3e28732b83afb0ba085d02d339c4fc2140a0), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen1:SortInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("105572a4ac107eeb518b37c4d6ed3e28732b83afb0ba085d02d339c4fc2140a0"), owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(92664aa821c8898ff16b4e72ad0bdf363f755c7660d28dcb69c129a2c94bc6b5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("92664aa821c8898ff16b4e72ad0bdf363f755c7660d28dcb69c129a2c94bc6b5")]

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16ff77cff0ef50026a8b3f4614b87bda465701918596b7ad2280baffff56f847)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisK{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("16ff77cff0ef50026a8b3f4614b87bda465701918596b7ad2280baffff56f847")]

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d30be57718b4b3745eaf2e99f875cfec7d5be2ff76bacde8a89bd4ab659d857f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'Gen1:SortKCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d30be57718b4b3745eaf2e99f875cfec7d5be2ff76bacde8a89bd4ab659d857f"), owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2695222b1238f711f8a356c0a1bc0ac418d7bd78fd3282e7c60882e2631a46df)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2695222b1238f711f8a356c0a1bc0ac418d7bd78fd3282e7c60882e2631a46df")]

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a3f84195242c98b432c7c63a4189f4276cc3189445c5cf37ce08d9a6547b1f7), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortKCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a3f84195242c98b432c7c63a4189f4276cc3189445c5cf37ce08d9a6547b1f7"), owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1516473b1e153a368c273997543a4378ad451e5e828db8e289f4447f7e5228a5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1516473b1e153a368c273997543a4378ad451e5e828db8e289f4447f7e5228a5")]

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f68a616e301c35586f68e97b729ae274278c3ef8fe6634711cfd3e1746bc0bc2), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'Gen0:SortKConfigVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f68a616e301c35586f68e97b729ae274278c3ef8fe6634711cfd3e1746bc0bc2"), owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ef0a00bb321f2c2a62a3239327de70ecb8e907a950cd20034c46b84e040ebcd)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0ef0a00bb321f2c2a62a3239327de70ecb8e907a950cd20034c46b84e040ebcd")]

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(83812b6b9e31a764d66d89fd1c7e65b9b162d52c5aebfe99b1536e200a9590c2), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(Var'Unds'Gen0:SortKItem{},dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("83812b6b9e31a764d66d89fd1c7e65b9b162d52c5aebfe99b1536e200a9590c2"), owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed3c25a7dab5e5fbc101589e2fa74ac91aa107f051d22a01378222d08643373c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarKItem:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ed3c25a7dab5e5fbc101589e2fa74ac91aa107f051d22a01378222d08643373c")]

// rule isKResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afefecb36598372bc1ba6e5d0b24a00b91796244dc3bd7435e40ca6e9ab33d4b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKResult{}, SortKItem{}}(Var'Unds'Gen0:SortKResult{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \or{R} (
          \exists{R} (Var'Unds'Gen2:SortVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVal{}, SortKItem{}}(Var'Unds'Gen2:SortVal{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \or{R} (
          \exists{R} (Var'Unds'Gen3:SortVals{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVals{}, SortKItem{}}(Var'Unds'Gen3:SortVals{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("afefecb36598372bc1ba6e5d0b24a00b91796244dc3bd7435e40ca6e9ab33d4b"), owise{}()]

// rule isKResult(inj{KResult,KItem}(KResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f4c2469bcff9527515b6d36f16040307917bda61067d10b85fb531e142483bee)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f4c2469bcff9527515b6d36f16040307917bda61067d10b85fb531e142483bee")]

// rule isKResult(inj{Val,KItem}(_Gen0))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ab26b1c4a31b6be2c0bd3eb3113f4e578a4e99dc645547068f82ba6f3404755b), org.kframework.attributes.Location(Location(293,8,293,32)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(Var'Unds'Gen0:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ab26b1c4a31b6be2c0bd3eb3113f4e578a4e99dc645547068f82ba6f3404755b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(293,8,293,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule isKResult(inj{Vals,KItem}(_Gen0))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4eb1ae084f62c934084f5e1bbdfeedf6bef474b5f75890ab30c6ae64c3bc7f5d), org.kframework.attributes.Location(Location(294,8,294,33)), org.kframework.attributes.Source(Source(/home/qwyng/ktml/k/thread.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVals{}, SortKItem{}}(Var'Unds'Gen0:SortVals{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4eb1ae084f62c934084f5e1bbdfeedf6bef474b5f75890ab30c6ae64c3bc7f5d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(294,8,294,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a9489adcf0279eca74c012bb1130bb9d30372cfbebc8e4ab4b173656c4d6613), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'Gen1:SortList{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a9489adcf0279eca74c012bb1130bb9d30372cfbebc8e4ab4b173656c4d6613"), owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d4dddf5bbdb61cfd11fb9be1071be7bd551cf186607cf6f493cfade3221c446)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d4dddf5bbdb61cfd11fb9be1071be7bd551cf186607cf6f493cfade3221c446")]

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6f30a2087d0b19640df005437bc3f4665f41282666a72821b17b16c99ed5afee), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'Gen1:SortMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("6f30a2087d0b19640df005437bc3f4665f41282666a72821b17b16c99ed5afee"), owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4879c0fcf6b7d7f3d6b751e4f460f8dced005a44ae5ff600cffcea784cf58795)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4879c0fcf6b7d7f3d6b751e4f460f8dced005a44ae5ff600cffcea784cf58795")]

// rule isNextLocCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ce299bfa11df60b1ab8e344db37126b973556ae0abce0014d5df83715cbbaf2), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortNextLocCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextLocCell{}, SortKItem{}}(Var'Unds'Gen0:SortNextLocCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisNextLocCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0ce299bfa11df60b1ab8e344db37126b973556ae0abce0014d5df83715cbbaf2"), owise{}()]

// rule isNextLocCell(inj{NextLocCell,KItem}(NextLocCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b695baef67c554a1058db6603a0d54a093476077c041b0f351fe2cc82a28a48e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCell{}, SortKItem{}}(VarNextLocCell:SortNextLocCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisNextLocCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b695baef67c554a1058db6603a0d54a093476077c041b0f351fe2cc82a28a48e")]

// rule isNextLocCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(287166d3ab072071574e17e0fbf4b3c4a7fd417eddc4fb288f743b06a1a9f71e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortNextLocCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextLocCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortNextLocCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisNextLocCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("287166d3ab072071574e17e0fbf4b3c4a7fd417eddc4fb288f743b06a1a9f71e"), owise{}()]

// rule isNextLocCellOpt(inj{NextLocCellOpt,KItem}(NextLocCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4605686b1c1f515c7033f97dd87472304c1a07e6a03bb251c2feeb87fe1ad10)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCellOpt{}, SortKItem{}}(VarNextLocCellOpt:SortNextLocCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisNextLocCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a4605686b1c1f515c7033f97dd87472304c1a07e6a03bb251c2feeb87fe1ad10")]

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b5aadccd9b89faba72816867187d48d279d8c27c8bda1a1b3b0658bd82bb783), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'Gen1:SortSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2b5aadccd9b89faba72816867187d48d279d8c27c8bda1a1b3b0658bd82bb783"), owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f205bc460bdb728b4c3458643699be30d519db4d8b13e80e2c27082b9e846e80)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f205bc460bdb728b4c3458643699be30d519db4d8b13e80e2c27082b9e846e80")]

// rule isStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c458a8054966aa2159c80ce75561c1552b43a1862b38e89b3e2679f8bd5c1c0c), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'Gen1:SortStmt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c458a8054966aa2159c80ce75561c1552b43a1862b38e89b3e2679f8bd5c1c0c"), owise{}()]

// rule isStmt(inj{Stmt,KItem}(Stmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(477089570fa6db8ee9dc9b0dc4c87d68cd3cc0589ba3949a5eb4981db25246df)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarStmt:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("477089570fa6db8ee9dc9b0dc4c87d68cd3cc0589ba3949a5eb4981db25246df")]

// rule isStoreCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(809ca9c26beb895f93588d688e8a840e6eca1be1869b12e31ca880a58bd3c4da), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStoreCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreCell{}, SortKItem{}}(Var'Unds'Gen1:SortStoreCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStoreCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("809ca9c26beb895f93588d688e8a840e6eca1be1869b12e31ca880a58bd3c4da"), owise{}()]

// rule isStoreCell(inj{StoreCell,KItem}(StoreCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(263fb373387f648439377899d45b262e5c51926759bf2c8267de3417bbdadd55)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarStoreCell:SortStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStoreCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("263fb373387f648439377899d45b262e5c51926759bf2c8267de3417bbdadd55")]

// rule isStoreCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f6cb2c40fe6da1a24bd454de80e5918f02e80b913b2e8eb924a7ea72898feb73), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStoreCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortStoreCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStoreCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f6cb2c40fe6da1a24bd454de80e5918f02e80b913b2e8eb924a7ea72898feb73"), owise{}()]

// rule isStoreCellOpt(inj{StoreCellOpt,KItem}(StoreCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b6306e5c5c7ea25ad09bdafcc353f09f74824470ad9c87463c65ca63a636cd4)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarStoreCellOpt:SortStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStoreCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2b6306e5c5c7ea25ad09bdafcc353f09f74824470ad9c87463c65ca63a636cd4")]

// rule isStream(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(15e2e66b02746a7c3106ff32539631d15c0b184068a2767cfe37a26680aa442d), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStream{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStream{}, SortKItem{}}(Var'Unds'Gen1:SortStream{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("15e2e66b02746a7c3106ff32539631d15c0b184068a2767cfe37a26680aa442d"), owise{}()]

// rule isStream(inj{Stream,KItem}(Stream))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27e703343d82a904ab8f74cc74fe8c6870a94fa1f4df39e1c0230ae06e4783cc)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarStream:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("27e703343d82a904ab8f74cc74fe8c6870a94fa1f4df39e1c0230ae06e4783cc")]

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fbe29b27977283e8cb5b35f1b17a6b7b2abc92a7fca608d496b346f7b6918961), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fbe29b27977283e8cb5b35f1b17a6b7b2abc92a7fca608d496b346f7b6918961"), owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(109ced650ead4a5092ddba090e1b8e181633ed0aa5c5f93bce9f88be215668ef)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("109ced650ead4a5092ddba090e1b8e181633ed0aa5c5f93bce9f88be215668ef")]

// rule isTCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(550b3cc25922848b7174df3ee5d34bc31b7772daa1579d20e37b3c0d6c7a961d), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCell{}, SortKItem{}}(Var'Unds'Gen1:SortTCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("550b3cc25922848b7174df3ee5d34bc31b7772daa1579d20e37b3c0d6c7a961d"), owise{}()]

// rule isTCell(inj{TCell,KItem}(TCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b19c6d63df1e9cd6abc786c6c34fbd1b1f97cae6bf9fdba7b1275a02bd51205)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarTCell:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0b19c6d63df1e9cd6abc786c6c34fbd1b1f97cae6bf9fdba7b1275a02bd51205")]

// rule isTCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(704d5df7c717193a67d91aad6774acb5eb9fe2137515d5204768bf499f92270b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortTCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("704d5df7c717193a67d91aad6774acb5eb9fe2137515d5204768bf499f92270b"), owise{}()]

// rule isTCellFragment(inj{TCellFragment,KItem}(TCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1c94b538b3ecdc44697da9f227c0650540c8f233c5dba13f94071522c756c76)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarTCellFragment:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f1c94b538b3ecdc44697da9f227c0650540c8f233c5dba13f94071522c756c76")]

// rule isTCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3a11be25d71bcfe67274e7f5c5091d99dc524b8bc5a8ac8fe6c101e58c1895ca), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortTCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3a11be25d71bcfe67274e7f5c5091d99dc524b8bc5a8ac8fe6c101e58c1895ca"), owise{}()]

// rule isTCellOpt(inj{TCellOpt,KItem}(TCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d9e2efc934a1108a68dec355c0ce9420ec8c2292a856744f5d9014a10f5888c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarTCellOpt:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2d9e2efc934a1108a68dec355c0ce9420ec8c2292a856744f5d9014a10f5888c")]

// rule isTerminatedCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4bda4714765269b29b818bb9656bed767283467643264185a9cd90884a3dc251), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTerminatedCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTerminatedCell{}, SortKItem{}}(Var'Unds'Gen1:SortTerminatedCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTerminatedCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4bda4714765269b29b818bb9656bed767283467643264185a9cd90884a3dc251"), owise{}()]

// rule isTerminatedCell(inj{TerminatedCell,KItem}(TerminatedCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(08e0dc9dd31000f866e452e6fd33d11e9f621acfaf8f01599355e4c8aa29dd89)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCell{}, SortKItem{}}(VarTerminatedCell:SortTerminatedCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTerminatedCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("08e0dc9dd31000f866e452e6fd33d11e9f621acfaf8f01599355e4c8aa29dd89")]

// rule isTerminatedCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(92b1179343b6dddc7a76ca87696a29fafa5a34d65a9089a15ab02bf4830fc950), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTerminatedCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTerminatedCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortTerminatedCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTerminatedCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("92b1179343b6dddc7a76ca87696a29fafa5a34d65a9089a15ab02bf4830fc950"), owise{}()]

// rule isTerminatedCellOpt(inj{TerminatedCellOpt,KItem}(TerminatedCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(476bf6fc256e0f732dd103497053d4408ef253bd7cb87b78cfd6f581c9825427)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCellOpt{}, SortKItem{}}(VarTerminatedCellOpt:SortTerminatedCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTerminatedCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("476bf6fc256e0f732dd103497053d4408ef253bd7cb87b78cfd6f581c9825427")]

// rule isThreadCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fc4a8345b518691e3be1ee7e7687395ec6116ddd90816495a682921b5ff714f7), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadCell{}, SortKItem{}}(Var'Unds'Gen1:SortThreadCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fc4a8345b518691e3be1ee7e7687395ec6116ddd90816495a682921b5ff714f7"), owise{}()]

// rule isThreadCell(inj{ThreadCell,KItem}(ThreadCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(541b08557635d472f82cb50c2f7ad9eee01151e305f0fc595fd361ec113422b5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCell{}, SortKItem{}}(VarThreadCell:SortThreadCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("541b08557635d472f82cb50c2f7ad9eee01151e305f0fc595fd361ec113422b5")]

// rule isThreadCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(08dc8cbc05e7a6eea7080e02728529246a595fff985a08a39c10ae7230098ace), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortThreadCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("08dc8cbc05e7a6eea7080e02728529246a595fff985a08a39c10ae7230098ace"), owise{}()]

// rule isThreadCellFragment(inj{ThreadCellFragment,KItem}(ThreadCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c59ef93d0061cc84b55f0e7c246be465d5cda2f3a006255445694a5bd95c233)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(VarThreadCellFragment:SortThreadCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1c59ef93d0061cc84b55f0e7c246be465d5cda2f3a006255445694a5bd95c233")]

// rule isThreadCellSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cbe4ff9bd149d21d7073342baada876b5dd9967a7f227b4e0f8e4be87d9b287e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortThreadCellSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadCellSet{}, SortKItem{}}(Var'Unds'Gen0:SortThreadCellSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadCellSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("cbe4ff9bd149d21d7073342baada876b5dd9967a7f227b4e0f8e4be87d9b287e"), owise{}()]

// rule isThreadCellSet(inj{ThreadCellSet,KItem}(ThreadCellSet))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad95e4f6e440a1c05c909e82e6d765ec3a00d33e5f6d5115b207bedda4f9cf2c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellSet{}, SortKItem{}}(VarThreadCellSet:SortThreadCellSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadCellSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ad95e4f6e440a1c05c909e82e6d765ec3a00d33e5f6d5115b207bedda4f9cf2c")]

// rule isThreadsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a17cb26b0a6368cbc69013358a09e4ea5cc4e6cb967b805315fb57de3f646568), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadsCell{}, SortKItem{}}(Var'Unds'Gen1:SortThreadsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a17cb26b0a6368cbc69013358a09e4ea5cc4e6cb967b805315fb57de3f646568"), owise{}()]

// rule isThreadsCell(inj{ThreadsCell,KItem}(ThreadsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b1951c2cbb7822ac249d6d34f514fa5f074747e6e3b0e1ff8a529a27a7d0f15c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCell{}, SortKItem{}}(VarThreadsCell:SortThreadsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b1951c2cbb7822ac249d6d34f514fa5f074747e6e3b0e1ff8a529a27a7d0f15c")]

// rule isThreadsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1924f1f30de3b5369137fda9726d6541782d847979c51cda6ef5f74e385a6da9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortThreadsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadsCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortThreadsCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadsCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1924f1f30de3b5369137fda9726d6541782d847979c51cda6ef5f74e385a6da9"), owise{}()]

// rule isThreadsCellFragment(inj{ThreadsCellFragment,KItem}(ThreadsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(af41498fb93ed766ca100fee218a0e05b5f215cc3522aa83ca5afd9a12e36f2d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellFragment{}, SortKItem{}}(VarThreadsCellFragment:SortThreadsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadsCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("af41498fb93ed766ca100fee218a0e05b5f215cc3522aa83ca5afd9a12e36f2d")]

// rule isThreadsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(496250e977abb33f9cda510e1a9fad45a228150d13b4c12bd3f0c4a654b0bd05), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadsCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortThreadsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("496250e977abb33f9cda510e1a9fad45a228150d13b4c12bd3f0c4a654b0bd05"), owise{}()]

// rule isThreadsCellOpt(inj{ThreadsCellOpt,KItem}(ThreadsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a26acd6600aa95cc57cec80c6db303191a21f521d7c6df58cadba4bda5757db)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellOpt{}, SortKItem{}}(VarThreadsCellOpt:SortThreadsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a26acd6600aa95cc57cec80c6db303191a21f521d7c6df58cadba4bda5757db")]

// rule isVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(548534d9ef721dbcdf8e2c64c101722249cdcafc5636d96b03b7966e46e74581), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVal{}, SortKItem{}}(Var'Unds'Gen0:SortVal{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVal{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("548534d9ef721dbcdf8e2c64c101722249cdcafc5636d96b03b7966e46e74581"), owise{}()]

// rule isVal(inj{Val,KItem}(Val))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b5a0241c17a4586755b3028c3e3b0365371f29f68b2a247bb54c7837b5f7b8a3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(VarVal:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVal{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b5a0241c17a4586755b3028c3e3b0365371f29f68b2a247bb54c7837b5f7b8a3")]

// rule isVals(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c1c7d09c7524b9956ddfc973186c4ff9aae43870d5a6abfcaa1e385a7e4dbd1), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortVals{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVals{}, SortKItem{}}(Var'Unds'Gen1:SortVals{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVals{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9c1c7d09c7524b9956ddfc973186c4ff9aae43870d5a6abfcaa1e385a7e4dbd1"), owise{}()]

// rule isVals(inj{Vals,KItem}(Vals))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66a6d698755796480e7a58ce71677e50f8c057cfec148261225102b5f19e1c1b)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVals{}, SortKItem{}}(VarVals:SortVals{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVals{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("66a6d698755796480e7a58ce71677e50f8c057cfec148261225102b5f19e1c1b")]

// rule ite{K}(C,B1,_Gen0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(1ff8f4d71e4c13084eed473b08740da83c4cc7f1875d340d86dc72124c48b4a0), org.kframework.attributes.Location(Location(2324,8,2324,59)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarB1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lblite{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB1:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("1ff8f4d71e4c13084eed473b08740da83c4cc7f1875d340d86dc72124c48b4a0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2324,8,2324,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule ite{K}(C,_Gen0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(2f3f58a93926913fc5ca147dfd8d3d612508bc8ff67412ef10935df7c09554d5), org.kframework.attributes.Location(Location(2325,8,2325,67)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            Var'Unds'Gen0:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            VarB2:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lblite{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB2:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("2f3f58a93926913fc5ca147dfd8d3d612508bc8ff67412ef10935df7c09554d5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2325,8,2325,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(5615d5587c51d94a62fc99ae2458c06428585265e750fdc249083647f9d3d4c1), org.kframework.attributes.Location(Location(1439,8,1439,57)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI1:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("5615d5587c51d94a62fc99ae2458c06428585265e750fdc249083647f9d3d4c1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1439,8,1439,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1440,8,1440,57)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI2:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1440,8,1440,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(1128,8,1128,29)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1128,8,1128,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(1127,8,1127,29)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1127,8,1127,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `project:#tempFile:fd`(#tempFile(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(adb3a6d90d2e5267333e61f4e4be032bebb5f7a513450887a845c863a2adf95d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'tempFile'Coln'fd{}(X0:SortIOFile{}),
     \and{SortInt{}} (
       VarK1:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("adb3a6d90d2e5267333e61f4e4be032bebb5f7a513450887a845c863a2adf95d")]

// rule `project:#tempFile:path`(#tempFile(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0020b2718cda89e9c9f4d05915593ca66761a24dffb111c697ccc162278da8ea)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'ColnHash'tempFile'Coln'path{}(X0:SortIOFile{}),
     \and{SortString{}} (
       VarK0:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("0020b2718cda89e9c9f4d05915593ca66761a24dffb111c697ccc162278da8ea")]

// rule `project:#unknownIOError:errno`(#unknownIOError(K0))=>K0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a36cde36a6581696f3d54614cc0d2d0864c2da35c6c8dc8d56daaf8b24199241)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOError{}, R} (
            X0:SortIOError{},
            Lbl'Hash'unknownIOError{}(VarK0:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'unknownIOError'Coln'errno{}(X0:SortIOError{}),
     \and{SortInt{}} (
       VarK0:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("a36cde36a6581696f3d54614cc0d2d0864c2da35c6c8dc8d56daaf8b24199241")]

// rule `project:Block`(inj{Block,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85169c02924adb02b41be561762138c14d89ae8c9d3181b555ead907c42e2eb9), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlock{}, SortKItem{}}(VarK:SortBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBlock{},R} (
      Lblproject'Coln'Block{}(X0:SortK{}),
     \and{SortBlock{}} (
       VarK:SortBlock{},
        \top{SortBlock{}}())))
  [UNIQUE'Unds'ID{}("85169c02924adb02b41be561762138c14d89ae8c9d3181b555ead907c42e2eb9")]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5872f0d5b8131216db7bc41e2c3a423e55f4b8581589fcbd1bf93b2ca6862d54), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      Lblproject'Coln'Bool{}(X0:SortK{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5872f0d5b8131216db7bc41e2c3a423e55f4b8581589fcbd1bf93b2ca6862d54")]

// rule `project:BusyCell`(inj{BusyCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8813a6b39340c2ca16ddb0924791f2af808a2c8b20bf588fbe83448d5211a8c5), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCell{}, SortKItem{}}(VarK:SortBusyCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBusyCell{},R} (
      Lblproject'Coln'BusyCell{}(X0:SortK{}),
     \and{SortBusyCell{}} (
       VarK:SortBusyCell{},
        \top{SortBusyCell{}}())))
  [UNIQUE'Unds'ID{}("8813a6b39340c2ca16ddb0924791f2af808a2c8b20bf588fbe83448d5211a8c5")]

// rule `project:BusyCellOpt`(inj{BusyCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fb32ed69cd7a9358d3bfba81ff72f275766589c8055666c05ed886eb906c6299), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCellOpt{}, SortKItem{}}(VarK:SortBusyCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBusyCellOpt{},R} (
      Lblproject'Coln'BusyCellOpt{}(X0:SortK{}),
     \and{SortBusyCellOpt{}} (
       VarK:SortBusyCellOpt{},
        \top{SortBusyCellOpt{}}())))
  [UNIQUE'Unds'ID{}("fb32ed69cd7a9358d3bfba81ff72f275766589c8055666c05ed886eb906c6299")]

// rule `project:ControlCell`(inj{ControlCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07285d614d28227dcaad374fbe611cc7682bff2f58c9068428ec86252bbe2784), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCell{}, SortKItem{}}(VarK:SortControlCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortControlCell{},R} (
      Lblproject'Coln'ControlCell{}(X0:SortK{}),
     \and{SortControlCell{}} (
       VarK:SortControlCell{},
        \top{SortControlCell{}}())))
  [UNIQUE'Unds'ID{}("07285d614d28227dcaad374fbe611cc7682bff2f58c9068428ec86252bbe2784")]

// rule `project:CrntObjCellFragment`(inj{CrntObjCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f03c0ee2a77a0dbbd0ed5135d22892e23da3971304b93e58a591236f55af3ef7), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCrntObjCellFragment{}, SortKItem{}}(VarK:SortCrntObjCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCrntObjCellFragment{},R} (
      Lblproject'Coln'CrntObjCellFragment{}(X0:SortK{}),
     \and{SortCrntObjCellFragment{}} (
       VarK:SortCrntObjCellFragment{},
        \top{SortCrntObjCellFragment{}}())))
  [UNIQUE'Unds'ID{}("f03c0ee2a77a0dbbd0ed5135d22892e23da3971304b93e58a591236f55af3ef7")]

// rule `project:EnvCell`(inj{EnvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b495a73a47df541669cce91cff95ac71b4384f2bb1cbf111a39169996baf1c21), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCell{}, SortKItem{}}(VarK:SortEnvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvCell{},R} (
      Lblproject'Coln'EnvCell{}(X0:SortK{}),
     \and{SortEnvCell{}} (
       VarK:SortEnvCell{},
        \top{SortEnvCell{}}())))
  [UNIQUE'Unds'ID{}("b495a73a47df541669cce91cff95ac71b4384f2bb1cbf111a39169996baf1c21")]

// rule `project:EnvCellOpt`(inj{EnvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7b2185a82b0e56376fb20fa807d804be6799099fe18bf708a6578fc25d98742c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(VarK:SortEnvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvCellOpt{},R} (
      Lblproject'Coln'EnvCellOpt{}(X0:SortK{}),
     \and{SortEnvCellOpt{}} (
       VarK:SortEnvCellOpt{},
        \top{SortEnvCellOpt{}}())))
  [UNIQUE'Unds'ID{}("7b2185a82b0e56376fb20fa807d804be6799099fe18bf708a6578fc25d98742c")]

// rule `project:EnvStackCell`(inj{EnvStackCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6473829effa5606777bc63f2fbea21476ffdedf3c515f8f26ded32fe321264da), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvStackCell{}, SortKItem{}}(VarK:SortEnvStackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvStackCell{},R} (
      Lblproject'Coln'EnvStackCell{}(X0:SortK{}),
     \and{SortEnvStackCell{}} (
       VarK:SortEnvStackCell{},
        \top{SortEnvStackCell{}}())))
  [UNIQUE'Unds'ID{}("6473829effa5606777bc63f2fbea21476ffdedf3c515f8f26ded32fe321264da")]

// rule `project:Exp`(inj{Exp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9cd2bc2f2919e88b7c91858d910ebc06ec69505e24015e7346a27913f6b3d0c7), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarK:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExp{},R} (
      Lblproject'Coln'Exp{}(X0:SortK{}),
     \and{SortExp{}} (
       VarK:SortExp{},
        \top{SortExp{}}())))
  [UNIQUE'Unds'ID{}("9cd2bc2f2919e88b7c91858d910ebc06ec69505e24015e7346a27913f6b3d0c7")]

// rule `project:Exps`(inj{Exps,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(331fb545486ec7658a42a59c02212f98269fbac46ed5ede15648aafb72b6948a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarK:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExps{},R} (
      Lblproject'Coln'Exps{}(X0:SortK{}),
     \and{SortExps{}} (
       VarK:SortExps{},
        \top{SortExps{}}())))
  [UNIQUE'Unds'ID{}("331fb545486ec7658a42a59c02212f98269fbac46ed5ede15648aafb72b6948a")]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef206f477d884c0b6413273ff35b1206769cdb5a5ceba7b97d9e8e0a7b14e399), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFloat{},R} (
      Lblproject'Coln'Float{}(X0:SortK{}),
     \and{SortFloat{}} (
       VarK:SortFloat{},
        \top{SortFloat{}}())))
  [UNIQUE'Unds'ID{}("ef206f477d884c0b6413273ff35b1206769cdb5a5ceba7b97d9e8e0a7b14e399")]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63453db9d9aa121b63bb877e2fa4998d399ef82d2a1e4b90f87a32ba55401217), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      Lblproject'Coln'GeneratedCounterCell{}(X0:SortK{}),
     \and{SortGeneratedCounterCell{}} (
       VarK:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("63453db9d9aa121b63bb877e2fa4998d399ef82d2a1e4b90f87a32ba55401217")]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9325a900267ae528f7cd09f3b44b825dd9ff344c38d38383c08fa697cc67efca), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCellOpt{},R} (
      Lblproject'Coln'GeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortGeneratedCounterCellOpt{}} (
       VarK:SortGeneratedCounterCellOpt{},
        \top{SortGeneratedCounterCellOpt{}}())))
  [UNIQUE'Unds'ID{}("9325a900267ae528f7cd09f3b44b825dd9ff344c38d38383c08fa697cc67efca")]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0fabd8c7c81fe08ebd569aff59747d357e441ae1fcd05d9d594d57e38e3d55e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      Lblproject'Coln'GeneratedTopCell{}(X0:SortK{}),
     \and{SortGeneratedTopCell{}} (
       VarK:SortGeneratedTopCell{},
        \top{SortGeneratedTopCell{}}())))
  [UNIQUE'Unds'ID{}("b0fabd8c7c81fe08ebd569aff59747d357e441ae1fcd05d9d594d57e38e3d55e")]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2084fac322aa142a07f881814b8a286bf62d5c6d05777b7aa715ccc534cf9a42), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCellFragment{},R} (
      Lblproject'Coln'GeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortGeneratedTopCellFragment{}} (
       VarK:SortGeneratedTopCellFragment{},
        \top{SortGeneratedTopCellFragment{}}())))
  [UNIQUE'Unds'ID{}("2084fac322aa142a07f881814b8a286bf62d5c6d05777b7aa715ccc534cf9a42")]

// rule `project:HoldsCell`(inj{HoldsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df6d7101e7fd8a8b5e80a7434c06e0caecab00b6e36532ad0f0791b897921564), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCell{}, SortKItem{}}(VarK:SortHoldsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortHoldsCell{},R} (
      Lblproject'Coln'HoldsCell{}(X0:SortK{}),
     \and{SortHoldsCell{}} (
       VarK:SortHoldsCell{},
        \top{SortHoldsCell{}}())))
  [UNIQUE'Unds'ID{}("df6d7101e7fd8a8b5e80a7434c06e0caecab00b6e36532ad0f0791b897921564")]

// rule `project:HoldsCellOpt`(inj{HoldsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(30b9c3ce55b6b9239f397edb2380c28c38c76194283f754728876352fa6e9e3c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCellOpt{}, SortKItem{}}(VarK:SortHoldsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortHoldsCellOpt{},R} (
      Lblproject'Coln'HoldsCellOpt{}(X0:SortK{}),
     \and{SortHoldsCellOpt{}} (
       VarK:SortHoldsCellOpt{},
        \top{SortHoldsCellOpt{}}())))
  [UNIQUE'Unds'ID{}("30b9c3ce55b6b9239f397edb2380c28c38c76194283f754728876352fa6e9e3c")]

// rule `project:IOError`(inj{IOError,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ffe32516a0c3941ee4ba99c0f779b50c13a06e7eeb613f97334efb61b50c3aa), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarK:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOError{},R} (
      Lblproject'Coln'IOError{}(X0:SortK{}),
     \and{SortIOError{}} (
       VarK:SortIOError{},
        \top{SortIOError{}}())))
  [UNIQUE'Unds'ID{}("7ffe32516a0c3941ee4ba99c0f779b50c13a06e7eeb613f97334efb61b50c3aa")]

// rule `project:IOFile`(inj{IOFile,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(09adbf7f680517f1f89e4e8c71d5bd247c4a2ea5d62e7c4aeb3153ab97239841), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarK:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOFile{},R} (
      Lblproject'Coln'IOFile{}(X0:SortK{}),
     \and{SortIOFile{}} (
       VarK:SortIOFile{},
        \top{SortIOFile{}}())))
  [UNIQUE'Unds'ID{}("09adbf7f680517f1f89e4e8c71d5bd247c4a2ea5d62e7c4aeb3153ab97239841")]

// rule `project:IOInt`(inj{IOInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e39565377db8be1e421a86f0a0c31d0782a9af4aed7031245771fcb2a0152e06), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarK:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lblproject'Coln'IOInt{}(X0:SortK{}),
     \and{SortIOInt{}} (
       VarK:SortIOInt{},
        \top{SortIOInt{}}())))
  [UNIQUE'Unds'ID{}("e39565377db8be1e421a86f0a0c31d0782a9af4aed7031245771fcb2a0152e06")]

// rule `project:IOString`(inj{IOString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(76a39386f0abf23155a1642ec64113306ae7c384a59c2e7f562d3c564efcc9a4), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarK:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOString{},R} (
      Lblproject'Coln'IOString{}(X0:SortK{}),
     \and{SortIOString{}} (
       VarK:SortIOString{},
        \top{SortIOString{}}())))
  [UNIQUE'Unds'ID{}("76a39386f0abf23155a1642ec64113306ae7c384a59c2e7f562d3c564efcc9a4")]

// rule `project:Id`(inj{Id,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afcb3941b7c18d4b91d6ed8981582d58e0dc006425e9889e9891c2a7c2b93554), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarK:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      Lblproject'Coln'Id{}(X0:SortK{}),
     \and{SortId{}} (
       VarK:SortId{},
        \top{SortId{}}())))
  [UNIQUE'Unds'ID{}("afcb3941b7c18d4b91d6ed8981582d58e0dc006425e9889e9891c2a7c2b93554")]

// rule `project:IdCell`(inj{IdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ddf90ca52ddd3ec6cc10d2169e2f964bd73e115fa3c39eda960a768a5646e37a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCell{}, SortKItem{}}(VarK:SortIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIdCell{},R} (
      Lblproject'Coln'IdCell{}(X0:SortK{}),
     \and{SortIdCell{}} (
       VarK:SortIdCell{},
        \top{SortIdCell{}}())))
  [UNIQUE'Unds'ID{}("ddf90ca52ddd3ec6cc10d2169e2f964bd73e115fa3c39eda960a768a5646e37a")]

// rule `project:IdCellOpt`(inj{IdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cdb7ab08d99b95d0885970106325700f24bcab2fe03178655bc1877c3b00fa45), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(VarK:SortIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIdCellOpt{},R} (
      Lblproject'Coln'IdCellOpt{}(X0:SortK{}),
     \and{SortIdCellOpt{}} (
       VarK:SortIdCellOpt{},
        \top{SortIdCellOpt{}}())))
  [UNIQUE'Unds'ID{}("cdb7ab08d99b95d0885970106325700f24bcab2fe03178655bc1877c3b00fa45")]

// rule `project:Ids`(inj{Ids,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(616cc1b1e21370edf69fad9b4f6e3daa30b491b2f55827a5efbd41d7c60eaf07), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIds{}, SortKItem{}}(VarK:SortIds{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIds{},R} (
      Lblproject'Coln'Ids{}(X0:SortK{}),
     \and{SortIds{}} (
       VarK:SortIds{},
        \top{SortIds{}}())))
  [UNIQUE'Unds'ID{}("616cc1b1e21370edf69fad9b4f6e3daa30b491b2f55827a5efbd41d7c60eaf07")]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f316b871091516c401f1d2382cc5f66322602b782c7b01e1aeb6c2ddab50e24b), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'Coln'Int{}(X0:SortK{}),
     \and{SortInt{}} (
       VarK:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("f316b871091516c401f1d2382cc5f66322602b782c7b01e1aeb6c2ddab50e24b")]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25b529ddcefd25ef63f99a62040145ef27638e7679ea9202218fe14be98dff3a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortK{},R} (
      Lblproject'Coln'K{}(X0:SortK{}),
     \and{SortK{}} (
       VarK:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("25b529ddcefd25ef63f99a62040145ef27638e7679ea9202218fe14be98dff3a")]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(894c13c4c410f11e35bc3781505aeddde4ff400ddda1daf8b35259dbf0de9a24), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      Lblproject'Coln'KCell{}(X0:SortK{}),
     \and{SortKCell{}} (
       VarK:SortKCell{},
        \top{SortKCell{}}())))
  [UNIQUE'Unds'ID{}("894c13c4c410f11e35bc3781505aeddde4ff400ddda1daf8b35259dbf0de9a24")]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f684dd78d97feadf0cbcb3cbb8892e0842f137c7b29a904cb2f3fc9755b29b30), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCellOpt{},R} (
      Lblproject'Coln'KCellOpt{}(X0:SortK{}),
     \and{SortKCellOpt{}} (
       VarK:SortKCellOpt{},
        \top{SortKCellOpt{}}())))
  [UNIQUE'Unds'ID{}("f684dd78d97feadf0cbcb3cbb8892e0842f137c7b29a904cb2f3fc9755b29b30")]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1242e49c17638c9a66a35e3bb8c237288f7e9aa9a6499101e8cdc55be320cd29), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarK:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKItem{},R} (
      Lblproject'Coln'KItem{}(X0:SortK{}),
     \and{SortKItem{}} (
       VarK:SortKItem{},
        \top{SortKItem{}}())))
  [UNIQUE'Unds'ID{}("1242e49c17638c9a66a35e3bb8c237288f7e9aa9a6499101e8cdc55be320cd29")]

// rule `project:KResult`(inj{KResult,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07a916f84d6294528a6d07f273fb778b316d52b4ef8204a1817b105750b2b734), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarK:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKResult{},R} (
      Lblproject'Coln'KResult{}(X0:SortK{}),
     \and{SortKResult{}} (
       VarK:SortKResult{},
        \top{SortKResult{}}())))
  [UNIQUE'Unds'ID{}("07a916f84d6294528a6d07f273fb778b316d52b4ef8204a1817b105750b2b734")]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b75eac5a59779d336e6cf9632bf9ba7d67286f322e753108b34e62f2443efe5), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortList{},R} (
      Lblproject'Coln'List{}(X0:SortK{}),
     \and{SortList{}} (
       VarK:SortList{},
        \top{SortList{}}())))
  [UNIQUE'Unds'ID{}("2b75eac5a59779d336e6cf9632bf9ba7d67286f322e753108b34e62f2443efe5")]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(031237d4aae58d86914d6370d37ccd15f4738378ed780333c59cc81b4f7bc598), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMap{},R} (
      Lblproject'Coln'Map{}(X0:SortK{}),
     \and{SortMap{}} (
       VarK:SortMap{},
        \top{SortMap{}}())))
  [UNIQUE'Unds'ID{}("031237d4aae58d86914d6370d37ccd15f4738378ed780333c59cc81b4f7bc598")]

// rule `project:NextLocCell`(inj{NextLocCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9473952bb15427edfbba6aee0b7b8eddc9636102b4f361d6e78dfa8884fd12e9), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCell{}, SortKItem{}}(VarK:SortNextLocCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortNextLocCell{},R} (
      Lblproject'Coln'NextLocCell{}(X0:SortK{}),
     \and{SortNextLocCell{}} (
       VarK:SortNextLocCell{},
        \top{SortNextLocCell{}}())))
  [UNIQUE'Unds'ID{}("9473952bb15427edfbba6aee0b7b8eddc9636102b4f361d6e78dfa8884fd12e9")]

// rule `project:NextLocCellOpt`(inj{NextLocCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3cfe105a69f8dab22a1e7487145c1a3235e274e1366b3e6841842f2e827c28da), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCellOpt{}, SortKItem{}}(VarK:SortNextLocCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortNextLocCellOpt{},R} (
      Lblproject'Coln'NextLocCellOpt{}(X0:SortK{}),
     \and{SortNextLocCellOpt{}} (
       VarK:SortNextLocCellOpt{},
        \top{SortNextLocCellOpt{}}())))
  [UNIQUE'Unds'ID{}("3cfe105a69f8dab22a1e7487145c1a3235e274e1366b3e6841842f2e827c28da")]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e7f5070c993161786e314f7199d985afebac9e07b5c784f6f623780c60ce9d0), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSet{},R} (
      Lblproject'Coln'Set{}(X0:SortK{}),
     \and{SortSet{}} (
       VarK:SortSet{},
        \top{SortSet{}}())))
  [UNIQUE'Unds'ID{}("0e7f5070c993161786e314f7199d985afebac9e07b5c784f6f623780c60ce9d0")]

// rule `project:Stmt`(inj{Stmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dea7f879e640dc866a6ac853d51a70b1ded2d1fda72c3c4a7fbded3b9e6e2500), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarK:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStmt{},R} (
      Lblproject'Coln'Stmt{}(X0:SortK{}),
     \and{SortStmt{}} (
       VarK:SortStmt{},
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("dea7f879e640dc866a6ac853d51a70b1ded2d1fda72c3c4a7fbded3b9e6e2500")]

// rule `project:StoreCell`(inj{StoreCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea6339f4ec3416c0b28a7d5f724eb8c0ab774ba489fea04ff1bbe51e966da9ff), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarK:SortStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStoreCell{},R} (
      Lblproject'Coln'StoreCell{}(X0:SortK{}),
     \and{SortStoreCell{}} (
       VarK:SortStoreCell{},
        \top{SortStoreCell{}}())))
  [UNIQUE'Unds'ID{}("ea6339f4ec3416c0b28a7d5f724eb8c0ab774ba489fea04ff1bbe51e966da9ff")]

// rule `project:StoreCellOpt`(inj{StoreCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d788267f4233745214a06930b7d15195b97e04c2d221e75ca13344767e1c2d7), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarK:SortStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStoreCellOpt{},R} (
      Lblproject'Coln'StoreCellOpt{}(X0:SortK{}),
     \and{SortStoreCellOpt{}} (
       VarK:SortStoreCellOpt{},
        \top{SortStoreCellOpt{}}())))
  [UNIQUE'Unds'ID{}("5d788267f4233745214a06930b7d15195b97e04c2d221e75ca13344767e1c2d7")]

// rule `project:Stream`(inj{Stream,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb30b432f6a3a9b73f42f0d3a54e07645be55c26bdee9d5c513f06e8009d0a77), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarK:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStream{},R} (
      Lblproject'Coln'Stream{}(X0:SortK{}),
     \and{SortStream{}} (
       VarK:SortStream{},
        \top{SortStream{}}())))
  [UNIQUE'Unds'ID{}("bb30b432f6a3a9b73f42f0d3a54e07645be55c26bdee9d5c513f06e8009d0a77")]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e491dad8f644d2344f08cb72af01ade1e6ce9f564010a2de7909b3b6c7e2ae85), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'Coln'String{}(X0:SortK{}),
     \and{SortString{}} (
       VarK:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("e491dad8f644d2344f08cb72af01ade1e6ce9f564010a2de7909b3b6c7e2ae85")]

// rule `project:TCell`(inj{TCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8f26b10396db28857112a7db56ab3ef6b64a5c219427baf3f17e0e1fb39ad1ba), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarK:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      Lblproject'Coln'TCell{}(X0:SortK{}),
     \and{SortTCell{}} (
       VarK:SortTCell{},
        \top{SortTCell{}}())))
  [UNIQUE'Unds'ID{}("8f26b10396db28857112a7db56ab3ef6b64a5c219427baf3f17e0e1fb39ad1ba")]

// rule `project:TCellFragment`(inj{TCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fcf28c9054cbb906b0631404e7190aa02f1fa3a4a09ec0d3024688ee1222c76c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarK:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellFragment{},R} (
      Lblproject'Coln'TCellFragment{}(X0:SortK{}),
     \and{SortTCellFragment{}} (
       VarK:SortTCellFragment{},
        \top{SortTCellFragment{}}())))
  [UNIQUE'Unds'ID{}("fcf28c9054cbb906b0631404e7190aa02f1fa3a4a09ec0d3024688ee1222c76c")]

// rule `project:TCellOpt`(inj{TCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d3df5db294a6f5330dba88e63f8fdddee2bee164f110ca7e39e65afc4cfbb85a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarK:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellOpt{},R} (
      Lblproject'Coln'TCellOpt{}(X0:SortK{}),
     \and{SortTCellOpt{}} (
       VarK:SortTCellOpt{},
        \top{SortTCellOpt{}}())))
  [UNIQUE'Unds'ID{}("d3df5db294a6f5330dba88e63f8fdddee2bee164f110ca7e39e65afc4cfbb85a")]

// rule `project:TerminatedCell`(inj{TerminatedCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2513dd2443eb7dd1ddf56b566e5d0c5322b0ed9fe8da079da187a10f8df1e271), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCell{}, SortKItem{}}(VarK:SortTerminatedCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTerminatedCell{},R} (
      Lblproject'Coln'TerminatedCell{}(X0:SortK{}),
     \and{SortTerminatedCell{}} (
       VarK:SortTerminatedCell{},
        \top{SortTerminatedCell{}}())))
  [UNIQUE'Unds'ID{}("2513dd2443eb7dd1ddf56b566e5d0c5322b0ed9fe8da079da187a10f8df1e271")]

// rule `project:TerminatedCellOpt`(inj{TerminatedCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(59814babbcb44ca22f20916ac9efc28f86b36b5231d52b655f270f010d4fb054), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCellOpt{}, SortKItem{}}(VarK:SortTerminatedCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTerminatedCellOpt{},R} (
      Lblproject'Coln'TerminatedCellOpt{}(X0:SortK{}),
     \and{SortTerminatedCellOpt{}} (
       VarK:SortTerminatedCellOpt{},
        \top{SortTerminatedCellOpt{}}())))
  [UNIQUE'Unds'ID{}("59814babbcb44ca22f20916ac9efc28f86b36b5231d52b655f270f010d4fb054")]

// rule `project:ThreadCell`(inj{ThreadCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22d20be4f03b1b90e8d0b723016f3314da0e2254c4d12a734a29e34a422280f0), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCell{}, SortKItem{}}(VarK:SortThreadCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadCell{},R} (
      Lblproject'Coln'ThreadCell{}(X0:SortK{}),
     \and{SortThreadCell{}} (
       VarK:SortThreadCell{},
        \top{SortThreadCell{}}())))
  [UNIQUE'Unds'ID{}("22d20be4f03b1b90e8d0b723016f3314da0e2254c4d12a734a29e34a422280f0")]

// rule `project:ThreadCellFragment`(inj{ThreadCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0c28c08c307445fd3128dac705965e7d26bc5a71d811f28a5f5e7cba628e9cb9), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(VarK:SortThreadCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadCellFragment{},R} (
      Lblproject'Coln'ThreadCellFragment{}(X0:SortK{}),
     \and{SortThreadCellFragment{}} (
       VarK:SortThreadCellFragment{},
        \top{SortThreadCellFragment{}}())))
  [UNIQUE'Unds'ID{}("0c28c08c307445fd3128dac705965e7d26bc5a71d811f28a5f5e7cba628e9cb9")]

// rule `project:ThreadCellSet`(inj{ThreadCellSet,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a29de2f992ad7f0e7d7c2ea356d0ab307d56fb4ea33cce41e861f7940202d18a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellSet{}, SortKItem{}}(VarK:SortThreadCellSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadCellSet{},R} (
      Lblproject'Coln'ThreadCellSet{}(X0:SortK{}),
     \and{SortThreadCellSet{}} (
       VarK:SortThreadCellSet{},
        \top{SortThreadCellSet{}}())))
  [UNIQUE'Unds'ID{}("a29de2f992ad7f0e7d7c2ea356d0ab307d56fb4ea33cce41e861f7940202d18a")]

// rule `project:ThreadsCell`(inj{ThreadsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8dbb60342d3e687005156ca5a6e532ac187345a8ad2308f46488014c9e648f0e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCell{}, SortKItem{}}(VarK:SortThreadsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCell{},R} (
      Lblproject'Coln'ThreadsCell{}(X0:SortK{}),
     \and{SortThreadsCell{}} (
       VarK:SortThreadsCell{},
        \top{SortThreadsCell{}}())))
  [UNIQUE'Unds'ID{}("8dbb60342d3e687005156ca5a6e532ac187345a8ad2308f46488014c9e648f0e")]

// rule `project:ThreadsCellFragment`(inj{ThreadsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ff5039e845945382e828233376a67e62de8f76125806d2dc8e5b1f8b6ad3d4e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellFragment{}, SortKItem{}}(VarK:SortThreadsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCellFragment{},R} (
      Lblproject'Coln'ThreadsCellFragment{}(X0:SortK{}),
     \and{SortThreadsCellFragment{}} (
       VarK:SortThreadsCellFragment{},
        \top{SortThreadsCellFragment{}}())))
  [UNIQUE'Unds'ID{}("7ff5039e845945382e828233376a67e62de8f76125806d2dc8e5b1f8b6ad3d4e")]

// rule `project:ThreadsCellOpt`(inj{ThreadsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2ce7d7889fbebfa5eb908560189b36e9a4b88d4086458b6450ac3c113519e6ff), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellOpt{}, SortKItem{}}(VarK:SortThreadsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCellOpt{},R} (
      Lblproject'Coln'ThreadsCellOpt{}(X0:SortK{}),
     \and{SortThreadsCellOpt{}} (
       VarK:SortThreadsCellOpt{},
        \top{SortThreadsCellOpt{}}())))
  [UNIQUE'Unds'ID{}("2ce7d7889fbebfa5eb908560189b36e9a4b88d4086458b6450ac3c113519e6ff")]

// rule `project:Val`(inj{Val,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(150c95b45e4aa067c3d3df9777c501a0c0693c6b14033fddfccc142e4e37cda8), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(VarK:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVal{},R} (
      Lblproject'Coln'Val{}(X0:SortK{}),
     \and{SortVal{}} (
       VarK:SortVal{},
        \top{SortVal{}}())))
  [UNIQUE'Unds'ID{}("150c95b45e4aa067c3d3df9777c501a0c0693c6b14033fddfccc142e4e37cda8")]

// rule `project:Vals`(inj{Vals,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9617e1fd27b97573fc4670a94913c39412e946a063e3dd4a1dac234d3a17ed02), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVals{}, SortKItem{}}(VarK:SortVals{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVals{},R} (
      Lblproject'Coln'Vals{}(X0:SortK{}),
     \and{SortVals{}} (
       VarK:SortVals{},
        \top{SortVals{}}())))
  [UNIQUE'Unds'ID{}("9617e1fd27b97573fc4670a94913c39412e946a063e3dd4a1dac234d3a17ed02")]

// rule pushList(K,L1)=>`_List_`(`ListItem`(K),L1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f6967050cc4ec32c2d34d52f5577e09120f730420d2c5dc838cba81d04c57adf), org.kframework.attributes.Location(Location(954,8,954,54)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortKItem{}, R} (
            X0:SortKItem{},
            VarK:SortKItem{}
          ),\and{R} (
          \in{SortList{}, R} (
            X1:SortList{},
            VarL1:SortList{}
          ),
          \top{R} ()
        ))),
    \equals{SortList{},R} (
      LblpushList{}(X0:SortKItem{},X1:SortList{}),
     \and{SortList{}} (
       Lbl'Unds'List'Unds'{}(LblListItem{}(VarK:SortKItem{}),VarL1:SortList{}),
        \top{SortList{}}())))
  [UNIQUE'Unds'ID{}("f6967050cc4ec32c2d34d52f5577e09120f730420d2c5dc838cba81d04c57adf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(954,8,954,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_andBool_`(`_>Int_`(Count,#token("0","Int")),`_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(4d80f4d63262761f305ff16a13c7b187891f796dbdb8f8bc0c2387a37c01cd6d), org.kframework.attributes.Location(Location(1900,8,1903,79)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarCount:SortInt{}
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("4d80f4d63262761f305ff16a13c7b187891f796dbdb8f8bc0c2387a37c01cd6d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1900,8,1903,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,_Gen0,_Gen1,Count)=>Source requires `_>=Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8baee90bc16d350bd96511a574002886bac6fd9d5017c31b773c5064b69c5f79), org.kframework.attributes.Location(Location(1904,8,1905,31)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)]), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen5:SortInt{},
          \exists{R} (Var'Unds'Gen2:SortString{},
          \exists{R} (Var'Unds'Gen3:SortString{},
          \exists{R} (Var'Unds'Gen4:SortString{},
            \and{R} (
              \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(Var'Unds'Gen5:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(Var'Unds'Gen2:SortString{},Var'Unds'Gen3:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
              \and{R} (
                \in{SortString{}, R} (
                  X0:SortString{},
                  Var'Unds'Gen2:SortString{}
                ),\and{R} (
                \in{SortString{}, R} (
                  X1:SortString{},
                  Var'Unds'Gen3:SortString{}
                ),\and{R} (
                \in{SortString{}, R} (
                  X2:SortString{},
                  Var'Unds'Gen4:SortString{}
                ),\and{R} (
                \in{SortInt{}, R} (
                  X3:SortInt{},
                  Var'Unds'Gen5:SortInt{}
                ),
                \top{R} ()
              ))))
          ))))),
          \bottom{R}()
        )
      ),
      \and{R}(
        \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
        \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen1:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarCount:SortInt{}
          ),
          \top{R} ()
        ))))
    )),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("8baee90bc16d350bd96511a574002886bac6fd9d5017c31b773c5064b69c5f79"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1904,8,1905,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)"), owise{}()]

// rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5), org.kframework.attributes.Location(Location(1906,8,1906,154)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{})),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1906,8,1906,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c), org.kframework.attributes.Location(Location(1890,8,1892,66)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{}))),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1890,8,1892,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,_Gen0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34), org.kframework.attributes.Location(Location(1893,8,1894,57)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen0:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1893,8,1894,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205), org.kframework.attributes.Location(Location(1882,8,1882,182)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1882,8,1882,182)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6), org.kframework.attributes.Location(Location(1883,8,1883,33)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1883,8,1883,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1429,8,1429,164)), org.kframework.attributes.Source(Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1429,8,1429,164)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/ypmgx48wria95g7my6vvqc3sjiywrc66-k-7.1.142-6e23a83e5380f9eae45a73e3956776f2e666da35/include/kframework/builtin/domains.md)")]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,1,295,10)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/qwyng/ktml/k/thread.md)")]
